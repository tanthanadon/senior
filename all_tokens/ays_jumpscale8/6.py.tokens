def init_actions_ ( service , args ) :      return { <str> : [ <str> ] }  def test ( job ) :      import requests , sys service = job . service try :          g8client = service . producers [ <str> ] [ 0 ] url = <str> + g8client . model . data . url username = g8client . model . data . login password = g8client . model . data . password login_url = url + <str> credential = { <str> : username , <str> : password } session = requests . Session ( ) session . post ( url = login_url , data = credential ) accounts = service . producers [ <str> ] API_URL = url + <str> for account in accounts :              accountId = account . model . data . accountID account_specs = [ account . model . data . maxMemoryCapacity , account . model . data . maxDiskCapacity , account . model . data . maxNumPublicIP , account . model . data . maxCPUCapacity ] API_BODY = { <str> : accountId } response = session . post ( url = API_URL , data = API_BODY ) specs = response . json ( ) [ <str> ] actual_account_specs = [ specs [ <str> ] , specs [ <str> ] , specs [ <str> ] , specs [ <str> ] ] if ( response . status_code != 200 ) or ( actual_account_specs != account_specs ) :                  response_data = { <str> : response . status_code , <str> : response . content } service . model . data . result = <str> % ( <str> , str ( response_data ) ) break   else :              service . model . data . result = <str> % <str>   except :          service . model . data . result = <str> % ( <str> , str ( sys . exc_info ( ) [ : 2 ] ) )  service . save ( )   