from __future__ import print_function import tensorflow as tf import numpy as np import odl import odl . contrib . tensorflow sess = tf . InteractiveSession ( ) tf . global_variables_initializer ( ) . run ( ) space = odl . uniform_discr ( [ - 64 , - 64 ] , [ 64 , 64 ] , [ 128 , 128 ] , dtype = <str> ) geometry = odl . tomo . parallel_beam_geometry ( space ) ray_transform = odl . tomo . RayTransform ( space , geometry ) x = tf . constant ( np . asarray ( ray_transform . domain . one ( ) ) ) z = tf . constant ( np . asarray ( ray_transform . range . one ( ) ) ) odl_op_layer = odl . contrib . tensorflow . as_tensorflow_layer ( ray_transform , <str> ) x_reshaped = x [ None , ... , None ] z_reshaped = z [ None , ... , None ] y = odl_op_layer ( x_reshaped ) print ( y . eval ( ) ) print ( ray_transform ( x . eval ( ) ) ) scale = ray_transform . range . cell_volume / ray_transform . domain . cell_volume print ( tf . gradients ( y , [ x_reshaped ] , z_reshaped ) [ 0 ] . eval ( ) * scale ) print ( ray_transform . derivative ( x . eval ( ) ) . adjoint ( z . eval ( ) ) )  