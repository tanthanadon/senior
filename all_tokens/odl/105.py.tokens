import numpy as np import odl from odl . contrib import fom space = odl . uniform_discr ( min_pt = [ - 20 , - 20 ] , max_pt = [ 20 , 20 ] , shape = [ 512 , 512 ] ) phantom = odl . phantom . shepp_logan ( space , modified = True ) phantom . show ( <str> ) op = odl . tomo . RayTransform ( space , odl . tomo . parallel_beam_geometry ( space ) ) fbp_op = odl . tomo . fbp_op ( op , filter_type = <str> , frequency_scaling = 0.5 ) noisy_data = op ( phantom ) + odl . phantom . white_noise ( op . range ) reconstruction = fbp_op ( noisy_data ) reconstruction . show ( <str> ) nps = fom . noise_power_spectrum ( reconstruction , phantom ) np . log ( nps ) . show ( <str> ) radial_nps = fom . noise_power_spectrum ( reconstruction , phantom , radial = True ) radial_nps . show ( <str> )  