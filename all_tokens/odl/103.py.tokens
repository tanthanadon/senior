import odl from odl . contrib import fom import numpy as np import matplotlib . pyplot as plt reco_space = odl . uniform_discr ( min_pt = [ - 20 , - 20 ] , max_pt = [ 20 , 20 ] , shape = [ 100 , 100 ] ) phantom = odl . phantom . shepp_logan ( reco_space , modified = True ) mse = [ ] mae = [ ] mvd = [ ] std_diff = [ ] range_diff = [ ] blur = [ ] false_struct = [ ] ssim = [ ] psnr = [ ] haarpsi = [ ] mask = ( np . asarray ( phantom ) == 1 ) for stddev in np . linspace ( 0.1 , 10 , 100 ) :      phantom_noisy = phantom + odl . phantom . white_noise ( reco_space , stddev = stddev ) mse . append ( fom . mean_squared_error ( phantom_noisy , phantom , normalized = True ) ) mae . append ( fom . mean_absolute_error ( phantom_noisy , phantom , normalized = True ) ) mvd . append ( fom . mean_value_difference ( phantom_noisy , phantom , normalized = True ) ) std_diff . append ( fom . standard_deviation_difference ( phantom_noisy , phantom , normalized = True ) ) range_diff . append ( fom . range_difference ( phantom_noisy , phantom , normalized = True ) ) blur . append ( fom . blurring ( phantom_noisy , phantom , mask , normalized = True , smoothness_factor = 30 ) ) false_struct . append ( fom . false_structures ( phantom_noisy , phantom , mask , normalized = True , smoothness_factor = 30 ) ) ssim . append ( fom . ssim ( phantom_noisy , phantom ) ) psnr . append ( fom . psnr ( phantom_noisy , phantom , normalized = True ) ) haarpsi . append ( fom . haarpsi ( phantom_noisy , phantom ) )  fig , ax = plt . subplots ( ) ax . plot ( mse , label = <str> ) ax . plot ( mae , label = <str> ) ax . plot ( mvd , label = <str> ) ax . plot ( std_diff , label = <str> ) ax . plot ( range_diff , label = <str> ) ax . plot ( blur , label = <str> ) ax . plot ( false_struct , label = <str> ) ax . plot ( ssim , label = <str> ) ax . plot ( haarpsi , label = <str> ) plt . legend ( loc = <str> , fancybox = True , shadow = True , ncol = 1 ) ax . set_xlabel ( <str> ) ax . set_ylabel ( <str> ) plt . title ( <str> ) fig . show ( )  