from openerp import models , api from openerp . exceptions import except_orm from openerp . tools . translate import _ from datetime import datetime as dt class ExpenseReportParser ( models . AbstractModel ) :      _name = <str> @ api . multi def render_html ( self , data = None ) :          report_obj = self . env [ <str> ] report_name = <str> if not data :              raise except_orm ( _ ( <str> ) , _ ( <str> ) )  line_objs = { } for partner_id in data [ <str> ] :              partner = self . env [ <str> ] . browse ( int ( partner_id ) ) if partner_id != <str> else False line_ids = data [ <str> ] [ partner_id ] [ 1 ] line_objs [ partner ] = ( data [ <str> ] [ partner_id ] [ 0 ] , self . env [ <str> ] . browse ( line_ids ) )  start = data . get ( <str> , False ) end = data . get ( <str> , False ) summary_description = data . get ( <str> , False ) if start :              start = dt . strptime ( start , <str> ) . strftime ( <str> )  if end :              end = dt . strptime ( end , <str> ) . strftime ( <str> )  docargs = { <str> : [ ] , <str> : <str> , <str> : line_objs . keys ( ) , <str> : line_objs , <str> : start , <str> : end , <str> : summary_description } return report_obj . render ( report_name , docargs )    