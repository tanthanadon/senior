from openerp import models , api , exceptions , _ from openerp . tools . float_utils import float_compare class StockTransferDetails ( models . TransientModel ) :      _inherit = <str> @ api . one def do_detailed_transfer ( self ) :          picking = self . picking_id location_obj = self . env [ <str> ] stock_loc_id = [ x . lot_stock_id . id for x in self . env [ <str> ] . search ( [ ] ) ] totals = { } for line in self . item_ids :              if line . product_id . type == <str> :                  if line . sourceloc_id . id not in location_obj . search ( [ ( <str> , <str> , stock_loc_id ) ] ) . _ids :                      continue  if line . product_id . id not in totals :                      totals [ line . product_id . id ] = { }  if line . lot_id . id not in totals [ line . product_id . id ] :                      totals [ line . product_id . id ] [ line . lot_id . id ] = { }  if line . sourceloc_id . id not in totals [ line . product_id . id ] [ line . lot_id . id ] :                      totals [ line . product_id . id ] [ line . lot_id . id ] [ line . sourceloc_id . id ] = 0.0  line_qty_uom = self . env [ <str> ] . _compute_qty ( line . product_uom_id . id , line . quantity , line . product_id . uom_id . id ) totals [ line . product_id . id ] [ line . lot_id . id ] [ line . sourceloc_id . id ] += line_qty_uom   for product in self . env [ <str> ] . browse ( totals . keys ( ) ) :              for lot in totals [ product . id ] . keys ( ) :                  for location in location_obj . browse ( totals [ product . id ] [ lot ] . keys ( ) ) :                      quant_vals = [ ( <str> , <str> , product . id ) , ( <str> , <str> , lot ) , ( <str> , <str> , location . id ) , <str> , ( <str> , <str> , picking . id ) , ( <str> , <str> , False ) ] quants = self . env [ <str> ] . search ( quant_vals ) total_qty = sum ( [ x [ <str> ] for x in quants . read ( [ <str> ] ) ] ) difference = float_compare ( total_qty , totals [ product . id ] [ lot ] [ location . id ] , precision_rounding = product . uom_id . rounding ) if difference < 0 :                          error_message = _ ( <str> ) % ( location . name , product . name ) if lot :                              error_message += _ ( <str> ) % self . env [ <str> ] . browse ( lot ) . name  raise exceptions . Warning ( _ ( <str> ) , error_message )     return super ( StockTransferDetails , self ) . do_detailed_transfer ( )    