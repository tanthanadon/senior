from openerp . addons . account_financial_report_webkit . report . common_balance_reports import CommonBalanceReportHeaderWebkit if <str> not in dir ( CommonBalanceReportHeaderWebkit ) :      CommonBalanceReportHeaderWebkit . old_get_comparison_details = CommonBalanceReportHeaderWebkit . _get_comparison_details  def _get_comparison_details ( self , data , account_ids , target_move , comparison_filter , index ) :      fiscalyear = self . _get_info ( data , <str> % ( index , ) , <str> ) start_period = self . _get_info ( data , <str> % ( index , ) , <str> ) stop_period = self . _get_info ( data , <str> % ( index , ) , <str> ) start_date = self . _get_form_param ( <str> % ( index , ) , data ) stop_date = self . _get_form_param ( <str> % ( index , ) , data ) init_balance = self . is_initial_balance_enabled ( comparison_filter ) accounts_by_ids = { } comp_params = { } details_filter = comparison_filter if comparison_filter != <str> :          start_period , stop_period , start , stop = self . _get_start_stop_for_filter ( comparison_filter , fiscalyear , start_date , stop_date , start_period , stop_period ) if comparison_filter == <str> :              details_filter = <str>  initial_balance_mode = init_balance and self . _get_initial_balance_mode ( start ) or False accounts_by_ids = self . _get_account_details ( account_ids , target_move , fiscalyear , details_filter , start , stop , initial_balance_mode , context = data [ <str> ] [ <str> ] ) comp_params = { <str> : comparison_filter , <str> : fiscalyear , <str> : start , <str> : stop , <str> : init_balance , <str> : initial_balance_mode , }  return accounts_by_ids , comp_params  CommonBalanceReportHeaderWebkit . _get_comparison_details = _get_comparison_details if <str> not in dir ( CommonBalanceReportHeaderWebkit ) :      CommonBalanceReportHeaderWebkit . old_compute_balance_data = CommonBalanceReportHeaderWebkit . compute_balance_data  def compute_balance_data ( self , data , filter_report_type = None ) :          new_ids = data [ <str> ] [ <str> ] or data [ <str> ] [ <str> ] max_comparison = self . _get_form_param ( <str> , data , default = 0 ) main_filter = self . _get_form_param ( <str> , data , default = <str> ) comp_filters , nb_comparisons , comparison_mode = self . _comp_filters ( data , max_comparison ) fiscalyear = self . get_fiscalyear_br ( data ) start_period = self . get_start_period_br ( data ) stop_period = self . get_end_period_br ( data ) target_move = self . _get_form_param ( <str> , data , default = <str> ) start_date = self . _get_form_param ( <str> , data ) stop_date = self . _get_form_param ( <str> , data ) chart_account = self . _get_chart_account_id_br ( data ) start_period , stop_period , start , stop = self . _get_start_stop_for_filter ( main_filter , fiscalyear , start_date , stop_date , start_period , stop_period ) init_balance = self . is_initial_balance_enabled ( main_filter ) initial_balance_mode = init_balance and self . _get_initial_balance_mode ( start ) or False account_ids = self . get_all_accounts ( new_ids , only_type = filter_report_type ) accounts_by_ids = self . _get_account_details ( account_ids , target_move , fiscalyear , main_filter , start , stop , initial_balance_mode , context = data [ <str> ] [ <str> ] ) comparison_params = [ ] comp_accounts_by_ids = [ ] for index in range ( max_comparison ) :              if comp_filters [ index ] != <str> :                  comparison_result , comp_params = self . _get_comparison_details ( data , account_ids , target_move , comp_filters [ index ] , index ) comparison_params . append ( comp_params ) comp_accounts_by_ids . append ( comparison_result )   objects = self . pool . get ( <str> ) . browse ( self . cursor , self . uid , account_ids ) to_display_accounts = dict . fromkeys ( account_ids , True ) init_balance_accounts = dict . fromkeys ( account_ids , False ) comparisons_accounts = dict . fromkeys ( account_ids , [ ] ) debit_accounts = dict . fromkeys ( account_ids , False ) credit_accounts = dict . fromkeys ( account_ids , False ) balance_accounts = dict . fromkeys ( account_ids , False ) for account in objects :              if not account . parent_id :                  continue  if account . type == <str> :                  to_display_accounts . update ( dict ( [ ( a . id , False ) for a in account . child_consol_ids ] ) )  elif account . type == <str> :                  to_display_accounts . update ( dict ( [ ( a . id , True ) for a in account . child_id ] ) )  debit_accounts [ account . id ] = accounts_by_ids [ account . id ] [ <str> ] credit_accounts [ account . id ] = accounts_by_ids [ account . id ] [ <str> ] balance_accounts [ account . id ] = accounts_by_ids [ account . id ] [ <str> ] init_balance_accounts [ account . id ] = accounts_by_ids [ account . id ] . get ( <str> , 0.0 ) display_account = False comp_accounts = [ ] for comp_account_by_id in comp_accounts_by_ids :                  values = comp_account_by_id . get ( account . id ) values . update ( self . _get_diff ( account . balance , values [ <str> ] ) ) display_account = any ( ( values . get ( <str> , 0.0 ) , values . get ( <str> , 0.0 ) , values . get ( <str> , 0.0 ) , values . get ( <str> , 0.0 ) ) ) comp_accounts . append ( values )  comparisons_accounts [ account . id ] = comp_accounts display_account = display_account or any ( ( debit_accounts [ account . id ] , credit_accounts [ account . id ] , balance_accounts [ account . id ] , init_balance_accounts [ account . id ] ) ) to_display_accounts . update ( { account . id : display_account and to_display_accounts [ account . id ] } )  context_report_values = { <str> : fiscalyear , <str> : start_date , <str> : stop_date , <str> : start_period , <str> : stop_period , <str> : chart_account , <str> : comparison_mode , <str> : nb_comparisons , <str> : init_balance , <str> : initial_balance_mode , <str> : comparison_params , <str> : to_display_accounts , <str> : init_balance_accounts , <str> : comparisons_accounts , <str> : debit_accounts , <str> : credit_accounts , <str> : balance_accounts , } return objects , new_ids , context_report_values  CommonBalanceReportHeaderWebkit . compute_balance_data = compute_balance_data  