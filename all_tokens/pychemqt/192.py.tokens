from configparser import ConfigParser import os import shutil import sys sys . path . insert ( 0 , os . path . abspath ( <str> ) ) os . environ [ <str> ] = os . path . abspath ( <str> ) conf_dir = os . path . expanduser ( <str> ) + os . sep + <str> + os . sep if not os . path . isdir ( conf_dir ) :      os . mkdir ( conf_dir )  try :      open ( conf_dir + <str> , <str> )  except FileExistsError :      pass  from tools import firstrun default_Preferences = firstrun . Preferences ( ) change = False if not os . path . isfile ( conf_dir + <str> ) :      default_Preferences . write ( open ( conf_dir + <str> , <str> ) ) Preferences = default_Preferences change = True  else :      Preferences = ConfigParser ( ) Preferences . read ( conf_dir + <str> ) for section in default_Preferences . sections ( ) :          if not Preferences . has_section ( section ) :              Preferences . add_section ( section ) change = True  for option in default_Preferences . options ( section ) :              if not Preferences . has_option ( section , option ) :                  value = default_Preferences . get ( section , option ) Preferences . set ( section , option , value ) change = True    if change :          Preferences . write ( open ( conf_dir + <str> , <str> ) )   if not os . path . isfile ( conf_dir + <str> ) :      Config = firstrun . config ( ) Config . write ( open ( conf_dir + <str> , <str> ) )  if not os . path . isfile ( conf_dir + <str> ) :          orig = os . path . join ( os . environ [ <str> ] , <str> , <str> ) with open ( orig ) as cost_index :              lista = cost_index . readlines ( ) [ - 1 ] . split ( <str> ) with open ( conf_dir + <str> , <str> ) as archivo :                  for data in lista :                      archivo . write ( data . replace ( os . linesep , <str> ) + os . linesep )     origen = os . path . join ( os . environ [ <str> ] , <str> , <str> ) shutil . copy ( origen , conf_dir + <str> ) if not os . path . isfile ( conf_dir + <str> ) :      firstrun . createDatabase ( conf_dir + <str> )   