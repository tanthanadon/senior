<str> from scipy . constants import R from lib . EoS . cubic import Cubic class PRYuLu ( Cubic ) :      <str> __title__ = <str> __status__ = <str> __doi__ = { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , def __init__ ( self , T , P , mezcla ) :          self . T = T self . P = P self . mezcla = mezcla ai = [ ] bi = [ ] ci = [ ] for cmp in mezcla . componente :              a , b , c = self . _lib ( cmp , T ) ai . append ( a ) bi . append ( b ) ci . append ( c )  am , bm , cm = self . _mixture ( None , mezcla . ids , [ ai , bi , ci ] ) self . ai = ai self . bi = bi self . b = bm self . tita = am self . delta = 3 * bm + cm self . epsilon = bm * cm super ( PRYuLu , self ) . __init__ ( T , P , mezcla )  def _lib ( self , cmp , T ) :          Tr = T / cmp . Tc Omegaa = 0.468630 - 0.0378304 * cmp . f_acent + 0.00751969 * cmp . f_acent ** 2 Omegab = 0.0892828 - 0.0340903 * cmp . f_acent - 0.00518289 * cmp . f_acent ** 2 u = 1.70083 + 0.648463 * cmp . f_acent + 0.895926 * cmp . f_acent ** 2 w = u - 3 Omegac = w * Omegab if cmp . f_acent <= 0.49 :              M = 0.406846 + 1.87907 * cmp . f_acent - 0.792636 * cmp . f_acent ** 2 + 0.737519 * cmp . f_acent ** 3 A0 = 0.536843 A1 = - 0.39244 A2 = 0.26507  else :              M = 0.581981 - 0.171416 * cmp . f_acent + 1.84441 * cmp . f_acent ** 2 - 1.19047 * cmp . f_acent ** 3 A0 = 0.79355 A1 = - 0.53409 A2 = 0.37273  if Tr > 1 :              alfa = 10 ** ( M * ( A0 + A1 + A2 ) * ( 1 - Tr ) )  else :              alfa = 10 ** ( M * ( A0 + A1 * Tr + A2 * Tr ** 2 ) * ( 1 - Tr ) )  a = Omegaa * alfa * R ** 2 * cmp . Tc ** 2 / cmp . Pc b = Omegab * R * cmp . Tc / cmp . Pc c = Omegac * R * cmp . Tc / cmp . Pc return a , b , c   if __name__ == <str> :      from lib . mezcla import Mezcla mix = Mezcla ( 5 , ids = [ 4 ] , caudalMolar = 1 , fraccionMolar = [ 1 ] ) eq = PRYuLu ( 300 , 9.9742e5 , mix ) print ( <str> % ( eq . Vg . ccmol , eq . Vl . ccmol ) ) eq = PRYuLu ( 300 , 42.477e5 , mix ) print ( <str> % ( eq . Vl . ccmol ) )   