from unittest import TestCase from lib import unidades from lib . meos import MEoS class R161 ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 302.0010921 ) Tc = unidades . Temperature ( 375.25 ) Pc = unidades . Pressure ( 5046.0 , <str> ) M = 48.0595 Tt = unidades . Temperature ( 130.0 ) Tb = unidades . Temperature ( 235.6 ) f_acent = 0.216 momentoDipolar = unidades . DipoleMoment ( 1.9397 , <str> ) id = 247 Fi1 = { <str> : [ 1 , 3 ] , <str> : [ 0 , 1 ] , <str> : [ - 6.9170707460 , 5.4837900434 ] , <str> : [ 1.08888 , 1.80842 , 8.72417 , 5.67715 ] , <str> : [ 329 / Tc , 742 / Tc , 1644 / Tc , 3922 / Tc ] } Fi2 = { <str> : [ 1 , 3 ] , <str> : [ 0 , 1 ] , <str> : [ - 6.9187 , 5.4788 ] , <str> : [ 2.059 , 9.253 , 6.088 ] , <str> : [ 420 / Tc , 1548 / Tc , 3882 / Tc ] } CP1 = { <str> : 3.985 , <str> : [ ] , <str> : [ ] , <str> : [ 2.077 , 9.265 , 6.054 ] , <str> : [ 420 , 1548 , 3882 ] } qi = { <str> : <str> , <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.3144621 , <str> : 375.25 , <str> : 6.2839 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 420.0 , <str> : 100000.0 , <str> : 18 , <str> : [ 0.005145283 , - 0.001882274 , 1.884722 , - 3.1819965 , - 0.24432415 , 0.27792467 ] , <str> : [ 5 , 4 , 1 , 1 , 2 , 3 ] , <str> : [ 1 , 0.68 , 0.32 , 0.92 , 1.23 , 0.846 ] , <str> : [ - 0.4414064 , - 0.402065 , 0.24171113 , - 0.16603585 , - 0.03440867 , - 0.000099185 ] , <str> : [ 1 , 3 , 2 , 2 , 7 , 5 ] , <str> : [ 4.208 , 3.06 , 1.85 , 4.28 , 1.003 , 1.12 ] , <str> : [ 2 , 2 , 1 , 2 , 1 , 1 ] , <str> : [ 1 ] * 6 , <str> : [ 1.0146668 , - 0.03542609 , - 0.006038245 , - 0.025437558 , - 0.00515678 , 0.006396804 ] , <str> : [ 1 , 1 , 3 , 3 , 2 , 2 ] , <str> : [ 1.055 , 0.8 , 4.08 , 1.6 , 3.85 , 0.57 ] , <str> : [ 0.96212 , 3.2147 , 2.6288 , 0.8657 , 2.3839 , 1.7814 ] , <str> : [ 0.62848 , 4.5968 , 4.9696 , 0.239 , 0.788 , 7.0874 ] , <str> : [ 1.9363 , 1.5054 , 1.3691 , 2.3594 , 0.5581 , 0.6326 ] , <str> : [ 0.70192 , 1.23824 , 0.73324 , 0.6258 , 1.564 , 1.4861 ] } wu = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi2 , <str> : { <str> : 273.15 , <str> : 1. , <str> : 28559.6 , <str> : 167.205 } , <str> : Tt , <str> : 450.0 , <str> : 5000.0 , <str> : 20.0 , <str> : [ 1.511 , - 2.3 , - 0.457 , 0.1683 , 0.04133 ] , <str> : [ 1 , 1 , 2 , 3 , 4 ] , <str> : [ 0.37 , 0.97 , 1.14 , 0.744 , 1. ] , <str> : [ 0.62187 , - 0.0265 , - 1.03 , - 0.285 , - 0.476 ] , <str> : [ 2 , 7 , 1 , 2 , 3 ] , <str> : [ 1.26 , 1. , 1.8 , 3. , 2.25 ] , <str> : [ 1 , 1 , 2 , 2 , 2 ] , <str> : [ 1 ] * 5 , <str> : [ 0.82 , - 0.3532 , - 0.116 , - 0.0220583 , - 1.63148 ] , <str> : [ 11 , 1 , 3 , 3 , 3 ] , <str> : [ 1 , 1.2 , 5.3 , 1 , 4 ] , <str> : [ 0.96 , 1.35 , 1.26 , 1.23 , 16.8 ] , <str> : [ 2.7 , 5.2 , 3.9 , 4.7 , 413 ] , <str> : [ 0.9 , 0.69 , 0.67 , 0.67 , 1.15 ] , <str> : [ 0.683 , 0.892 , 0.785 , 1.33 , 0.86 ] } refprop = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : CP1 , <str> : <str> , <str> : Tt , <str> : 400.0 , <str> : 50000.0 , <str> : 20.0 , <str> : [ 0.75688 , - 1.4110 , - 0.63922 , 0.055685 , 0.00028395 ] , <str> : [ 1 , 1 , 1 , 3 , 7 ] , <str> : [ 0.25 , 1.25 , 1.5 , 0.25 , 0.875 ] , <str> : [ .73357 , .67596 , .011369 , - .56406 , - .094362 , - .1678 , .00034215 ] , <str> : [ 1 , 2 , 5 , 1 , 1 , 4 , 2 ] , <str> : [ 2.375 , 2.0 , 2.125 , 3.5 , 6.5 , 4.75 , 12.5 ] , <str> : [ 1 , 1 , 1 , 2 , 2 , 2 , 2 ] , <str> : [ 1 ] * 7 } eq = qi , wu , refprop _surface = { <str> : [ 0.05385 ] , <str> : [ 1.111 ] } _vapor_Pressure = { <str> : 3 , <str> : [ - 8.977955 , 25.64713 , - 80.33162 , 89.22478 , - 34.33593 ] , <str> : [ 1.0 , 1.5 , 1.84 , 2.11 , 2.47 ] } _liquid_Density = { <str> : 1 , <str> : [ 2.11404 , 6.25555 , - 16.12805 , 116.00294 , - 233.6455 , 149.54793 ] , <str> : [ 0.46 , 1.08 , 1.71 , 3.56 , 4.44 , 5.51 ] } _vapor_Density = { <str> : 2 , <str> : [ - 2.26823 , 1.39859 , - 27.93344 , 49.91536 , - 50.51966 ] , <str> : [ 0.3 , 0.88 , 1.46 , 2.1 , 2.82 ] } visco0 = { <str> : <str> , <str> : { <str> : <str> <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 1 , <str> : 0.021357 , <str> : 320.39 , <str> : 0.4457 , <str> : [ 0.24130 , - 0.45 ] , <str> : 320.39 , <str> : [ - 19.572881 , 219.73999 , - 1015.3226 , 2471.0125 , - 3375.1717 , 2491.6597 , - 787.26086 , 14.085455 , - 0.34664158 ] , <str> : [ 0 , - 0.25 , - 0.5 , - 0.75 , - 1 , - 1.25 , - 1.5 , - 2.5 , - 5.5 ] , <str> : Tc , <str> : 302.001 , <str> : [ - 10.28373 , 7.65563 , 4.842 , 0.42223 ] , <str> : [ - 0.5 , - 0.5 , - 2.5 , - 0.5 ] , <str> : [ 2 / 3 , 5 / 3 , 2 / 3 , 14 / 3 ] , <str> : [ 64.34983 , 64.34983 ] , <str> : [ - 1.5 , - 0.5 ] , <str> : [ 2 / 3 , 5 / 3 ] , <str> : [ 10.99213 , - 1 ] , <str> : [ - 2 , - 2 ] , <str> : [ 0 , 2 ] } _viscosity = visco0 , thermo0 = { <str> : <str> , <str> : { <str> : <str> <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : Tc , <str> : 1e-3 , <str> : [ 7.96804 , - 12.5874 , - 26.3743 , 16.9894 , 127.545 , - 32.548 ] , <str> : [ 0 , 1 , 2 , 3 , 4 , 5 ] , <str> : [ 5.406 , - 18.8331 , 24.868 , - 9.14139 , 1 ] , <str> : [ 0 , 1 , 2 , 3 , 4 ] , <str> : Tc , <str> : 302.001 , <str> : 1e-3 , <str> : [ - 8.41553 , 7.41456 , - 39.7744 , 44.0586 , 106.179 , - 81.9833 , - 53.2351 , 37.6052 , 8.23094 , - 4.90293 ] , <str> : [ 0 , - 1 , 0 , - 1 , 0 , - 1 , 0 , - 1 , 0 , - 1 ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 5 , 5 ] , <str> : 3 , <str> : 0.63 , <str> : 1.239 , <str> : 1.02 , <str> : 0.183e-9 , <str> : 0.055 , <str> : 3.104e-10 , <str> : 562.88 } _thermal = thermo0 ,  class Test ( TestCase ) :      def test_Tsolakidou ( self ) :          st = R161 ( T = 250 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 0.1880 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 789.54 ) self . assertEqual ( round ( st . Gas . rho , 2 ) , 4.63 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 2 ) , 204.34 ) self . assertEqual ( round ( st . Gas . mu . muPas , 2 ) , 8.15 ) self . assertEqual ( round ( st . Liquido . k . mWmK , 2 ) , 140.98 ) self . assertEqual ( round ( st . Gas . k . mWmK , 2 ) , 9.92 ) st = R161 ( T = 275 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 0.4639 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 745.02 ) self . assertEqual ( round ( st . Gas . rho , 2 ) , 10.96 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 2 ) , 152.87 ) self . assertEqual ( round ( st . Gas . mu . muPas , 2 ) , 8.86 ) self . assertEqual ( round ( st . Liquido . k . mWmK , 2 ) , 125.46 ) self . assertEqual ( round ( st . Gas . k . mWmK , 2 ) , 13.03 ) st = R161 ( T = 300 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 0.9716 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 693.43 ) self . assertEqual ( round ( st . Gas . rho , 2 ) , 22.76 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 2 ) , 115.89 ) self . assertEqual ( round ( st . Gas . mu . muPas , 2 ) , 9.64 ) self . assertEqual ( round ( st . Liquido . k . mWmK , 2 ) , 110.40 ) self . assertEqual ( round ( st . Gas . k . mWmK , 2 ) , 16.56 ) st = R161 ( T = 325 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 1.8072 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 631.73 ) self . assertEqual ( round ( st . Gas . rho , 2 ) , 43.92 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 2 ) , 87.59 ) self . assertEqual ( round ( st . Gas . mu . muPas , 2 ) , 10.68 ) self . assertEqual ( round ( st . Liquido . k . mWmK , 2 ) , 95.79 ) self . assertEqual ( round ( st . Gas . k . mWmK , 2 ) , 21.36 ) st = R161 ( T = 350 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 3.0880 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 551.03 ) self . assertEqual ( round ( st . Gas . rho , 2 ) , 84.51 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 2 ) , 63.78 ) self . assertEqual ( round ( st . Gas . mu . muPas , 2 ) , 12.54 ) self . assertEqual ( round ( st . Liquido . k . mWmK , 2 ) , 81.95 ) self . assertEqual ( round ( st . Gas . k . mWmK , 2 ) , 30.41 ) st = R161 ( T = 250 , P = 1e7 ) self . assertEqual ( round ( st . rho , 1 ) , 803.6 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 223.3 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 147.9 ) st = R161 ( T = 275 , P = 1e7 ) self . assertEqual ( round ( st . rho , 1 ) , 764.0 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 169.6 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 133.1 ) st = R161 ( T = 300 , P = 1e7 ) self . assertEqual ( round ( st . rho , 1 ) , 719.8 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 131.8 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 118.9 ) st = R161 ( T = 325 , P = 1e7 ) self . assertEqual ( round ( st . rho , 1 ) , 670.0 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 103.7 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 105.4 ) st = R161 ( T = 350 , P = 1e7 ) self . assertEqual ( round ( st . rho , 1 ) , 612.6 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 81.80 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 92.7 ) st = R161 ( T = 250 , P = 2e7 ) self . assertEqual ( round ( st . rho , 1 ) , 815.9 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 242.0 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 154.3 ) st = R161 ( T = 275 , P = 2e7 ) self . assertEqual ( round ( st . rho , 1 ) , 780.1 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 185.9 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 140.2 ) st = R161 ( T = 300 , P = 2e7 ) self . assertEqual ( round ( st . rho , 1 ) , 741.5 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 147.1 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 126.9 ) st = R161 ( T = 325 , P = 2e7 ) self . assertEqual ( round ( st . rho , 1 ) , 699.9 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 118.9 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 114.4 ) st = R161 ( T = 250 , rho = 0 ) self . assertEqual ( round ( st . mu . muPas , 3 ) , 8.280 ) self . assertEqual ( round ( st . k . mWmK , 3 ) , 9.892 ) st = R161 ( T = 250 , rho = 1 ) self . assertEqual ( round ( st . mu . muPas , 3 ) , 8.255 ) self . assertEqual ( round ( st . k . mWmK , 3 ) , 9.884 ) st = R161 ( T = 250 , rho = 850 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 308.22 ) self . assertEqual ( round ( st . k . mWmK , 2 ) , 175.48 ) st = R161 ( T = 375 , rho = 0 ) self . assertEqual ( round ( st . mu . muPas , 3 ) , 12.171 ) self . assertEqual ( round ( st . k . mWmK , 3 ) , 24.517 ) st = R161 ( T = 375 , rho = 229 ) self . assertEqual ( round ( st . mu . muPas , 3 ) , 20.859 ) self . assertEqual ( round ( st . k . mWmK , 3 ) , 81.297 )    