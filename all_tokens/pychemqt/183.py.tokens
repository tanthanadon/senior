from unittest import TestCase from lib import unidades from lib . meos import MEoS class HCl ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 410.96998439164605 ) Tc = unidades . Temperature ( 324.55 ) Pc = unidades . Pressure ( 8263.00 , <str> ) M = 36.460939 Tt = unidades . Temperature ( 131.4 ) Tb = unidades . Temperature ( 188.199 ) f_acent = 0.12875 momentoDipolar = unidades . DipoleMoment ( 1.079 , <str> ) id = 104 Fi1 = { <str> : [ 1 , 2.5 ] , <str> : [ 0 , 1 , - 1 , - 2 ] , <str> : [ 7.913048 , - 3.217575 , - 4.149937e-3 , 8.019202e-4 ] , <str> : [ 1.054392 ] , <str> : [ 1.241138e1 ] } thol = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi1 , <str> : <str> , <str> : 155.0 , <str> : 330.0 , <str> : 20000.0 , <str> : 33.8145 , <str> : [ - .40937325 , 0.943994574 , - 1.78830477 , 0.128619044 , 4.39018427e-3 , 0.0130480908 , 1.69387782e-3 ] , <str> : [ 1 , 1 , 1 , 2 , 3 , 3 , 5 ] , <str> : [ - 0.75 , - 0.25 , 1.25 , 0.75 , - 1.0 , - 0.375 , 1.25 ] , <str> : [ 0.751559060 , - 0.800007427 , 0.430935939 , 4.54319457e-3 , - 1.52172259e-1 , - 4.36174059e-2 , - 9.70625964e-3 , 1.01144098e-2 , 3.76991644e-3 ] , <str> : [ 1 , 1 , 2 , 5 , 1 , 3 , 4 , 5 , 2 ] , <str> : [ 2.375 , 3.0 , 2.625 , 1.875 , 4.5 , 5.75 , 5.375 , 2.75 , 14.5 ] , <str> : [ 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 3 ] , <str> : [ 1 ] * 9 } eq = thol , _vapor_Pressure = { <str> : 3 , <str> : [ - 0.01065138 , - 6.15979914 , 1.55860976 , - 8.42734117 ] , <str> : [ 1 / 2 , 2 / 2 , 6 / 2 , 11 / 2 ] } _liquid_Density = { <str> : 1 , <str> : [ 1.89232034 , 0.83621066 , - 0.22094602 , 4.70971253 , - 5.34396174 ] , <str> : [ 1 / 3 , 2 / 3 , 4 / 3 , 11 / 3 , 13 / 3 ] } _vapor_Density = { <str> : 2 , <str> : [ - 2.95523223 , - 8.10448179 , - 14.78392979 , - 87.13352586 ] , <str> : [ 1.29 / 3 , 4.2 / 3 , 11.1 / 3 , 24 / 3 ] }  class Test ( TestCase ) :      def test_thol ( self ) :          st = HCl ( T = 170 , rho = 0.01 ) self . assertEqual ( round ( st . P . MPa , 9 ) , 0.000387586 ) self . assertEqual ( round ( st . h . kJkg , 5 ) , - 102.41433 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , 0.82032 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 0.57116 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 0.79948 ) self . assertEqual ( round ( st . w , 5 ) , 232.89853 ) st = HCl ( T = 170 , rho = 1230 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 1.2292 ) self . assertEqual ( round ( st . h . kJkg , 5 ) , - 561.33940 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , - 2.88832 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 1.14972 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 1.55394 ) self . assertEqual ( round ( st . w , 3 ) , 999.439 ) st = HCl ( T = 280 , rho = 0.1 ) self . assertEqual ( round ( st . P . MPa , 5 ) , 0.00638 ) self . assertEqual ( round ( st . h . kJkg , 4 ) , - 14.6144 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , 0.58003 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 0.57147 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 0.80008 ) self . assertEqual ( round ( st . w , 5 ) , 298.83636 ) st = HCl ( T = 280 , rho = 900 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 3.4219 ) self . assertEqual ( round ( st . h . kJkg , 5 ) , - 371.03600 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , - 2.04410 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 0.96150 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 2.15083 ) self . assertEqual ( round ( st . w , 4 ) , 577.7828 )    