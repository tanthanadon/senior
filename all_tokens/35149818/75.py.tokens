class Solution ( object ) :      def isSubsequence ( self , s , t ) :          d = { } for idx , c in enumerate ( t ) :              d [ c ] = [ idx ] if c not in d else d [ c ] + [ idx ]  prev = float ( <str> ) for c in s :              if c not in d :                  return False  cur_list = d [ c ] cur_list_len = len ( cur_list ) j = self . binary_search ( cur_list , prev ) if j == cur_list_len :                  return False  prev = cur_list [ j ]  return True  def binary_search ( self , l , t ) :          if len ( l ) == 1 :              return 0 if l [ 0 ] > t else 1  begin , end = 0 , len ( l ) - 1 while begin < end :              mid = ( begin + end ) / 2 if l [ mid ] <= t :                  begin = mid + 1  else :                  end = mid   return begin    