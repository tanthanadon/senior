class Solution ( object ) :      def letterCombinations ( self , digits ) :          if not digits :              return [ ]  d = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] def dfs ( cur_str , cur_idx , result ) :              if cur_idx == len ( digits ) :                  result . append ( cur_str ) return  cur_digit = int ( digits [ cur_idx ] ) for l in d [ cur_digit ] :                  cur_str += l dfs ( cur_str , cur_idx + 1 , result ) cur_str = cur_str [ : - 1 ]   result = [ ] dfs ( <str> , 0 , result ) return result    