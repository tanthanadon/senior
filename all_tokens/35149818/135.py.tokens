class Solution :      def findSubtree2 ( self , root ) :          def helper ( r , result ) :              if not r : return 0 , 0 l_sum , l_count = helper ( r . left , result ) r_sum , r_count = helper ( r . right , result ) cur_avg = ( l_sum + r_sum + r . val ) / ( ( l_count + r_count + 1 ) * 1.0 ) if cur_avg > result [ 0 ] :                  result [ 0 ] , result [ 1 ] = cur_avg , r  return l_sum + r_sum + r . val , l_count + r_count + 1  result = [ float ( <str> ) , None ] helper ( root , result ) return result [ 1 ]    