class Solution ( object ) :      def lengthOfLongestSubstring ( self , s ) :          if not s :              return 0  if len ( s ) == 1 :              return 1  slow , longest = 0 , float ( <str> ) d = set ( ) for fast in xrange ( len ( s ) ) :              cur_char = s [ fast ] if cur_char not in d :                  longest = max ( longest , fast - slow + 1 ) d . add ( cur_char )  else :                  while s [ slow ] != cur_char :                      d . remove ( s [ slow ] ) slow += 1  slow += 1   return longest   class Solution ( object ) :      def lengthOfLongestSubstring ( self , s ) :          if not s :              return 0  if len ( s ) == 1 :              return 1  slow , longest = 0 , float ( <str> ) d = { } for fast in xrange ( len ( s ) ) :              cur_char = s [ fast ] if cur_char in d :                  slow = max ( slow , d [ cur_char ] + 1 )  longest = max ( longest , fast - slow + 1 ) d [ cur_char ] = fast  return longest    