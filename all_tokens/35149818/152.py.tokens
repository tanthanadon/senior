class Solution ( object ) :      def myPow ( self , x , n ) :          if n == 0 :              return 1  if n == 1 :              return x  if n < 0 :              x = 1 / x n = - n  return self . myPow ( x * x , n / 2 ) if n % 2 == 0 else x * self . myPow ( x * x , n / 2 )   class Solution ( object ) :      def myPow ( self , x , n ) :          if x == 0 :              return 0  if n == 0 :              return 1  if n == 1 :              return x  result = 1 n_copy = n n_copy = abs ( n_copy ) while n_copy :              if ( n_copy & 1 == 1 ) :                  result *= x  n_copy >>= 1 x *= x  return result if n > 0 else 1 / result    