class NestedIterator ( object ) :      def __init__ ( self , nestedList ) :          self . stack = [ ] while nestedList :              if nestedList [ - 1 ] . isInteger ( ) :                  self . stack . append ( nestedList . pop ( ) . getInteger ( ) )  else :                  for node in nestedList . pop ( ) . getList ( ) :                      nestedList . append ( node )     def next ( self ) :          return self . stack . pop ( )  def hasNext ( self ) :          return len ( self . stack ) > 0    