class Solution ( object ) :      def findRepeatedDnaSequences ( self , s ) :          if not s or len ( s ) < 10 :              return [ ]  d = set ( ) result = set ( ) for i in xrange ( len ( s ) - 9 ) :              cur_substring = s [ i : i + 10 ] if cur_substring in d :                  result . add ( cur_substring )  else :                  d . add ( cur_substring )   return list ( result )   class Solution ( object ) :      def findRepeatedDnaSequences ( self , s ) :          if not s :              return [ ]  self . m = { <str> : 0 , <str> : 1 , <str> : 2 , <str> : 3 } d , result = set ( ) , set ( ) for i in xrange ( len ( s ) - 9 ) :              cur_hashcode = self . __hash_code ( s [ i : i + 10 ] ) if cur_hashcode in d :                  result . add ( s [ i : i + 10 ] )  else :                  d . add ( cur_hashcode )   return list ( result )  def __hash_code ( self , s ) :          result = 0 for c in s :              result <<= 2 result |= self . m [ c ]  return result    