class Solution ( object ) :      def validIPAddress ( self , IP ) :          def ipv4 ( addr ) :              groups = addr . split ( <str> ) if len ( groups ) != 4 or len ( addr ) < 7 :                  return False  for g in groups :                  if not g or len ( g ) > 3 :                      return False  if g [ 0 ] == <str> and len ( g ) > 1 :                      return False  try :                      value = int ( g ) if value < 0 or value > 255 : return False if value == 0 and g [ 0 ] != <str> : return False  except :                      return False   return True  def ipv6 ( addr ) :              groups = addr . split ( <str> ) if len ( groups ) != 8 or len ( addr ) < 15 :                  return False  for g in groups :                  if not g or len ( g ) > 4 :                      return False  for c in g :                      c_ascii = ord ( c ) is_digit , is_upper , is_lower = False , False , False if ord ( <str> ) <= c_ascii <= ord ( <str> ) :                          is_digit = True  if ord ( <str> ) <= c_ascii <= ord ( <str> ) :                          is_lower = True  if ord ( <str> ) <= c_ascii <= ord ( <str> ) :                          is_upper = True  if not ( is_digit or is_upper or is_lower ) :                          return False    return True  if ipv4 ( IP ) : return <str> if ipv6 ( IP ) : return <str> return <str>    