class Solution :      def findSubtree ( self , root ) :          def helper ( r , result ) :              if not r : return 0 l_sum = helper ( r . left , result ) r_sum = helper ( r . right , result ) cur_sum = l_sum + r_sum + r . val if cur_sum < result [ 0 ] :                  result [ 0 ] , result [ 1 ] = cur_sum , r  return cur_sum  result = [ float ( <str> ) , None ] helper ( root , result ) return result [ 1 ]    