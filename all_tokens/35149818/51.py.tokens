class Solution :      def rehashing ( self , hashTable ) :          if not hashTable :              return None  new_cap = len ( hashTable ) * 2 new_table = [ None ] * ( new_cap ) for node in hashTable :              while node :                  new_idx = node . val % ( new_cap ) if not new_table [ new_idx ] :                      new_table [ new_idx ] = ListNode ( node . val )  else :                      head = new_table [ new_idx ] while head . next :                          head = head . next  head . next = ListNode ( node . val )  node = node . next   return new_table    