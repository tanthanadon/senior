class Solution :      def binaryTreePaths ( self , root ) :          result = [ ] self . helper ( root , <str> , result ) return result  def helper ( self , root , current_path , result ) :          if root is None :              return  current_path = current_path + <str> % root . val if root . left is None and root . right is None :              result . append ( current_path [ 2 : ] ) return  self . helper ( root . left , current_path , result ) self . helper ( root . right , current_path , result )     