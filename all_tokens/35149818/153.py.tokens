class Solution ( object ) :      def longestPalindrome ( self , s ) :          if not s :              return 0  start = end = 0 for i in xrange ( len ( s ) ) :              len_from_self = self . __expend ( s , i , i ) len_from_sides = self . __expend ( s , i , i + 1 ) cur_len = max ( len_from_self , len_from_sides ) if cur_len > end - start :                  start = i - ( cur_len - 1 ) / 2 end = i + cur_len / 2  print start , end  return s [ start : end + 1 ]  def __expend ( self , s , left , right ) :          while left >= 0 and right < len ( s ) and s [ left ] == s [ right ] :              left -= 1 right += 1  return right - left - 1    