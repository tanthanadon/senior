class Node ( object ) :      def __init__ ( self , node = None ) :          self . node = node  def __cmp__ ( self , other ) :          return self . node . val - other . node . val   import heapq class Solution :      def mergeKLists ( self , lists ) :          heap = [ ] for l in lists :              while l :                  heapq . heappush ( heap , Node ( l ) ) l = l . next   dummy = ListNode ( - 1 ) cursor = dummy while heap :              new_node = heapq . heappop ( heap ) cursor . next = new_node . node cursor = cursor . next  return dummy . next    