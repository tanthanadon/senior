class Solution ( object ) :      def maxDepth ( self , root ) :          if root is None :              return 0  l = self . maxDepth ( root . left ) r = self . maxDepth ( root . right ) return l + 1 if l >= r else r + 1   class Solution ( object ) :      def maxDepth ( self , root ) :          if root is None :              return 0  q = [ root ] max_depth = 0 current_level = 0 while len ( q ) > 0 :              current_level = len ( q ) for i in range ( current_level ) :                  current_node = q . pop ( ) if current_node . left is not None :                      q . insert ( 0 , current_node . left )  if current_node . right is not None :                      q . insert ( 0 , current_node . right )   max_depth += 1  return max_depth     