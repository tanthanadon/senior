class Solution ( object ) :      def lengthOfLIS ( self , nums ) :          if not nums :              return 0  len_list = [ float ( <str> ) ] * ( len ( nums ) + 1 ) len_list [ 0 ] = float ( <str> ) result = float ( <str> ) for n in nums :              biggest_smaller = self . __binary_search ( len_list , n ) len_list [ biggest_smaller ] = n result = max ( result , biggest_smaller )  return result  def __binary_search ( self , l , n ) :          left , right = 0 , len ( l ) - 1 while left < right :              mid = ( left + right ) / 2 if l [ mid ] >= n :                  right = mid  else :                  left = mid + 1   return left    