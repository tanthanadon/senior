class Solution ( object ) :      def mergeKLists ( self , lists ) :          if not list :              return None  def list_node_comparator ( n1 , n2 ) :              return n1 . val - n2 . val  heap = [ ] for l in lists :              while l :                  heap . append ( l ) l = l . next   heap . sort ( cmp = list_node_comparator ) dummy = ListNode ( 0 ) head = dummy for node in heap :              head . next = node head = head . next  head . next = None return dummy . next    