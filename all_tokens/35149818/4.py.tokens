class Solution ( object ) :      def evalRPN ( self , tokens ) :          if not tokens :              return 0  pool = set ( [ <str> , <str> , <str> , <str> ] ) stack = [ ] for t in tokens :              if t not in pool :                  stack . append ( int ( t ) ) continue  o2 = stack . pop ( ) o1 = stack . pop ( ) cur_val = 0 if t == <str> :                  cur_val += o1 + o2  elif t == <str> :                  cur_val += o1 - o2  elif t == <str> :                  cur_val += o1 * o2  else :                  if o1 * o2 < 0 and o1 % o2 != 0 :                      cur_val = o1 / o2 + 1  else :                      cur_val = o1 / o2   stack . append ( cur_val )  return stack . pop ( )    