class Solution ( object ) :      def rightSideView ( self , root ) :          if root is None :              return [ ]  q = [ root ] result = [ ] while q :              result . append ( q [ 0 ] . val ) l = len ( q ) for i in range ( l ) :                  cur_node = q . pop ( ) if cur_node . left is not None :                      q . insert ( 0 , cur_node . left )  if cur_node . right is not None :                      q . insert ( 0 , cur_node . right )    return result   class Solution ( object ) :      def rightSideView ( self , root ) :          result = [ ] self . helper ( root , 0 , result ) return result  def helper ( self , root , depth , result ) :          if root is None :              return  if depth >= len ( result ) :              result . append ( root . val )  self . helper ( root . right , depth + 1 , result ) self . helper ( root . left , depth + 1 , result ) return    