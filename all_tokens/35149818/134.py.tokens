class Solution :      def findSubtree ( self , root ) :          self . max_root = None self . max_sum = float ( <str> ) def helper ( r ) :              if not r :                  return 0  l_sum = helper ( r . left ) r_sum = helper ( r . right ) cur_sum = l_sum + r_sum + r . val if cur_sum > self . max_sum :                  self . max_root = r self . max_sum = cur_sum  return cur_sum  helper ( root ) return self . max_root    