class Solution ( object ) :      def findSubsequences ( self , nums ) :          if not nums :              return [ ]  def dfs ( prev , seq_so_far , cur_idx , result , has ) :              for i in xrange ( cur_idx , len ( nums ) ) :                  cur = nums [ i ] if cur >= prev :                      seq_so_far . append ( cur ) if len ( seq_so_far ) >= 2 and str ( seq_so_far ) not in has :                          has . add ( str ( seq_so_far ) ) result . append ( seq_so_far [ : ] )  dfs ( cur , seq_so_far , i + 1 , result , has ) seq_so_far . pop ( )    result = [ ] has = set ( ) dfs ( float ( <str> ) , [ ] , 0 , result , has ) return result    