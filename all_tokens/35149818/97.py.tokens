class Solution :      d = { } def isScramble ( self , s1 , s2 ) :          if not s1 and not s2 :              return True  if not s1 or not s2 :              return False  len1 , len2 = len ( s1 ) , len ( s2 ) if len1 != len2 :              return False  if len1 == 1 :              return s1 == s2  if s1 + <str> + s2 in self . d :              return self . d [ s1 + <str> + s2 ]  left , right = 0 , len1 - 1 for i in xrange ( left , right ) :              s1_from_head = self . isScramble ( s1 [ : i + 1 ] , s2 [ : i + 1 ] ) and self . isScramble ( s1 [ i + 1 : ] , s2 [ i + 1 : ] ) s1_from_tail = self . isScramble ( s1 [ - 1 - i : ] , s2 [ : i + 1 ] ) and self . isScramble ( s1 [ : - 1 - i ] , s2 [ i + 1 : ] ) if s1_from_head or s1_from_tail :                  self . d [ s1 + <str> + s2 ] = True return True   self . d [ s1 + <str> + s2 ] = False return False    