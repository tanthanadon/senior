class Solution ( object ) :      def findMissingRanges ( self , nums , lower , upper ) :          if not nums :              if lower == upper :                  return [ str ( lower ) ]  return [ <str> % ( lower , upper ) ]  result = [ ] if nums [ 0 ] > lower :              if nums [ 0 ] - lower == 1 :                  result . append ( str ( lower ) )  else :                  result . append ( <str> % ( lower , nums [ 0 ] - 1 ) )  prev = nums [ 0 ]  else :              prev = lower  for n in nums :              if n - prev >= 2 :                  if n - prev == 2 :                      result . append ( str ( n - 1 ) )  else :                      result . append ( <str> % ( prev + 1 , n - 1 ) )   prev = n  if prev < upper :              if upper - prev == 1 :                  result . append ( str ( upper ) )  else :                  result . append ( <str> % ( prev + 1 , upper ) )   return result   class Solution ( object ) :      def findMissingRanges ( self , nums , lower , upper ) :          result = [ ] prev = lower - 1 for i in xrange ( len ( nums ) + 1 ) :              n = nums [ i ] if i < len ( nums ) else upper + 1 if n - prev == 2 :                  result . append ( str ( n - 1 ) )  elif n - prev > 2 :                  result . append ( <str> % ( prev + 1 , n - 1 ) )  prev = n  return result    