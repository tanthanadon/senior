class Solution ( object ) :      def depthSum ( self , nestedList ) :          if not nestedList :              return 0  q = collections . deque ( nestedList ) result = 0 level = 0 while len ( q ) > 0 :              level += 1 cur_len = len ( q ) for i in xrange ( cur_len ) :                  cur_node = q . pop ( ) if cur_node . isInteger ( ) :                      result += cur_node . getInteger ( ) * level  else :                      for next_node in cur_node . getList ( ) :                          q . appendleft ( next_node )     return result    