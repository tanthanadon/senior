class Solution :      def stoneGame2 ( self , A ) :          if not A :              return 0  lens = len ( A ) if lens == 1 :              return 0  sums = [ 0 ] * ( lens * 2 ) for i in xrange ( 1 , len ( sums ) ) :              sums [ i ] = sums [ i - 1 ] + A [ ( i - 1 ) % lens ]  dp = [ [ 0 ] * ( lens * 2 - 1 ) for i in xrange ( lens * 2 - 1 ) ] for window in xrange ( 2 , lens + 1 ) :              for left in xrange ( 0 , ( lens * 2 - 1 ) - window ) :                  right = left + window - 1 cur_sum = sums [ right + 1 ] - sums [ left ] cur_min = float ( <str> ) for i in xrange ( left , right ) :                      cur_min = min ( cur_min , dp [ left ] [ i ] + dp [ i + 1 ] [ right ] )  dp [ left ] [ right ] = cur_min + cur_sum   result = float ( <str> ) for i in xrange ( 0 , lens - 1 ) :              result = min ( result , dp [ i ] [ i + lens - 1 ] )  return result    