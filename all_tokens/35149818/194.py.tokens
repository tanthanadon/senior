class WordDistance ( object ) :      def __init__ ( self , words ) :          self . d = { } for idx , word in enumerate ( words ) :              if word not in self . d :                  self . d [ word ] = [ idx ]  else :                  self . d [ word ] . append ( idx )    def shortest ( self , word1 , word2 ) :          list1 , list2 = self . d [ word1 ] , self . d [ word2 ] result , c1 , c2 = float ( <str> ) , 0 , 0 while c1 < len ( list1 ) and c2 < len ( list2 ) :              if list1 [ c1 ] < list2 [ c2 ] :                  result = min ( result , list2 [ c2 ] - list1 [ c1 ] ) c1 += 1  else :                  result = min ( result , list1 [ c1 ] - list2 [ c2 ] ) c2 += 1   return result    