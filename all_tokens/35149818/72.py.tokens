class Solution ( object ) :      def kthSmallest ( self , matrix , k ) :          if not matrix or not matrix [ 0 ] :              return None  if k == 1 :              return matrix [ 0 ] [ 0 ]  len_row , len_col = len ( matrix ) , len ( matrix [ 0 ] ) if k == len_row * len_col :              return matrix [ - 1 ] [ - 1 ]  lo , hi = matrix [ 0 ] [ 0 ] , matrix [ - 1 ] [ - 1 ] while lo < hi :              mid = ( lo + hi ) / 2 smaller_or_equals_than_mid = 0 for row in xrange ( len_row ) :                  col = 0 count = 0 while col < len_col and matrix [ row ] [ col ] <= mid :                      col += 1 smaller_or_equals_than_mid += 1   if smaller_or_equals_than_mid < k :                  lo = mid + 1  else :                  hi = mid   return lo    