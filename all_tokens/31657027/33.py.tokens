from ufl import ( triangle , tetrahedron , FiniteElement , TrialFunction , TestFunction , inner , grad , dx , dS ) from tsfc import compile_form from FIAT . hdiv_trace import TraceError import pytest @ pytest . mark . parametrize ( <str> , [ triangle , tetrahedron ] ) @ pytest . mark . parametrize ( <str> , range ( 3 ) ) def test_cell_error ( cell , degree ) :      trace_element = FiniteElement ( <str> , cell , degree ) lambdar = TrialFunction ( trace_element ) gammar = TestFunction ( trace_element ) with pytest . raises ( TraceError ) :          compile_form ( lambdar * gammar * dx )   @ pytest . mark . parametrize ( <str> , [ triangle , tetrahedron ] ) @ pytest . mark . parametrize ( <str> , range ( 3 ) ) def test_gradient_error ( cell , degree ) :      trace_element = FiniteElement ( <str> , cell , degree ) lambdar = TrialFunction ( trace_element ) gammar = TestFunction ( trace_element ) with pytest . raises ( TraceError ) :          compile_form ( inner ( grad ( lambdar ( <str> ) ) , grad ( gammar ( <str> ) ) ) * dS )   if __name__ == <str> :      import os import sys pytest . main ( args = [ os . path . abspath ( __file__ ) ] + sys . argv [ 1 : ] )   