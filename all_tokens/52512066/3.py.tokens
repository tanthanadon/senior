from scipy . io import loadmat , savemat import numpy as np result = loadmat ( <str> % ( 0 , 10000 ) ) for from_ in [ 10000 , 20000 ] :      mat = loadmat ( <str> % ( from_ , from_ + 10000 ) ) for k in mat . keys ( ) :          print from_ , k if k != <str> and k != <str> and k != <str> :             print result [ k ] . shape , mat [ k ] . shape if k == <str> or k == <str> :                  result [ k ] = np . concatenate ( ( result [ k ] , ( mat [ k ] ) ) , axis = 0 )  else :                 result [ k ] = np . concatenate ( ( result [ k ] , ( mat [ k ] ) ) , axis = 1 )  print result [ k ] . shape   print len ( result ) print len ( result [ <str> ] )  mat = loadmat ( <str> % ( 30000 , 33000 ) ) for k in mat . keys ( ) :          print k if k != <str> and k != <str> and k != <str> :             print result [ k ] . shape , mat [ k ] . shape if k == <str> or k == <str> :                  result [ k ] = np . concatenate ( ( result [ k ] , ( mat [ k ] ) ) , axis = 0 )  else :                 result [ k ] = np . concatenate ( ( result [ k ] , ( mat [ k ] ) ) , axis = 1 )  print result [ k ] . shape   mat = loadmat ( <str> % ( 33000 , 36000 ) ) for k in mat . keys ( ) :          print k if k != <str> and k != <str> and k != <str> :             print result [ k ] . shape , mat [ k ] . shape if k == <str> or k == <str> :                  result [ k ] = np . concatenate ( ( result [ k ] , ( mat [ k ] ) ) , axis = 0 )  else :                 result [ k ] = np . concatenate ( ( result [ k ] , ( mat [ k ] ) ) , axis = 1 )  print result [ k ] . shape   mat = loadmat ( <str> % ( 36000 , 39000 ) ) for k in mat . keys ( ) :          print k if k != <str> and k != <str> and k != <str> :             print result [ k ] . shape , mat [ k ] . shape if k == <str> or k == <str> :                  result [ k ] = np . concatenate ( ( result [ k ] , ( mat [ k ] ) ) , axis = 0 )  else :                 result [ k ] = np . concatenate ( ( result [ k ] , ( mat [ k ] ) ) , axis = 1 )  print result [ k ] . shape   mat = loadmat ( <str> % ( 39000 , 41000 ) ) for k in mat . keys ( ) :          print k if k != <str> and k != <str> and k != <str> :             print result [ k ] . shape , mat [ k ] . shape if k == <str> or k == <str> :                  result [ k ] = np . concatenate ( ( result [ k ] , ( mat [ k ] ) ) , axis = 0 )  else :                 result [ k ] = np . concatenate ( ( result [ k ] , ( mat [ k ] ) ) , axis = 1 )  print result [ k ] . shape   print len ( result ) print len ( result [ <str> ] ) savemat ( <str> , result )  