import caffe DEBUG = True class IEP_Loss_Layer ( caffe . Layer ) :    def setup ( self , bottom , top ) : def reshape ( self , bottom , top ) :      pass  def forward ( self , bottom , top ) :      score = np . zeros ( 20 ) predictions = bottom [ 0 ] . data level_functions = bottom [ 1 ] . data labels = bottom [ 2 ] . data for level_funtion in level_functions :        level_score = np . zeros ( 20 ) for term in level_funtion :          if term [ 0 ] == <str> :            level_score += predictions [ term [ 1 ] ]  elif term [ 0 ] == <str> :            level_score -= predictions [ term [ 1 ] ]   score += level_score  top [ 0 ] . data [ ... ] = np . mean ( score - labels )  def backward ( self , top , propagate_down , bottom ) :      diff = np . zeros ( feature_size ) labels = bottom [ 2 ] . data for level_funtion in level_functions :        level_diff = np . zeros ( feature_size ) for term in level_funtion :          if term [ 0 ] == <str> :            level_diff += bottom [ 0 ] . data [ term [ 1 ] ]  else :            level_diff -= bottom [ 0 ] . data [ term [ 1 ] ]   diff += np . sign ( top [ 0 ] . diff ) * level_diff  bottom [ 0 ] . diff [ ... ] = np . mean ( diff )    