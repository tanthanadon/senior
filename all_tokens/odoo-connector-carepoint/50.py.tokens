from odoo . addons . connector_carepoint . models import fdb_img from . . common import SetUpCarepointBase model = <str> class EndTestException ( Exception ) :      pass  class FdbImgTestBase ( SetUpCarepointBase ) :      def setUp ( self ) :          super ( FdbImgTestBase , self ) . setUp ( ) self . model = <str> self . mock_env = self . get_carepoint_helper ( self . model )  @ property def record ( self ) :          return { <str> : <str> . encode ( <str> ) , <str> : 123 , <str> : <str> , <str> : <str> , }   class TestFdbImgImportMapper ( FdbImgTestBase ) :      def setUp ( self ) :          super ( TestFdbImgImportMapper , self ) . setUp ( ) self . Unit = fdb_img . FdbImgImportMapper self . unit = self . Unit ( self . mock_env )  def test_carepoint_id ( self ) :          expect = { <str> : self . record [ <str> ] } res = self . unit . carepoint_id ( self . record ) self . assertDictEqual ( expect , res )  def test_datas ( self ) :          expect = { <str> : self . record [ <str> ] } res = self . unit . datas ( self . record ) self . assertDictEqual ( expect , res )  def test_mimetype ( self ) :          expect = { <str> : <str> } res = self . unit . mimetype ( self . record ) self . assertDictEqual ( expect , res )  def test_type ( self ) :          expect = { <str> : <str> } res = self . unit . type ( self . record ) self . assertDictEqual ( expect , res )   class TestFdbImgImporter ( FdbImgTestBase ) :      def setUp ( self ) :          super ( TestFdbImgImporter , self ) . setUp ( ) self . Unit = fdb_img . FdbImgImporter self . unit = self . Unit ( self . mock_env ) self . unit . carepoint_record = self . record  def test_get_carepoint_data_read_image ( self ) :          with self . mock_adapter ( self . unit ) :              self . unit . _get_carepoint_data ( ) read = self . unit . backend_adapter . read_image read . assert_called_once_with ( self . unit . backend_adapter . read ( ) [ <str> ] , )   def test_get_carepoint_data_return ( self ) :          with self . mock_adapter ( self . unit ) :              res = self . unit . _get_carepoint_data ( ) self . assertEqual ( self . unit . backend_adapter . read_image ( ) , res . data , )     