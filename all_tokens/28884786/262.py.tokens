ALPHABET = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] CONSONANTS = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] VOWELS = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] SHORT_VOWELS = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] LONG_VOWELS = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] DIPTHONGS = [ <str> , <str> , <str> , <str> , <str> , <str> ] import re def normalize_middle_high_german ( text , to_lower_all = True , to_lower_beginning = False , alpha_conv = True , punct = True ) :      if to_lower_all :          text = text . lower ( )  if to_lower_beginning :          text = text [ 0 ] . lower ( ) + text [ 1 : ] text = re . sub ( <str> , lambda x : x . group ( 1 ) . lower ( ) , text )  if alpha_conv :          text = text . replace ( <str> , <str> ) . replace ( <str> , <str> ) . replace ( <str> , <str> ) . replace ( <str> , <str> ) . replace ( <str> , <str> ) text = text . replace ( <str> , <str> ) . replace ( <str> , <str> )  if punct :          text = re . sub ( <str> , <str> , text )  return text   