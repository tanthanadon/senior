import re __author__ = [ <str> ] __license__ = <str> def mdc_unicode ( string , q_kopf = True ) :      alef = string . replace ( <str> , <str> ) ayin = alef . replace ( <str> , <str> ) h2 = ayin . replace ( <str> , <str> ) h3 = h2 . replace ( <str> , <str> ) h4 = h3 . replace ( <str> , <str> ) h5 = h4 . replace ( <str> , <str> + <str> ) shin = h5 . replace ( <str> , <str> ) s_acute = shin . replace ( <str> , <str> ) tche = s_acute . replace ( <str> , <str> ) tj = tche . replace ( <str> , <str> ) djed = tj . replace ( <str> , <str> ) egy_yod = djed . replace ( <str> , <str> + <str> ) equal = egy_yod . replace ( <str> , <str> ) left_brackets = equal . replace ( <str> , <str> ) right_brackets = left_brackets . replace ( <str> , <str> ) if q_kopf is False :          kopf = right_brackets . replace ( <str> , <str> ) kopf_capital = kopf . replace ( <str> , <str> )  else :          kopf_capital = right_brackets  h2_capital = re . sub ( <str> , <str> , kopf_capital ) h3_capital = re . sub ( <str> , <str> , h2_capital ) h4_capital = re . sub ( <str> , <str> + <str> , h3_capital ) shin_capital = re . sub ( <str> , <str> , h4_capital ) tche_capital = re . sub ( <str> , <str> , shin_capital ) djed_capital = re . sub ( <str> , <str> , tche_capital ) unicode_text = djed_capital . replace ( <str> , <str> ) return unicode_text   