from cltk . phonology . utils import * __author__ = [ <str> ] a = Vowel ( Height . open , Backness . front , False , Length . short , <str> ) ee = Vowel ( Height . open_mid , Backness . front , False , Length . short , <str> ) e = Vowel ( Height . close_mid , Backness . front , False , Length . short , <str> ) oee = Vowel ( Height . close_mid , Backness . front , True , Length . short , <str> ) i = Vowel ( Height . close , Backness . front , False , Length . short , <str> ) y = Vowel ( Height . close , Backness . front , True , Length . short , <str> ) o = Vowel ( Height . close_mid , Backness . back , True , Length . short , <str> ) u = Vowel ( Height . close , Backness . back , True , Length . short , <str> ) b = Consonant ( Place . bilabial , Manner . stop , True , <str> , False ) d = Consonant ( Place . alveolar , Manner . stop , True , <str> , False ) f = Consonant ( Place . labio_dental , Manner . fricative , False , <str> , False ) g = Consonant ( Place . velar , Manner . stop , True , <str> , False ) gh = Consonant ( Place . velar , Manner . fricative , True , <str> , False ) h = Consonant ( Place . glottal , Manner . fricative , False , <str> , False ) j = Consonant ( Place . palatal , Manner . fricative , True , <str> , False ) k = Consonant ( Place . velar , Manner . stop , False , <str> , False ) l = Consonant ( Place . alveolar , Manner . lateral , True , <str> , False ) m = Consonant ( Place . bilabial , Manner . nasal , True , <str> , False ) n = Consonant ( Place . labio_dental , Manner . nasal , True , <str> , False ) p = Consonant ( Place . bilabial , Manner . stop , False , <str> , False ) r = Consonant ( Place . alveolar , Manner . trill , True , <str> , False ) s = Consonant ( Place . alveolar , Manner . fricative , False , <str> , False ) t = Consonant ( Place . alveolar , Manner . stop , False , <str> , False ) v = Consonant ( Place . labio_dental , Manner . fricative , True , <str> , False ) w = v x = k + s z = t + s th = Consonant ( Place . dental , Manner . fricative , False , <str> , False ) dh = Consonant ( Place . dental , Manner . fricative , True , <str> , False ) OLD_NORSE8_PHONOLOGY = [ a , ee , i , oee , y , u , o , a . lengthen ( ) , ee . lengthen ( ) , e . lengthen ( ) , oee . lengthen ( ) , i . lengthen ( ) , y . lengthen ( ) , u . lengthen ( ) , o . lengthen ( ) , p , b , t , d , k , g , f , v , th , dh , s , gh , h , j , l , r , n ] DIPHTHONGS_IPA = { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , } DIPHTHONGS_IPA_class = { <str> : Vowel ( Height . open , Backness . front , True , Length . short , <str> ) , <str> : Vowel ( Height . open , Backness . back , True , Length . short , <str> ) , <str> : Vowel ( Height . open , Backness . front , True , Length . short , <str> ) , <str> : Vowel ( Height . open , Backness . front , True , Length . short , <str> ) , } IPA = { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , } IPA_class = { <str> : a , <str> : ee , <str> : ee , <str> : i , <str> : o , <str> : oee , <str> : oee , <str> : u , <str> : y , <str> : b , <str> : k , <str> : d , <str> : f , <str> : g , <str> : h , <str> : j , <str> : k , <str> : l , <str> : m , <str> : n , <str> : p , <str> : k , <str> : r , <str> : s , <str> : t , <str> : v , <str> : v , <str> : k + s , <str> : t + s , <str> : th , <str> : dh , } GEMINATE_CONSONANTS = { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , } GEMINATE_CONSONANTS_class = { <str> : b . lengthen ( ) , <str> : d . lengthen ( ) , <str> : dh , <str> : f . lengthen ( ) , <str> : g . lengthen ( ) , <str> : gh , <str> : k . lengthen ( ) , <str> : l . lengthen ( ) , <str> : m . lengthen ( ) , <str> : n . lengthen ( ) , <str> : p . lengthen ( ) , <str> : r . lengthen ( ) , <str> : s . lengthen ( ) , <str> : th , <str> : t . lengthen ( ) , <str> : v . lengthen ( ) , } DIPHTHONGS_IPA . update ( GEMINATE_CONSONANTS ) DIPHTHONGS_IPA_class . update ( GEMINATE_CONSONANTS_class ) rule_th = [ Rule ( AbstractPosition ( Rank . inner , [ AbstractVowel ( ) ] , [ AbstractVowel ( ) ] ) , th , dh ) , Rule ( AbstractPosition ( Rank . last , [ AbstractConsonant ( ) ] , None ) , th , dh ) , Rule ( AbstractPosition ( Rank . first , None , [ ] ) , th , th ) , Rule ( AbstractPosition ( Rank . last , [ r . to_abstract ( ) ] , None ) , th , dh ) ] old_swedish_rules = [ ] old_swedish_rules . extend ( rule_th )  