__author__ = [ <str> ] __license__ = <str> class ScansionConstants :      def __init__ ( self , unstressed = <str> , stressed = <str> , optional_terminal_ending = <str> , separator = <str> ) :          self . UNSTRESSED = unstressed self . STRESSED = stressed self . OPTIONAL_ENDING = optional_terminal_ending self . FOOT_SEPARATOR = separator self . IAMB = unstressed + stressed self . TROCHEE = stressed + unstressed self . SPONDEE = stressed + stressed self . ANAPEST = unstressed + unstressed + stressed self . DACTYL = stressed + unstressed + unstressed self . AMPHIBRACH = unstressed + stressed + unstressed self . PYRRHIC = unstressed + unstressed self . HEXAMETER_ENDING = stressed + optional_terminal_ending self . INVERTED_AMPHIBRACH = stressed + unstressed + stressed self . INVALID_HEXAMETER_COMBO = stressed + stressed + unstressed self . CONSONANTS = <str> self . CONSONANTS_WO_H = <str> self . VOWELS = <str> self . ACCENTED_VOWELS = <str> self . VOWELS_WO_I = <str> self . VOWELS_TO_ACCENTS = dict ( zip ( list ( self . VOWELS ) , list ( self . ACCENTED_VOWELS ) ) ) self . ACCENTS_TO_VOWELS = dict ( zip ( list ( self . ACCENTED_VOWELS ) , list ( self . VOWELS ) ) ) self . DIPTHONGS = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] self . UI_EXCEPTIONS = { <str> : [ <str> ] , <str> : [ <str> ] , <str> : [ <str> ] , <str> : [ <str> ] , <str> : [ <str> ] , <str> : [ <str> ] } self . stress_accent_dict = dict ( zip ( list ( self . VOWELS + self . ACCENTED_VOWELS ) , list ( self . ACCENTED_VOWELS + self . ACCENTED_VOWELS ) ) ) self . LIQUIDS = <str> self . MUTES = <str> self . DOUBLED_CONSONANTS = [ letter + letter for letter in self . CONSONANTS ] self . PREFIXES = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] self . ASPIRATES = [ <str> , <str> , <str> , <str> , <str> , <str> ] self . NOTE_MAP : dict = dict ( ( ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) , ( <str> , <str> ) ) )    