import os import sys import versioneer from setuptools import setup , find_packages try :      execfile  except NameError :      def execfile ( filename ) :          <str> import builtins exec_ = getattr ( builtins , <str> ) with open ( filename , <str> ) as f :              code = compile ( f . read ( ) . decode ( <str> ) , filename , <str> ) return exec_ ( code , globals ( ) )    project_name = os . environ . get ( <str> , <str> ) _current_dir = os . path . dirname ( os . path . abspath ( __file__ ) ) dev_classifier = <str> from setuptools . command . test import test as TestCommand class PyTest ( TestCommand ) :      def finalize_options ( self ) :          TestCommand . finalize_options ( self ) self . test_args = [ ] self . test_suite = True  def run_tests ( self ) :          import pytest errno = pytest . main ( self . test_args ) sys . exit ( errno )   _cmdclass = { <str> : PyTest } _cmdclass . update ( versioneer . get_cmdclass ( ) ) setup ( name = project_name , version = versioneer . get_version ( ) , description = ( <str> <str> ) , long_description = open ( os . path . join ( _current_dir , <str> ) ) . read ( ) , classifiers = [ dev_classifier , <str> , ( <str> <str> ) , <str> , <str> , <str> , <str> , ] , keywords = <str> , author = <str> , author_email = <str> , url = <str> , license = <str> , tests_require = [ <str> ] , packages = find_packages ( exclude = [ <str> , <str> , <str> ] ) , include_package_data = True , zip_safe = False , python_requires = <str> , install_requires = [ <str> , <str> , <str> , ] , extras_require = { <str> : [ <str> , <str> ] } , cmdclass = _cmdclass , )  