from openerp import models , fields , api class ResPartner ( models . Model ) :      _inherit = <str> partner_type_id = fields . Many2one ( <str> , string = <str> ) @ api . model def create ( self , vals ) :          if vals . get ( <str> , False ) :              p_type = self . env [ <str> ] . browse ( vals [ <str> ] ) if not vals . get ( <str> , False ) :                  seq_id = p_type . sequence_id . id vals . update ( ref = self . env [ <str> ] . next_by_id ( seq_id ) )   res = super ( ResPartner , self ) . create ( vals ) return res  @ api . multi def write ( self , vals ) :          for partner in self :              if vals . get ( <str> , False ) and not vals . get ( <str> , False ) and not partner . ref :                  p_type = self . env [ <str> ] . browse ( vals [ <str> ] ) new_ref = False if partner . parent_id :                      new_ref = partner . parent_id . ref  else :                      seq_id = p_type . sequence_id . id new_ref = self . env [ <str> ] . next_by_id ( seq_id )  vals . update ( ref = new_ref )   res = super ( ResPartner , self ) . write ( vals ) return res   class PartnerType ( models . Model ) :      _name = <str> name = fields . Char ( <str> , required = True ) sequence_id = fields . Many2one ( <str> , string = <str> )   