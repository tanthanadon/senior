from openerp . osv import orm from openerp import pooler from openerp . tools . translate import _ from datetime import date from psycopg2 import OperationalError import openerp class procurement_order ( orm . Model ) :      _inherit = <str> def _procure_orderpoint_confirm ( self , cr , uid , use_new_cursor = False , company_id = False , context = None ) :          if context is None :              context = { }  if use_new_cursor :              cr = openerp . registry ( cr . dbname ) . cursor ( )  orderpoint_obj = self . pool . get ( <str> ) stock_unsafety = self . pool . get ( <str> ) procurement_obj = self . pool . get ( <str> ) prod_obj = self . pool . get ( <str> ) prod_ids = prod_obj . search ( cr , uid , [ ] ) for prod in prod_obj . browse ( cr , uid , prod_ids ) :              orderpoint_ids = orderpoint_obj . search ( cr , uid , [ ( <str> , <str> , prod . id ) , ( <str> , <str> , date . today ( ) ) , ( <str> , <str> , date . today ( ) ) , ] , offset = 0 , limit = None ) if not orderpoint_ids :                  orderpoint_ids = orderpoint_obj . search ( cr , uid , [ ( <str> , <str> , prod . id ) , ( <str> , <str> , False ) , ( <str> , <str> , False ) ] , offset = 0 , limit = None )  if not orderpoint_ids :                  orderpoint_ids = [ ]  for op in orderpoint_obj . browse ( cr , uid , orderpoint_ids , context = context ) :                  try :                      seller = False prods = self . _product_virtual_get ( cr , uid , op ) if prods is None :                          continue  if prods < op . product_min_qty :                          if prod . seller_ids :                              seller = prod . seller_ids [ 0 ] . name . id state = <str>  else :                              state = <str>  vals = { <str> : prod . id , <str> : seller , <str> : op . product_min_qty , <str> : op . product_max_qty , <str> : prod . qty_available , <str> : prods , <str> : uid , <str> : state , <str> : <str> , <str> : op . company_id . id } stock_unsafety . create_or_write ( cr , uid , vals , context = context ) if use_new_cursor :                              cr . commit ( )    except OperationalError :                      if use_new_cursor :                          orderpoint_ids . append ( op . id ) cr . rollback ( ) continue  else :                          raise    if use_new_cursor :                  cr . commit ( )   if use_new_cursor :              cr . commit ( ) cr . close ( )  return { }    