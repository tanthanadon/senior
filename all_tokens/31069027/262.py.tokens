from openerp . osv import orm class purchase_order_line ( orm . Model ) :      _inherit = <str> def create ( self , cr , uid , vals , context = None ) :          if context is None :              context = { }  undermin = self . pool . get ( <str> ) res = super ( purchase_order_line , self ) . create ( cr , uid , vals , context = context ) undermin . write_purchase_id ( cr , uid , [ ] , res , vals [ <str> ] , context = context ) return res  def write ( self , cr , uid , ids , vals , context = None ) :          if context is None :              context = { }  undermin = self . pool . get ( <str> ) res = super ( purchase_order_line , self ) . write ( cr , uid , ids , vals , context = context ) for cur in self . browse ( cr , uid , ids ) :              if vals . get ( <str> , False ) :                  undermin . write_purchase_id ( cr , uid , [ ] , cur . id , vals [ <str> ] , context = context )  if vals . get ( <str> , False ) and vals [ <str> ] == <str> :                  mins = undermin . search ( cr , uid , [ ( <str> , <str> , cur . id ) , ( <str> , <str> , <str> ) ] ) if mins :                      undermin . write ( cr , uid , mins [ 0 ] , { <str> : <str> } )    return res   class purchase_order ( orm . Model ) :      _inherit = <str> def write ( self , cr , uid , ids , vals , context = None ) :          if context is None :              context = { }  undermin = self . pool . get ( <str> ) for cur in self . browse ( cr , uid , ids ) :              if vals . get ( <str> , False ) and vals [ <str> ] == <str> :                  if cur . order_line :                      for l in cur . order_line :                          domain = [ ( <str> , <str> , l . id ) , ( <str> , <str> , <str> ) ] mins = undermin . search ( cr , uid , domain ) if mins :                              undermin . write ( cr , uid , mins [ 0 ] , { <str> : <str> } )      res = super ( purchase_order , self ) . write ( cr , uid , ids , vals , context = context ) return res    