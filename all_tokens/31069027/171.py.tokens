from openerp . osv import fields , osv from datetime import datetime , timedelta import time class ResPartner ( osv . osv ) :      def check_customer_blocked_sales ( self , cr , uid , automatic = False , use_new_cursor = False , context = None ) :          move_line_facade = self . pool . get ( <str> ) account_facade = self . pool . get ( <str> ) partner_facade = self . pool . get ( <str> ) blocked_partner_ids = [ ] root_company_dict = self . pool . get ( <str> ) . read ( cr , uid , uid , [ <str> ] ) root_company_id = root_company_dict [ <str> ] [ 0 ] company_dict = self . pool . get ( <str> ) . read ( cr , uid , root_company_id , [ <str> ] ) formatted_date = datetime . strptime ( time . strftime ( <str> ) , <str> ) limit_customer_date = datetime . strftime ( formatted_date + timedelta ( days = - int ( company_dict [ <str> ] ) ) , <str> ) cust_account_ids = account_facade . search ( cr , uid , [ ( <str> , <str> , root_company_id ) , ( <str> , <str> , <str> ) , ( <str> , <str> , <str> ) ] ) move_line_ids = move_line_facade . search ( cr , uid , [ ( <str> , <str> , cust_account_ids ) , ( <str> , <str> , limit_customer_date ) , ( <str> , <str> , False ) ] ) if len ( move_line_ids ) > 0 :              moves_to_search_dict = move_line_facade . read ( cr , uid , move_line_ids , [ <str> ] ) for dict in moves_to_search_dict :                  if dict [ <str> ] [ 0 ] not in blocked_partner_ids :                      blocked_partner_ids . append ( dict [ <str> ] [ 0 ] )    partner_facade . write ( cr , uid , blocked_partner_ids , { <str> : True } , context ) all_customer_ids = partner_facade . search ( cr , uid , [ ( <str> , <str> , True ) , ( <str> , <str> , root_company_id ) ] ) non_blocked_partner_ids = list ( set ( all_customer_ids ) - set ( blocked_partner_ids ) ) partner_facade . write ( cr , uid , non_blocked_partner_ids , { <str> : False } , context ) return  def check_customer_block_state ( self , cr , uid , ids , context = None ) :          if context is None :              context = { }  account_facade = self . pool . get ( <str> ) move_line_facade = self . pool . get ( <str> ) user = self . pool . get ( <str> ) . browse ( cr , uid , uid ) formatted_date = datetime . strptime ( time . strftime ( <str> ) , <str> ) limit_customer_date = datetime . strftime ( formatted_date + timedelta ( days = - int ( user . company_id . block_customer_days ) ) , <str> ) for partner in self . browse ( cr , uid , ids , context = context ) :              cust_account_ids = account_facade . search ( cr , uid , [ ( <str> , <str> , user . company_id . id ) , ( <str> , <str> , <str> ) , ( <str> , <str> , <str> ) ] ) move_line_ids = move_line_facade . search ( cr , uid , [ ( <str> , <str> , cust_account_ids ) , ( <str> , <str> , limit_customer_date ) , ( <str> , <str> , False ) , ( <str> , <str> , partner . id ) ] ) if move_line_ids :                  partner . write ( { <str> : True } )  else :                  partner . write ( { <str> : False } )   return True  _inherit = <str> _columns = { <str> : fields . boolean ( <str> , copy = False ) }   