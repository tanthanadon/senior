from openerp . osv import orm , fields import openerp . addons . decimal_precision as dp import time class account_bank_transfer_wzd ( orm . TransientModel ) :      _name = <str> _columns = { <str> : fields . many2one ( <str> , <str> , required = True , domain = [ ( <str> , <str> , [ <str> , <str> ] ) ] ) , <str> : fields . many2one ( <str> , <str> , required = True , domain = [ ( <str> , <str> , [ <str> , <str> ] ) ] ) , <str> : fields . float ( <str> , digits_compute = dp . get_precision ( <str> ) , required = True ) , <str> : fields . many2one ( <str> , <str> , required = True , domain = [ ( <str> , <str> , <str> ) ] ) , <str> : fields . char ( <str> , size = 64 , required = True ) , <str> : fields . date ( <str> , required = True ) } _defaults = { <str> : lambda * a : time . strftime ( <str> ) } def execute_transfer ( self , cr , uid , ids , context = None ) :          if context is None : context = { } obj = self . browse ( cr , uid , ids [ 0 ] , context = context ) context [ <str> ] = True period_id = self . pool . get ( <str> ) . find ( cr , uid , obj . date , context ) [ 0 ] orig_move_id = self . pool . get ( <str> ) . create ( cr , uid , { <str> : obj . name , <str> : obj . orig_journal_id . id , <str> : obj . date , <str> : period_id } , context = context ) self . pool . get ( <str> ) . create ( cr , uid , { <str> : orig_move_id , <str> : obj . name , <str> : obj . name , <str> : period_id , <str> : obj . orig_journal_id . id , <str> : obj . orig_journal_id . default_credit_account_id . id , <str> : obj . amount , <str> : obj . date } , context = context ) self . pool . get ( <str> ) . create ( cr , uid , { <str> : orig_move_id , <str> : obj . name , <str> : obj . name , <str> : period_id , <str> : obj . orig_journal_id . id , <str> : obj . mid_account_id . id , <str> : obj . amount , <str> : obj . date } , context = context ) self . pool . get ( <str> ) . button_validate ( cr , uid , [ orig_move_id ] , context = context ) dest_move_id = self . pool . get ( <str> ) . create ( cr , uid , { <str> : obj . name , <str> : obj . dest_journal_id . id , <str> : obj . date , <str> : period_id } , context = context ) self . pool . get ( <str> ) . create ( cr , uid , { <str> : dest_move_id , <str> : obj . name , <str> : obj . name , <str> : period_id , <str> : obj . dest_journal_id . id , <str> : obj . dest_journal_id . default_debit_account_id . id , <str> : obj . amount , <str> : obj . date } , context = context ) self . pool . get ( <str> ) . create ( cr , uid , { <str> : dest_move_id , <str> : obj . name , <str> : obj . name , <str> : period_id , <str> : obj . dest_journal_id . id , <str> : obj . mid_account_id . id , <str> : obj . amount , <str> : obj . date } , context = context ) self . pool . get ( <str> ) . button_validate ( cr , uid , [ dest_move_id ] , context = context ) return { <str> : <str> }    