from openerp import models , api , fields class PaymentOrder ( models . Model ) :      _name = <str> _inherit = [ <str> , <str> ] not_send_emails = fields . Boolean ( <str> ) @ api . multi def action_sent ( self ) :          res = super ( PaymentOrder , self ) . action_sent ( ) mail_pool = self . env [ <str> ] mail_ids = self . env [ <str> ] for order in self :              if order . not_send_emails :                  continue  partners = { } for line in order . line_ids :                  if line . partner_id . email :                      if partners . get ( line . partner_id ) :                          partners [ line . partner_id ] . append ( line )  else :                          partners [ line . partner_id ] = [ line ]    for partner_data in partners :                  template = self . env . ref ( <str> , False ) ctx = dict ( self . _context ) ctx . update ( { <str> : partner_data . email , <str> : partner_data . id , <str> : partner_data . name , <str> : partners [ partner_data ] } ) mail_id = template . with_context ( ctx ) . send_mail ( order . id ) mail_ids += mail_pool . browse ( mail_id )   if mail_ids :              mail_ids . send ( )  return res    