from openerp . osv import fields , osv from openerp . tools . translate import _ class sale_make_invoice ( osv . osv_memory ) :      _inherit = <str> def view_init ( self , cr , uid , fields_list , context = None ) :          sale_facade = self . pool . get ( <str> ) active_ids = context . get ( <str> , [ ] ) for order in sale_facade . browse ( cr , uid , active_ids , context = context ) :              partner_ids_to_check = [ order . partner_id . commercial_partner_id and order . partner_id . commercial_partner_id . id or False , order . partner_id . id ] unique_partner_ids_to_check = filter ( lambda a : a != False , [ x for i , x in enumerate ( partner_ids_to_check ) if x not in partner_ids_to_check [ i + 1 : ] ] ) for partner_id in unique_partner_ids_to_check :                  partner_fields_dict = self . pool . get ( <str> ) . read ( cr , uid , partner_id , [ <str> , <str> ] ) if partner_fields_dict [ <str> ] and not order . allow_confirm_blocked :                      title = _ ( <str> ) % partner_fields_dict [ <str> ] message = _ ( <str> ) raise osv . except_osv ( title , message )    return super ( sale_make_invoice , self ) . view_init ( cr , uid , fields_list , context = context )    