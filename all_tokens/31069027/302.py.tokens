from openerp import models , api from lxml import etree class account_invoice ( models . Model ) :      _inherit = <str> @ api . model def fields_view_get ( self , view_id = None , view_type = False , toolbar = False , submenu = False ) :          context = self . _context res = super ( account_invoice , self ) . fields_view_get ( view_id = view_id , view_type = view_type , toolbar = toolbar , submenu = submenu ) doc = etree . XML ( res [ <str> ] ) if context . get ( <str> ) :              for node in doc . xpath ( <str> ) :                  if context [ <str> ] in ( <str> , <str> ) :                      node . set ( <str> , )    res [ <str> ] = etree . tostring ( doc ) return res  @ api . multi def onchange_partner_id ( self , type , partner_id , date_invoice = False , payment_term = False , partner_bank_id = False , company_id = False ) :          res = super ( account_invoice , self ) . onchange_partner_id ( type , partner_id , date_invoice = date_invoice , payment_term = payment_term , partner_bank_id = partner_bank_id , company_id = company_id ) if partner_id :              partner = self . env [ <str> ] . browse ( partner_id ) if type == <str> and partner . customer_payment_mode and partner . customer_payment_mode . payment_order_type == <str> and partner . bank_ids :                  mandate_obj = self . env [ <str> ] mandates = mandate_obj . search ( [ ( <str> , <str> , partner . bank_ids . ids ) , ( <str> , <str> , <str> ) ] ) mandate_sel = False if mandates :                      mandate_sel = mandates [ 0 ]  else :                      mandates = mandate_obj . search ( [ ( <str> , <str> , partner . bank_ids . ids ) , ( <str> , <str> , <str> ) ] ) if mandates :                          mandate_sel = mandates [ 0 ]   if mandate_sel :                      res [ <str> ] . update ( { <str> : mandate_sel . id , <str> : mandate_sel . partner_bank_id . id } )  else :                      res [ <str> ] . update ( { <str> : partner . bank_ids [ 0 ] . id } )    return res  @ api . model def create ( self , vals ) :          if vals . get ( <str> , False ) and vals . get ( <str> , False ) and not vals . get ( <str> , False ) :              pmode = self . env [ <str> ] . browse ( vals [ <str> ] ) if pmode . payment_order_type == <str> :                  mandate_obj = self . env [ <str> ] mandates = mandate_obj . search ( [ ( <str> , <str> , vals [ <str> ] ) , ( <str> , <str> , <str> ) ] ) mandate_sel = False if mandates :                      mandate_sel = mandates [ 0 ]  else :                      mandates = mandate_obj . search ( [ ( <str> , <str> , vals [ <str> ] ) , ( <str> , <str> , <str> ) ] ) if mandates :                          mandate_sel = mandates [ 0 ]   if mandate_sel :                      vals [ <str> ] = mandate_sel . id    return super ( account_invoice , self ) . create ( vals )  @ api . multi def write ( self , vals ) :          if vals . get ( <str> , False ) and not vals . get ( <str> , False ) :              if vals . get ( <str> , False ) :                  pmode_id = vals [ <str> ]  else :                  pmode_id = self [ 0 ] . payment_mode_id . id  if pmode_id :                  pmode = self . env [ <str> ] . browse ( pmode_id ) if pmode . payment_order_type == <str> :                      mandate_obj = self . env [ <str> ] mandates = mandate_obj . search ( [ ( <str> , <str> , vals [ <str> ] ) , ( <str> , <str> , <str> ) ] ) mandate_sel = False if mandates :                          mandate_sel = mandates [ 0 ]  else :                          mandates = mandate_obj . search ( [ ( <str> , <str> , vals [ <str> ] ) , ( <str> , <str> , <str> ) ] ) if mandates :                              mandate_sel = mandates [ 0 ]   if mandate_sel :                          vals [ <str> ] = mandate_sel . id     return super ( account_invoice , self ) . write ( vals )    