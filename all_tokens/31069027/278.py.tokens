import logging from openerp import http from openerp . addons . auth_signup . controllers . main import AuthSignupHome as Home import openerp from openerp . addons . web . controllers . main import ensure_db from openerp . http import request from openerp . tools . translate import _ import werkzeug . utils _logger = logging . getLogger ( __name__ ) class OAuthLogin ( Home ) :      no_list_providers = False def list_providers ( self ) :          providers = super ( OAuthLogin , self ) . list_providers ( ) if self . no_list_providers :              providers = [ ]  self . no_list_providers = False return providers  @ http . route ( <str> , type = <str> , auth = <str> , website = True ) def web_auth_signup ( self , * args , ** kw ) :          self . no_list_providers = True response = super ( OAuthLogin , self ) . web_auth_signup ( * args , ** kw ) return response  @ http . route ( <str> , type = <str> , auth = <str> , website = True ) def web_login2 ( self , redirect = None , ** kw ) :          ensure_db ( ) providers = self . list_providers ( ) if request . httprequest . method == <str> and redirect and request . session . uid :              return http . redirect_with_hash ( redirect )  if not request . uid :              request . uid = openerp . SUPERUSER_ID  values = request . params . copy ( ) values [ <str> ] = providers if not redirect :              redirect = <str> + request . httprequest . query_string  values [ <str> ] = redirect try :              values [ <str> ] = http . db_list ( )  except openerp . exceptions . AccessDenied :              values [ <str> ] = None  if request . httprequest . method == <str> :              old_uid = request . uid uid = request . session . authenticate ( request . session . db , request . params [ <str> ] , request . params [ <str> ] ) if uid is not False :                  return http . redirect_with_hash ( redirect )  request . uid = old_uid values [ <str> ] = _ ( <str> )  if request . env . ref ( <str> , False ) :              return request . render ( <str> , values )  else :              error = <str> % request . session . db return werkzeug . utils . redirect ( <str> % error , 303 )     