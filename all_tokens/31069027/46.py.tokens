from openerp . osv import orm , fields from openerp import api class account_invoice ( orm . Model ) :      _inherit = <str> _columns = { <str> : fields . many2one ( <str> , <str> ) } def line_get_convert ( self , cr , uid , x , part , date , context = None ) :          res = super ( account_invoice , self ) . line_get_convert ( cr , uid , x , part , date , context = context ) res [ <str> ] = x . get ( <str> , False ) return res  @ api . model def _prepare_refund ( self , invoice , date = None , period_id = None , description = None , journal_id = None ) :          vals = super ( account_invoice , self ) . _prepare_refund ( invoice , date = date , period_id = period_id , description = description , journal_id = journal_id ) vals [ <str> ] = invoice . business_line_id . id return vals   class account_invoice_line ( orm . Model ) :      _inherit = <str> _columns = { <str> : fields . many2one ( <str> , <str> ) } _defaults = { <str> : lambda self , cr , uid , c : c . get ( <str> , False ) } def default_get ( self , cr , uid , fields , context = None ) :          if context is None : context = { } data = super ( account_invoice_line , self ) . default_get ( cr , uid , fields , context = context ) if context . get ( <str> , False ) :              data [ <str> ] = context [ <str> ]  return data  def move_line_get_item ( self , cr , uid , line , context = None ) :          res = super ( account_invoice_line , self ) . move_line_get_item ( cr , uid , line , context = context ) if res . get ( <str> ) :              need_bussines_line = self . pool . get ( <str> ) . browse ( cr , uid , res [ <str> ] ) . need_business_line if need_bussines_line :                  res [ <str> ] = line . business_line_id and line . business_line_id . id or ( line . invoice_id . business_line_id and line . invoice_id . business_line_id . id or False )   return res    