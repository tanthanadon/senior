from openerp import models , fields , exceptions , api from openerp . tools . translate import _ class sale_order ( models . Model ) :      _inherit = <str> blocked = fields . Boolean ( related = <str> ) allow_confirm_blocked = fields . Boolean ( <str> , copy = False ) def onchange_partner_id ( self , cr , uid , ids , part , context = None ) :          if not part :              return { <str> : { <str> : False , <str> : False , <str> : False } }  warning = { } title = False message = False partner_dict = self . pool . get ( <str> ) . read ( cr , uid , part , [ <str> ] ) partner_ids_to_check = [ partner_dict [ <str> ] [ 0 ] , part ] unique_partner_ids_to_check = filter ( lambda a : a != False , [ x for i , x in enumerate ( partner_ids_to_check ) if x not in partner_ids_to_check [ i + 1 : ] ] ) for partner_id in unique_partner_ids_to_check :              partner_fields_dict = self . pool . get ( <str> ) . read ( cr , uid , partner_id , [ <str> , <str> ] ) if partner_fields_dict [ <str> ] :                  title = _ ( <str> ) % partner_fields_dict [ <str> ] message = _ ( <str> ) warning = { <str> : title , <str> : message , }   result = super ( sale_order , self ) . onchange_partner_id ( cr , uid , ids , part , context = context ) if result . get ( <str> , False ) :              warning [ <str> ] = title and title + <str> + result [ <str> ] [ <str> ] or result [ <str> ] [ <str> ] warning [ <str> ] = message and message + <str> + result [ <str> ] [ <str> ] or result [ <str> ] [ <str> ]  return { <str> : result . get ( <str> , { } ) , <str> : warning }  @ api . multi def action_button_confirm ( self ) :          order = self [ 0 ] partner_ids_to_check = [ order . partner_id . commercial_partner_id . id , order . partner_id . id ] partner_ids_to_check = list ( set ( partner_ids_to_check ) ) for partner in self . env [ <str> ] . browse ( partner_ids_to_check ) :              if partner . blocked_sales and not order . allow_confirm_blocked :                  message = _ ( <str> <str> <str> ) % partner . name raise exceptions . Warning ( message )   return super ( sale_order , self ) . action_button_confirm ( )    