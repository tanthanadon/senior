from openerp import models , fields , _ , api , exceptions class SaleOrder ( models . Model ) :      _inherit = <str> @ api . one def _get_picking_ids ( self ) :          line_ids = [ x . id for x in self . order_line ] moves = self . env [ <str> ] . search ( [ ( <str> , <str> , line_ids ) ] ) picking_ids = [ x . picking_id . id for x in moves if x . picking_id ] self . picking_ids = list ( set ( picking_ids ) )  no_picking = fields . Boolean ( <str> , default = True ) picking_ids = fields . One2many ( <str> , compute = <str> , string = <str> )  class StockPicking ( models . Model ) :      _inherit = <str> @ api . multi def action_undo ( self ) :          for pick in self :              for move in pick . move_lines :                  move . picking_id = False  pick . unlink ( )  action = { } try :              action = self . env . ref ( <str> )  except ValueError :              raise exceptions . Warning ( _ ( <str> ) , _ ( <str> % <str> ) )  action = action . read ( ) return action   class StockMove ( models . Model ) :      _inherit = <str> @ api . multi def _picking_assign ( self , procurement_group , location_from , location_to ) :          if procurement_group :              sales = self . env [ <str> ] . search ( [ ( <str> , <str> , procurement_group ) ] ) if sales :                  if sales [ 0 ] . no_picking :                      return False    return super ( StockMove , self ) . _picking_assign ( procurement_group , location_from , location_to )    