import numpy as np import sys import healpy as hp fileAA = np . loadtxt ( sys . argv [ 1 ] ) fskyfile = np . loadtxt ( sys . argv [ 2 ] ) outfile = sys . argv [ 3 ] ellmin = float ( sys . argv [ 4 ] ) ellmax = float ( sys . argv [ 5 ] ) Nellbins = int ( sys . argv [ 6 ] ) binbounds = np . logspace ( np . log10 ( float ( ellmin ) ) , np . log10 ( float ( ellmax ) ) , num = Nellbins + 1 , endpoint = True ) binbounds = [ np . int ( b ) for b in binbounds ] Deltaell = np . zeros ( Nellbins ) for i in xrange ( 1 , Nellbins + 1 ) :      Deltaell [ i - 1 ] = binbounds [ i ] - binbounds [ i - 1 ]  fskymask = fskyfile [ 0 ] fsky2mask = fskyfile [ 1 ] clAA = np . transpose ( fileAA [ : , 1 : 7 ] ) def bin_cl ( cl , bb ) :      ell = np . arange ( len ( cl ) ) cltemp = cl * ( ell * ( ell + 1.0 ) ) / ( 2.0 * np . pi ) bb = [ np . int ( b ) for b in bb ] ellsubarrs = np . split ( ell , bb ) clsubarrs = np . split ( cltemp , bb ) ellbinned = np . zeros ( len ( bb ) + 1 ) clbinned = np . zeros ( len ( bb ) + 1 ) for i in xrange ( len ( bb ) + 1 ) :          ellbinned [ i ] = np . mean ( ellsubarrs [ i ] ) clbinned [ i ] = np . mean ( clsubarrs [ i ] )  return [ ellbinned [ 1 : len ( ellbinned ) - 1 ] , clbinned [ 1 : len ( ellbinned ) - 1 ] ]  clAA_binned = np . zeros ( ( 6 , Nellbins ) ) for i in xrange ( 6 ) :      [ ell_binned , clAA_binned [ i ] ] = bin_cl ( clAA [ i ] , binbounds )  np . savetxt ( outfile , np . transpose ( [ ell_binned , clAA_binned [ 1 ] , clAA_binned [ 2 ] ] ) )  