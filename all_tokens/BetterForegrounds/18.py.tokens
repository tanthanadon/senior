import numpy as np import glob , pickle import matplotlib . pyplot as plt import pyfits import healpy as hp from subprocess import call , PIPE from astropy . io import fits import rht_to_planck import rotate_map_alm Nside = 2048 Npix = 12 * Nside ** 2 def make_single_theta_TQU_map ( thetabin ) :      TQUmap = np . zeros ( ( 3 , Npix ) ) TQUmap [ 0 ] [ : ] = 1 thets1 = thets_unproj [ thetabin ] thets1U = np . sin ( 2 * thets1 ) thets1Q = np . cos ( 2 * thets1 ) TQUmap [ 1 ] [ : ] = - thets1Q TQUmap [ 2 ] [ : ] = thets1U print ( <str> ) for _tqu in range ( 3 ) :          TQUmap [ _tqu , : ] = hp . reorder ( TQUmap [ _tqu , : ] , n2r = True )  return TQUmap  def make_test_TQU_map ( place_id , unprojected_theta ) :      TQUmap = np . zeros ( ( 3 , Npix ) ) TQUmap [ 0 ] [ : ] = 1 thets1U = np . sin ( 2 * unprojected_theta ) thets1Q = np . cos ( 2 * unprojected_theta ) TQUmap [ 1 ] [ : ] = - thets1Q TQUmap [ 2 ] [ : ] = thets1U print ( <str> ) for _tqu in range ( 3 ) :          TQUmap [ _tqu , : ] = hp . reorder ( TQUmap [ _tqu , : ] , n2r = True )  return TQUmap  def rotate_TQU_Equ_to_Gal ( TQUmap , plot = False ) :      out_root = <str> hp . fitsfunc . write_map ( out_root + <str> , TQUmap , coord = <str> ) call ( <str> , shell = True , stdout = PIPE ) call ( <str> , shell = True , stdout = PIPE ) call ( <str> , shell = True , stdout = PIPE ) TQUmapGal = np . zeros ( ( 3 , Npix ) ) TQUmapGal [ 0 ] , TQUmapGal [ 1 ] , TQUmapGal [ 2 ] = hp . fitsfunc . read_map ( out_root + <str> , field = ( 0 , 1 , 2 ) ) call ( <str> , shell = True , stdout = PIPE ) call ( <str> , shell = True , stdout = PIPE ) if plot :          thetaGal = np . mod ( 0.5 * np . arctan2 ( TQUmapGal [ 2 ] , TQUmapGal [ 1 ] ) , np . pi ) hp . mollview ( thetaGal , unit = <str> , title = <str> , min = 0.0 , max = np . pi , coord = <str> )  return TQUmapGal  thets_unproj = rht_to_planck . get_thets ( 75 ) unprojected_theta = 2.9307297740993126 place_id = 18691216 TQUmapEqu = make_test_TQU_map ( place_id , unprojected_theta ) TQUmapGal = rotate_TQU_Equ_to_Gal ( TQUmapEqu , plot = False ) final_out_root = <str> hp . fitsfunc . write_map ( final_out_root + <str> + str ( place_id ) + <str> , TQUmapGal , coord = <str> )  