from __future__ import division , print_function import matplotlib . pyplot as plt import numpy as np import healpy as hp import copy import sys sys . path . insert ( 0 , <str> ) import foreground_tools def nonzero_data ( data , mask = None , samesize = False ) :      if samesize :          datacopy = copy . copy ( data )  if mask is not None :          data = data [ np . where ( mask == 1 ) ] if samesize :              datacopy [ np . where ( mask != 1 ) ] = None   else :          data [ np . where ( data == 0 ) ] = None if samesize :              datacopy [ np . where ( data == 0 ) ] = None   data = data [ ~ np . isnan ( data ) ] if samesize :          return data , datacopy  else :          return data   def get_nonzero_data ( hp_data_fn , mask = None , samesize = False ) :      data = hp . fitsfunc . read_map ( hp_data_fn ) if samesize :          data , datacopy = nonzero_data ( data , mask = mask , samesize = samesize ) return data , datacopy  else :          data = nonzero_data ( data , mask = mask , samesize = samesize ) return data   def plot_psi_p_hists ( * plotdata , ** kwargs ) :      fig = plt . figure ( facecolor = <str> ) ax1 = fig . add_subplot ( 121 ) ax2 = fig . add_subplot ( 122 ) ax = [ ax1 , ax2 ] for i , data in enumerate ( plotdata ) :          ax [ 0 ] . hist ( data [ 0 ] , label = data [ 2 ] , color = data [ 3 ] , ** kwargs ) ax [ 1 ] . hist ( data [ 1 ] , label = data [ 2 ] , color = data [ 3 ] , ** kwargs )  ax1 . set_title ( <str> ) ax2 . set_title ( <str> ) plt . legend ( loc = 4 )  def plot_psi_hists ( * plotdata , ** kwargs ) :      fig = plt . figure ( facecolor = <str> ) ax1 = fig . add_subplot ( 111 ) for i , data in enumerate ( plotdata ) :          ax1 . hist ( data [ 0 ] , label = data [ 1 ] , color = data [ 2 ] , ** kwargs )  ax1 . set_title ( <str> ) plt . legend ( loc = 4 )  if __name__ == <str> :      root = <str> pdeltafunc_fn = <str> psideltafunc_fn = <str> pMLmap_fn = <str> psiMLmap_fn = <str> p_planck_flatprior_fn = <str> psi_planck_flatprior_fn = <str> planck353_fn = <str> planckT , planckQ , planckU = hp . fitsfunc . read_map ( planck353_fn , field = ( 0 , 1 , 2 ) ) psi = np . mod ( 0.5 * np . arctan2 ( planckU , planckQ ) , np . pi ) RHT_TQU_Gal_fn = <str> RHT_T_Gal , QRHT , URHT = hp . fitsfunc . read_map ( RHT_TQU_Gal_fn , field = ( 0 , 1 , 2 ) ) intrhtmask = np . zeros ( RHT_T_Gal . shape ) intrhtmask [ RHT_T_Gal > 0.5 ] = 1 theta_rht = np . mod ( 0.5 * np . arctan2 ( URHT , - QRHT ) , np . pi ) p1 = get_nonzero_data ( root + pdeltafunc_fn ) psi1 = get_nonzero_data ( root + psideltafunc_fn ) p3 = get_nonzero_data ( pMLmap_fn ) psi3 , psi3plot = get_nonzero_data ( psiMLmap_fn , samesize = True ) pflat = get_nonzero_data ( p_planck_flatprior_fn ) psiflat , psiflatplot = get_nonzero_data ( psi_planck_flatprior_fn , samesize = True ) planckpsi , planckpsiplot = nonzero_data ( psi , mask = intrhtmask , samesize = True ) rhtpsi , rhtpsiplot = nonzero_data ( theta_rht , mask = intrhtmask , samesize = True ) histkwargs = { <str> : 100 , <str> : <str> } plot_psi_hists ( [ psiflat , <str> , <str> ] , [ psi3 , <str> , <str> ] , [ planckpsi , <str> , <str> ] , [ rhtpsi , <str> , <str> ] , ** histkwargs )   