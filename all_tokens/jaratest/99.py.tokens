from jaratoolbox import behavioranalysis reload ( behavioranalysis ) from jaratoolbox import loadbehavior from jaratoolbox import extraplots reload ( extraplots ) import numpy as np import matplotlib . pyplot as plt from statsmodels . stats . proportion import proportion_confint from jaratoolbox import settings import sys subjects = [ <str> ] subjects = [ <str> ] sessions = [ <str> , <str> ] paradigm = <str> laserColor = [ 0 , 0.75 , 0 ] plt . clf ( ) fontsize = 12 for inds , subject in enumerate ( subjects ) :      bdata = behavioranalysis . load_many_sessions ( subjects , sessions ) correct = bdata [ <str> ] == bdata . labels [ <str> ] [ <str> ] targetPercentage = bdata [ <str> ] choiceRight = bdata [ <str> ] == bdata . labels [ <str> ] [ <str> ] valid = bdata [ <str> ] . astype ( bool ) & ( bdata [ <str> ] != bdata . labels [ <str> ] [ <str> ] ) laserTrials = bdata [ <str> ] == bdata . labels [ <str> ] [ <str> ] validLaser = valid & laserTrials validNoLaser = valid & ~ laserTrials ( possibleValues , fractionHitsEachValue , ciHitsEachValue , nTrialsEachValue , nHitsEachValue ) = behavioranalysis . calculate_psychometric ( choiceRight , targetPercentage , validNoLaser ) ( possibleValuesL , fractionHitsEachValueL , ciHitsEachValueL , nTrialsEachValueL , nHitsEachValueL ) = behavioranalysis . calculate_psychometric ( choiceRight , targetPercentage , validLaser ) nNoLaser = np . sum ( validNoLaser ) nLaser = np . sum ( validLaser ) fractionCorrectNoLaser = np . mean ( correct [ validNoLaser ] ) fractionCorrectLaser = np . mean ( correct [ validLaser ] ) print ( <str> . format ( nNoLaser , fractionCorrectNoLaser , nLaser , fractionCorrectLaser ) ) plt . hold ( 1 ) ( pline , pcaps , pbars , pdots ) = extraplots . plot_psychometric ( 1e-3 * possibleValues , fractionHitsEachValue , ciHitsEachValue , xTickPeriod = 1 , xscale = <str> ) ( plineL , pcapsL , pbarsL , pdotsL ) = extraplots . plot_psychometric ( 1e-3 * possibleValuesL , fractionHitsEachValueL , ciHitsEachValueL , xTickPeriod = 1 , xscale = <str> ) plt . setp ( [ pline , plineL ] , lw = 3 ) plt . setp ( [ plineL , pcapsL , pbarsL , pdotsL ] , color = laserColor ) plt . setp ( pdotsL , mfc = laserColor ) plt . xlabel ( <str> , fontsize = fontsize ) plt . ylabel ( <str> , fontsize = fontsize ) extraplots . set_ticks_fontsize ( plt . gca ( ) , fontsize ) plt . legend ( [ pline , plineL ] , [ <str> , <str> ] , loc = <str> ) plt . title ( subject ) plt . show ( )  sys . exit ( )  