from jaratoolbox import behavioranalysis reload ( behavioranalysis ) from jaratoolbox import loadbehavior from jaratoolbox import extraplots reload ( extraplots ) import numpy as np from pylab import * import matplotlib . pyplot as plt from statsmodels . stats . proportion import proportion_confint from jaratoolbox import settings import sys animalName = <str> session = <str> experimenter = <str> paradigm = <str> behavioranalysis . behavior_summary ( animalName , session ) sys . exit ( ) behavFile = loadbehavior . path_to_behavior_data ( animalName , experimenter , paradigm , session ) bdata = loadbehavior . FlexCategBehaviorData ( behavFile ) targetFrequency = bdata [ <str> ] choice = bdata [ <str> ] valid = bdata [ <str> ] & ( choice != bdata . labels [ <str> ] [ <str> ] ) choiceRight = choice == bdata . labels [ <str> ] [ <str> ] possibleFreq = np . unique ( targetFrequency ) nFreq = len ( possibleFreq ) trialsEachFreq = behavioranalysis . find_trials_each_type ( targetFrequency , possibleFreq ) ( possibleValues , fractionHitsEachValue , ciHitsEachValue , nTrialsEachValue , nHitsEachValue ) = behavioranalysis . calculate_psychometric ( choiceRight , targetFrequency , valid ) ( pline , pcaps , pbars , pdots ) = extraplots . plot_psychometric ( possibleValues , fractionHitsEachValue , ciHitsEachValue ) show ( )  