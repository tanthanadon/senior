import allcells_test017_quality as allcells from jaratoolbox import settings import os clusNum = 12 class nestedDict ( dict ) :      def __getitem__ ( self , item ) :          try :              return super ( nestedDict , self ) . __getitem__ ( item )  except KeyError :              value = self [ item ] = type ( self ) ( ) return value    subject = allcells . cellDB [ 0 ] . animalName processedDir = os . path . join ( settings . EPHYS_PATH , subject + <str> ) maxZFilename = os . path . join ( processedDir , <str> ) maxZFile = open ( maxZFilename , <str> ) maxZFile . readline ( ) maxZDict = nestedDict ( ) behavName = <str> for line in maxZFile :      behavLine = line . split ( <str> ) freqLine = line . split ( ) if ( behavLine [ 0 ] == <str> ) :          behavName = behavLine [ 1 ] [ : - 1 ]  else :          maxZDict [ behavName ] [ freqLine [ 0 ] ] = freqLine [ 1 ] . split ( <str> ) [ 0 : - 1 ]   maxZFile . close ( ) behavSession = raw_input ( <str> ) freq = raw_input ( <str> ) print behavSession print freq numVal = len ( maxZDict [ behavSession ] [ freq ] ) count = 0 while ( count < numVal ) :      print ( count + 1 ) , <str> , maxZDict [ behavSession ] [ freq ] [ count ] count += 1 raw_input ( <str> )   