import numpy as np from jaratoolbox import extraplots from jaratoolbox import loadbehavior from jaratoolbox import behavioranalysis import matplotlib . pyplot as plt import sys import matplotlib . pyplot as plt session = sys . argv [ 1 ] animalList = [ <str> ] nValidAll = [ ] fractionValidAll = [ ] fractionCorrectAll = [ ] plt . clf ( ) nSubjects = len ( animalList ) for inds , subject in enumerate ( animalList ) :      behavFile = loadbehavior . path_to_behavior_data ( subject , <str> , session ) bdata = loadbehavior . BehaviorData ( behavFile ) delayToTargetMean = bdata [ <str> ] [ - 1 ] delayToTargetHalfRange = bdata [ <str> ] [ - 1 ] targetDuration = bdata [ <str> ] [ - 1 ] delayToGoSignal = bdata [ <str> ] [ - 1 ] targetFrequency = bdata [ <str> ] choice = bdata [ <str> ] valid = bdata [ <str> ] & ( choice != bdata . labels [ <str> ] [ <str> ] ) choiceRight = ( choice == bdata . labels [ <str> ] [ <str> ] ) outcome = bdata [ <str> ] validCorrect = outcome [ valid . astype ( bool ) ] == bdata . labels [ <str> ] [ <str> ] nValid = np . sum ( valid ) fractionValid = np . mean ( valid ) fractionCorrect = np . mean ( validCorrect ) ( possibleValues , fractionHitsEachValue , ciHitsEachValue , nTrialsEachValue , nHitsEachValue ) = behavioranalysis . calculate_psychometric ( choiceRight , targetFrequency , valid ) nValidAll . append ( nValid ) fractionValidAll . append ( fractionValid ) fractionCorrectAll . append ( fractionCorrect ) plt . subplot ( nSubjects // 2 + 1 , 2 , inds + 1 ) ( plineC , pcapsC , pbarsC , pdotsC ) = extraplots . plot_psychometric ( possibleValues , fractionHitsEachValue , ciHitsEachValue ) plt . ylabel ( <str> ) plt . xlabel ( <str> ) plt . title ( <str> . format ( animalList [ inds ] , float ( delayToGoSignal ) ) ) plt . draw ( ) plt . show ( )   