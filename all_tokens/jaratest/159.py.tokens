from jaratoolbox import settings from jaratoolbox import loadopenephys import numpy as np import os from jaratoolbox import spikesorting reload ( spikesorting ) from jaratoolbox import loadbehavior from jaratoolbox import ephyscore from jaratoolbox import spikesanalysis from jaratoolbox import extraplots import matplotlib . pyplot as plt import sys import importlib class nestedDict ( dict ) :      def __getitem__ ( self , item ) :          try :              return super ( nestedDict , self ) . __getitem__ ( item )  except KeyError :              value = self [ item ] = type ( self ) ( ) return value    mouseNameList = sys . argv [ 1 : ] ISIcutoff = 0.002 clusNum = 12 numTetrodes = 8 SAMPLING_RATE = 30000.0 ephysRootDir = settings . EPHYS_PATH print <str> for mouseName in mouseNameList :      allcellsFileName = <str> + mouseName sys . path . append ( settings . ALLCELLS_PATH ) allcells = importlib . import_module ( allcellsFileName ) outputDir = ephysRootDir nameOfFile = <str> finalOutputDir = outputDir + <str> + mouseName + <str> if not os . path . exists ( finalOutputDir ) :          os . mkdir ( finalOutputDir )  numOfCells = len ( allcells . cellDB ) behavSession = <str> ephysSession = <str> tetrodeID = <str> ISIDict = nestedDict ( ) ISIList = [ ] try :          text_file = open ( <str> % ( finalOutputDir , nameOfFile ) , <str> ) text_file . readline ( ) behavName = <str> for line in text_file :              behavLine = line . split ( <str> ) freqLine = line . split ( ) if ( behavLine [ 0 ] == <str> ) :                  behavName = behavLine [ 1 ] [ : - 1 ] ISIList . append ( behavName )    except :          text_file = open ( <str> % ( finalOutputDir , nameOfFile ) , <str> )  badSessionList = [ ] for cellID in range ( 0 , numOfCells ) :          oneCell = allcells . cellDB [ cellID ] tetrode = oneCell . tetrode cluster = oneCell . cluster if ( oneCell . behavSession in ISIList ) :              continue  if ( behavSession != oneCell . behavSession ) :              print behavSession behavSession = oneCell . behavSession ISIDict [ behavSession ] = np . ones ( [ clusNum * numTetrodes ] )  try :              subject = oneCell . animalName ephysSession = oneCell . ephysSession ephysRoot = os . path . join ( ephysRootDir , subject ) clusterNumber = ( tetrode - 1 ) * clusNum + ( cluster - 1 ) spkData = ephyscore . CellData ( oneCell ) spkTimeStamps = spkData . spikes . timestamps ISI = np . diff ( spkTimeStamps ) if np . any ( ISI < 0 ) :                  raise <str>  if len ( ISI ) == 0 :                  ISI = np . array ( 10 )  ISIVioBool = ISI < ISIcutoff fractionViolation = np . mean ( ISIVioBool ) ISIDict [ behavSession ] [ clusterNumber ] = fractionViolation  except :              if ( oneCell . behavSession not in badSessionList ) :                  badSessionList . append ( oneCell . behavSession )    bSessionList = [ ] for bSession in ISIDict :          if ( bSession not in badSessionList ) :              bSessionList . append ( bSession )   bSessionList . sort ( ) for bSession in bSessionList :          text_file . write ( <str> % bSession ) for ISIfraction in ISIDict [ bSession ] :              text_file . write ( <str> % ISIfraction )  text_file . write ( <str> )  text_file . close ( ) print <str> for badSes in badSessionList :          print badSes  print <str> , mouseName   