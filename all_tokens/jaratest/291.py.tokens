__author__ = <str> __date__ = <str> import sys from PySide import QtCore from PySide import QtGui import signal import os import numpy as np import plottingRasterAndHist import matplotlib . pyplot as plt def plotting_function ( someValue ) :      import matplotlib . pyplot as plt plt . clf ( ) plt . plot ( np . random . rand ( someValue ) , <str> ) plt . draw ( ) plt . show ( )  class graphUI ( QtGui . QMainWindow ) :      def __init__ ( self , parent = None , paramfile = None , paramdictname = None ) :          super ( graphUI , self ) . __init__ ( parent ) self . centralWidget = QtGui . QWidget ( ) layoutMain = QtGui . QVBoxLayout ( ) self . allFreqButtonPressed = False self . compareButtonPressed = False self . oneLabel = QtGui . QLabel ( <str> ) self . oneNumeric = QtGui . QLineEdit ( ) self . oneNumeric . setText ( <str> ) self . oneButton = QtGui . QPushButton ( <str> ) self . oneButton . clicked . connect ( self . plot_data ) layoutMain . addWidget ( self . oneLabel ) layoutMain . addWidget ( self . oneNumeric ) layoutMain . addWidget ( self . oneButton ) self . plotButton = QtGui . QPushButton ( <str> ) self . plotButton . clicked . connect ( self . plotting_data ) self . subjectLabel = QtGui . QLabel ( <str> ) self . subjectNumeric = QtGui . QLineEdit ( ) self . subjectNumeric . setText ( <str> ) self . ephysSessionLabel = QtGui . QLabel ( <str> ) self . ephysSessionNumeric = QtGui . QLineEdit ( ) self . ephysSessionNumeric . setText ( <str> ) self . behaviorSessionLabel = QtGui . QLabel ( <str> ) self . behaviorSessionNumeric = QtGui . QLineEdit ( ) self . behaviorSessionNumeric . setText ( <str> ) self . allFreqButtonPressed = False self . allFreqButton = QtGui . QPushButton ( <str> ) self . allFreqButton . setCheckable ( True ) self . allFreqButton . clicked . connect ( self . plotFreqRaster ) self . compareButtonPressed = False self . compareButton = QtGui . QPushButton ( <str> ) self . compareButton . setCheckable ( True ) self . compareButton . clicked . connect ( self . plotCompareRaster ) self . tetrodeLabel = QtGui . QLabel ( <str> ) self . tetrodeNumeric = QtGui . QLineEdit ( ) self . tetrodeNumeric . setText ( <str> ) self . freqLabel = QtGui . QLabel ( <str> ) self . freqNumeric = QtGui . QLineEdit ( ) self . freqNumeric . setText ( <str> ) self . trialsToUse1Label = QtGui . QLabel ( <str> ) self . trialsToUse1MenuBar = QtGui . QMenuBar ( ) self . trialsToUse2Label = QtGui . QLabel ( <str> ) self . trialsToUse2MenuBar = QtGui . QMenuBar ( ) self . rastorCenterLabel = QtGui . QLabel ( <str> ) self . rastorCenterMenuBar = QtGui . QMenuBar ( ) self . binSizeLabel = QtGui . QLabel ( <str> ) self . binSizeNumeric = QtGui . QLineEdit ( ) self . binSizeNumeric . setText ( <str> ) self . startTimeLabel = QtGui . QLabel ( <str> ) self . startTimeNumeric = QtGui . QLineEdit ( ) self . startTimeNumeric . setText ( <str> ) self . endTimeLabel = QtGui . QLabel ( <str> ) self . endTimeNumeric = QtGui . QLineEdit ( ) self . endTimeNumeric . setText ( <str> ) self . startRangeLabel = QtGui . QLabel ( <str> ) self . startRangeNumeric = QtGui . QLineEdit ( ) self . startRangeNumeric . setText ( <str> ) self . endRangeLabel = QtGui . QLabel ( <str> ) self . endRangeNumeric = QtGui . QLineEdit ( ) self . endRangeNumeric . setText ( <str> ) self . saveLabel = QtGui . QLabel ( <str> ) layoutMain . addWidget ( self . plotButton ) layoutMain . addWidget ( self . subjectLabel ) layoutMain . addWidget ( self . subjectNumeric ) layoutMain . addWidget ( self . ephysSessionLabel ) layoutMain . addWidget ( self . ephysSessionNumeric ) layoutMain . addWidget ( self . behaviorSessionLabel ) layoutMain . addWidget ( self . behaviorSessionNumeric ) layoutMain . addWidget ( self . allFreqButton ) layoutMain . addWidget ( self . compareButton ) layoutMain . addWidget ( self . tetrodeLabel ) layoutMain . addWidget ( self . tetrodeNumeric ) layoutMain . addWidget ( self . freqLabel ) layoutMain . addWidget ( self . freqNumeric ) layoutMain . addWidget ( self . trialsToUse1Label ) layoutMain . addWidget ( self . trialsToUse1MenuBar ) layoutMain . addWidget ( self . trialsToUse2Label ) layoutMain . addWidget ( self . trialsToUse2MenuBar ) layoutMain . addWidget ( self . rastorCenterLabel ) layoutMain . addWidget ( self . rastorCenterMenuBar ) layoutMain . addWidget ( self . binSizeLabel ) layoutMain . addWidget ( self . binSizeNumeric ) layoutMain . addWidget ( self . startTimeLabel ) layoutMain . addWidget ( self . startTimeNumeric ) layoutMain . addWidget ( self . endTimeLabel ) layoutMain . addWidget ( self . endTimeNumeric ) layoutMain . addWidget ( self . startRangeLabel ) layoutMain . addWidget ( self . startRangeNumeric ) layoutMain . addWidget ( self . endRangeLabel ) layoutMain . addWidget ( self . endRangeNumeric ) layoutMain . addWidget ( self . saveLabel ) self . centralWidget . setLayout ( layoutMain ) self . setCentralWidget ( self . centralWidget )  def plot_data ( self ) :          oneValue = int ( self . oneNumeric . text ( ) ) plotting_function ( oneValue )  def plotFreqRaster ( self ) :          if ( self . allFreqButtonPressed ) :              self . allFreqButtonPressed = False  else :              self . allFreqButtonPressed = True   def plotCompareRaster ( self ) :          if ( self . compareButtonPressed ) :              self . compareButtonPressed = False  else :              self . compareButtonPressed = True   def plotting_data ( self ) :         tetrodeNum = int ( self . tetrodeNumeric . text ( ) ) freqNum = int ( self . freqNumeric . text ( ) ) binSize = float ( self . binSizeNumeric . text ( ) ) startTime = float ( self . startTimeNumeric . text ( ) ) endTime = float ( self . endTimeNumeric . text ( ) ) startRange = float ( self . startRangeNumeric . text ( ) ) endRange = float ( self . endRangeNumeric . text ( ) ) plt . clf ( ) if ( self . compareButtonPressed ) :             if ( self . allFreqButtonPressed ) :                 plottingRasterAndHist . plottingAllFreqCompareRaster ( self . subjectNumeric . text ( ) , self . ephysSessionNumeric . text ( ) , self . behaviorSessionNumeric . text ( ) , tetrodeNum , freqNum , binSize , startTime , endTime , startRange , endRange )  else :                 plottingRasterAndHist . plottingOneFreqCompareRaster ( self . subjectNumeric . text ( ) , self . ephysSessionNumeric . text ( ) , self . behaviorSessionNumeric . text ( ) , tetrodeNum , freqNum , binSize , startTime , endTime , startRange , endRange )   else :             plottingRasterAndHist . plottingAllFreqRaster ( self . subjectNumeric . text ( ) , self . ephysSessionNumeric . text ( ) , self . behaviorSessionNumeric . text ( ) , tetrodeNum , freqNum , binSize , startTime , endTime , startRange , endRange )   def closeEvent ( self , event ) :          event . accept ( )   if __name__ == <str> :      signal . signal ( signal . SIGINT , signal . SIG_DFL ) app = QtGui . QApplication . instance ( ) if not app :          app = QtGui . QApplication ( sys . argv )  graphingUI = graphUI ( ) graphingUI . show ( ) sys . exit ( app . exec_ ( ) )   