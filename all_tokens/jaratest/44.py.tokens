import os from jaratoolbox import loadopenephys reload ( loadopenephys ) from pylab import * ephysRoot = <str> ephysSession = sort ( os . listdir ( ephysRoot ) ) [ - 1 ] dataDir = os . path . join ( ephysRoot , ephysSession ) timeRange = [ - 0.6 , 0.8 ] eventsFilename = os . path . join ( dataDir , <str> ) events = loadopenephys . Events ( eventsFilename ) eventOnsetTimes = events . timestamps [ events . eventID == 1 ] channelsToPlot = [ 16 , 17 ] channelsToPlot = [ 3 , 6 , 11 , 15 , 19 , 23 ] nChannels = len ( channelsToPlot ) clf ( ) for indc , channel in enumerate ( channelsToPlot ) :      filenameOnly = <str> . format ( channel ) filename = os . path . join ( dataDir , filenameOnly ) datacont = loadopenephys . DataCont ( filename ) ( lockedLFP , timeVec ) = datacont . lock_to_event ( eventOnsetTimes , timeRange ) subplot ( nChannels , 1 , indc + 1 ) maxAbsVal = np . max ( abs ( lockedLFP ) , axis = 1 ) tooLarge = maxAbsVal > 6000 plot ( timeVec , mean ( lockedLFP [ ~ tooLarge , : ] , axis = 0 ) ) ylim ( [ - 200 , 80 ] ) show ( ) if 0 :          clf ( ) plot ( datacont . samples [ : 10000 ] , <str> ) draw ( ) ; show ( )   show ( )  