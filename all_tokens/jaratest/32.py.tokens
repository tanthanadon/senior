from jaratoolbox import celldatabase from jaratoolbox import extraplots from jaratoolbox import spikesanalysis from jaratoolbox import spikesorting from jaratoolbox import behavioranalysis from jaratoolbox import loadbehavior from jaratoolbox import loadopenephys reload ( loadopenephys ) from jaratoolbox import settings import matplotlib . pyplot as plt import matplotlib . gridspec as gridspec import numpy as np from scipy import stats import os import pdb subject = <str> db = celldatabase . generate_cell_database ( <str> ) allShapeQuality = np . empty ( len ( db ) ) for indCell , cell in db . iterrows ( ) :      peakAmplitudes = cell [ <str> ] spikeShapeSD = cell [ <str> ] thisShapeQuality = abs ( peakAmplitudes [ 1 ] / spikeShapeSD . mean ( ) ) allShapeQuality [ indCell ] = thisShapeQuality  allShapeQuality [ allShapeQuality == np . inf ] = 0 db [ <str> ] = allShapeQuality goodCells = db . query ( <str> ) thisCell = goodCells . loc [ 78 ] tetrode = int ( thisCell [ <str> ] ) cluster = int ( thisCell [ <str> ] ) behavFileName = thisCell [ <str> ] [ 1 ] session = thisCell [ <str> ] [ 1 ] ephysBaseDir = os . path . join ( settings . EPHYS_PATH , subject ) eventFilename = os . path . join ( ephysBaseDir , session , <str> ) spikesFilename = os . path . join ( ephysBaseDir , session , <str> . format ( tetrode ) ) eventData = loadopenephys . Events ( eventFilename ) spikeData = loadopenephys . DataSpikes ( spikesFilename ) clustersDir = os . path . join ( ephysBaseDir , <str> . format ( session ) ) clustersFile = os . path . join ( clustersDir , <str> . format ( tetrode ) ) spikeData . set_clusters ( clustersFile ) if cluster is not None :      spikeData . samples = spikeData . samples [ spikeData . clusters == cluster ] spikeData . timestamps = spikeData . timestamps [ spikeData . clusters == cluster ]  spikeData . samples = spikeData . samples . astype ( float ) - 2 ** 15 spikeData . samples = ( 1000.0 / spikeData . gain [ 0 , 0 ] ) * spikeData . samples spikeData . timestamps = spikeData . timestamps / spikeData . samplingRate eventData . timestamps = eventData . timestamps / eventData . samplingRate behavFile = os . path . join ( settings . BEHAVIOR_PATH , subject , behavFileName ) bdata = loadbehavior . BehaviorData ( behavFile , readmode = <str> ) eventOnsetTimes = eventData . get_event_onset_times ( ) spikeTimeStamps = spikeData . timestamps laser = bdata [ <str> ] freqEachTrial = bdata [ <str> ] timeRange = [ - 0.1 , 1.0 ] trialsEachCond = behavioranalysis . find_trials_each_type ( freqEachTrial , np . unique ( freqEachTrial ) ) spikeTimesFromEventOnset , trialIndexForEachSpike , indexLimitsEachTrial = spikesanalysis . eventlocked_spiketimes ( spikeTimeStamps , eventOnsetTimes , timeRange ) pRaster , hcond , zline = extraplots . raster_plot ( spikeTimesFromEventOnset , indexLimitsEachTrial , timeRange , trialsEachCond = trialsEachCond ) xlabel = <str> ylabel = <str> plt . xlabel ( xlabel ) plt . ylabel ( ylabel ) figname = <str> + str ( session ) + <str> + str ( tetrode ) + <str> + str ( 78 ) + <str> plt . savefig ( figname ) plt . show ( )   