import allcells_test055_quality as allcells from jaratoolbox import settings import os ephysRootDir = settings . EPHYS_PATH experimenter = <str> paradigm = <str> numOfCells = len ( allcells . cellDB ) qualityList = [ 1 ] minZVal = 3.0 subject = allcells . cellDB [ 0 ] . animalName processedDir = os . path . join ( settings . EPHYS_PATH , subject + <str> ) maxZFilename = os . path . join ( processedDir , <str> ) minPerfFilename = os . path . join ( processedDir , <str> ) minTrialFilename = os . path . join ( processedDir , <str> ) maxZFile = open ( maxZFilename , <str> ) minPerfFile = open ( minPerfFilename , <str> ) minTrialFile = open ( minTrialFilename , <str> ) minPerfFile . readline ( ) minPerfList = minPerfFile . read ( ) . split ( ) minTrialFile . readline ( ) minTrialFile . readline ( ) minTrialDict = { } for lineCount , line in enumerate ( minTrialFile ) :      minTrialStr = line . split ( <str> ) trialFreq = minTrialStr [ 1 ] . split ( ) minTrialDict . update ( { minTrialStr [ 0 ] [ 1 : ] : trialFreq } )  maxZFile . readline ( ) maxZDict = { } for lineCount , line in enumerate ( maxZFile ) :      maxZStr = line . split ( ) zVal = maxZStr [ 1 ] . split ( <str> ) maxZDict . update ( { maxZStr [ 0 ] : zVal } )  maxZFile . close ( ) minPerfFile . close ( ) minTrialFile . close ( ) for cellID in range ( 0 , numOfCells ) :      oneCell = allcells . cellDB [ cellID ] subject = oneCell . animalName behavSession = oneCell . behavSession ephysSession = oneCell . ephysSession cluster = oneCell . cluster clusterQuality = oneCell . quality [ cluster - 1 ] if clusterQuality not in qualityList :          continue  elif behavSession not in minPerfList :          continue  elif behavSession not in minTrialDict :          continue  elif behavSession not in maxZDict :          continue  print behavSession   