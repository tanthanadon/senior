import numpy as np from jaratoolbox import extrastats from jaratoolbox import extraplots from jaratoolbox import loadbehavior from jaratoolbox import behavioranalysis import matplotlib . pyplot as plt subject = <str> session = <str> behavFile = loadbehavior . path_to_behavior_data ( subject , <str> , session ) bdata = loadbehavior . BehaviorData ( behavFile ) targetFrequency = bdata [ <str> ] choice = bdata [ <str> ] valid = bdata [ <str> ] & ( choice != bdata . labels [ <str> ] [ <str> ] ) choiceRight = choice == bdata . labels [ <str> ] [ <str> ] ( possibleValues , fractionHitsEachValue , ciHitsEachValue , nTrialsEachValue , nHitsEachValue ) = behavioranalysis . calculate_psychometric ( choiceRight , targetFrequency , valid ) logPossibleValues = np . log2 ( possibleValues ) plt . clf ( ) plt . plot ( logPossibleValues , fractionHitsEachValue , <str> ) plt . xlabel ( <str> ) plt . ylabel ( <str> ) plt . show ( ) constraints = [ <str> , <str> , <str> , <str> ] curveParams = extrastats . psychometric_fit ( logPossibleValues , nTrialsEachValue , nHitsEachValue , constraints ) print <str> print curveParams plt . hold ( True ) xValues = logPossibleValues xRange = xValues [ - 1 ] - xValues [ 1 ] fitxval = np . linspace ( xValues [ 0 ] - 0.1 * xRange , xValues [ - 1 ] + 0.1 * xRange , 40 ) fityval = extrastats . psychfun ( fitxval , * curveParams ) hfit = plt . plot ( fitxval , fityval , <str> , linewidth = 2 , color = <str> ) plt . hold ( False ) plt . draw ( )  