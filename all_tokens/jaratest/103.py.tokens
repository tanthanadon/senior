import numpy as np from jaratoolbox import extraplots from jaratoolbox import loadbehavior from jaratoolbox import behavioranalysis import matplotlib . pyplot as plt import sys subject = sys . argv [ 1 ] session = sys . argv [ 2 ] behavFile = loadbehavior . path_to_behavior_data ( subject , <str> , session ) bdata = loadbehavior . BehaviorData ( behavFile ) targetFrequency = bdata [ <str> ] choice = bdata [ <str> ] valid = bdata [ <str> ] & ( choice != bdata . labels [ <str> ] [ <str> ] ) choiceRight = ( choice == bdata . labels [ <str> ] [ <str> ] ) laserTrials = ( bdata [ <str> ] == bdata . labels [ <str> ] [ <str> ] ) validControl = valid & ~ laserTrials validLaser = valid & laserTrials ( possibleValuesControl , fractionHitsEachValueControl , ciHitsEachValueControl , nTrialsEachValueControl , nHitsEachValueControl ) = behavioranalysis . calculate_psychometric ( choiceRight , targetFrequency , validControl ) ( possibleValuesLaser , fractionHitsEachValueLaser , ciHitsEachValueLaser , nTrialsEachValueLaser , nHitsEachValueLaser ) = behavioranalysis . calculate_psychometric ( choiceRight , targetFrequency , validLaser ) plt . clf ( ) plt . hold ( True ) ( plineC , pcapsC , pbarsC , pdotsC ) = extraplots . plot_psychometric ( possibleValuesControl , fractionHitsEachValueControl , ciHitsEachValueControl ) ( plineL , pcapsL , pbarsL , pdotsL ) = extraplots . plot_psychometric ( possibleValuesLaser , fractionHitsEachValueLaser , ciHitsEachValueLaser ) plt . setp ( [ plineL , pcapsL , pbarsL ] , color = <str> ) plt . setp ( pdotsL , mfc = <str> , mec = <str> ) plt . hold ( False ) plt . xlabel ( <str> ) plt . ylabel ( <str> ) plt . title ( <str> . format ( subject , session ) ) plt . legend ( [ plineC , plineL ] , [ <str> , <str> ] , loc = <str> ) plt . show ( )  