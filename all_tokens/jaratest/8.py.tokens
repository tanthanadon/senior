import os import sys import numpy as np import matplotlib . pyplot as plt import matplotlib . patches as mpatches from numpy import array from jaratoolbox import settings from jaratoolbox import celldatabase from jaratoolbox import behavioranalysis from jaratoolbox import spikesanalysis from jaratoolbox import extraplots from jaratoolbox import ephyscore from jaratoolbox import spikesorting import studyparams dbPath = os . path . join ( settings . FIGURES_DATA_PATH , studyparams . STUDY_NAME ) dbFilename = os . path . join ( dbPath , <str> . format ( studyparams . STUDY_NAME ) ) celldb = celldatabase . load_hdf ( dbFilename ) number_of_clusters = len ( celldb ) - 1 timeRange = [ - 0.1 , 0.4 ] binWidth = 0.010 timeVec = np . arange ( timeRange [ 0 ] , timeRange [ - 1 ] , binWidth ) smoothWinSizePsth = 2 lwPsth = 2 downsampleFactorPsth = 1 oddball_patch = mpatches . Patch ( color = <str> , label = <str> ) standard_patch = mpatches . Patch ( color = <str> , label = <str> ) for indRow , dbRow in celldb [ 700 : 922 ] . iterrows ( ) :      if not <str> in dbRow [ <str> ] :          print ( <str> ) continue  oneCell = ephyscore . Cell ( dbRow ) plt . clf ( ) ax = plt . subplot2grid ( ( 4 , 8 ) , ( 0 , 0 ) ) ax0 = plt . subplot2grid ( ( 4 , 8 ) , ( 0 , 0 ) ) ax0 . axis ( <str> ) plt . text ( 0.0 , 0.5 , <str> . format ( dbRow [ <str> ] , dbRow [ <str> ] ) , fontsize = 9 ) plt . text ( 0.0 , 0.4 , <str> . format ( dbRow [ <str> ] , dbRow [ <str> ] , dbRow [ <str> ] ) , fontsize = 9 ) ephysDataN , bdataN = oneCell . load ( <str> ) spikeTimesN = ephysDataN [ <str> ] eventOnsetTimesN = ephysDataN [ <str> ] [ <str> ] ( spikeTimesFromEventOnsetN , trialIndexForEachSpikeN , indexLimitsEachTrialN ) = spikesanalysis . eventlocked_spiketimes ( spikeTimesN , eventOnsetTimesN , timeRange ) ax1 = plt . subplot2grid ( ( 4 , 8 ) , ( 1 , 0 ) ) extraplots . raster_plot ( spikeTimesFromEventOnsetN , indexLimitsEachTrialN , timeRange ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> , fontsize = 9 ) ax2 = plt . subplot2grid ( ( 4 , 8 ) , ( 2 , 0 ) ) try :          spikesorting . plot_waveforms ( ephysDataN [ <str> ] ) ax2 . set_title ( <str> , fontsize = 9 )  except ValueError as verror :          print ( verror ) continue  if oneCell . get_session_inds ( <str> ) != [ ] :          try :              ephysDataT , bdataT = oneCell . load ( <str> )  except ValueError as verror :              print ( verror ) continue  ephysDataT , bdataT = oneCell . load ( <str> ) spikeTimesT = ephysDataT [ <str> ] eventOnsetTimesT = ephysDataT [ <str> ] [ <str> ] frequenciesEachTrialT = bdataT [ <str> ] arrayOfFrequenciesT = np . unique ( bdataT [ <str> ] ) arrayOfFrequenciesTkHz = arrayOfFrequenciesT / 1000 labelsForYaxis = [ <str> % f for f in arrayOfFrequenciesTkHz ] trialsEachCondT = behavioranalysis . find_trials_each_type ( frequenciesEachTrialT , arrayOfFrequenciesT ) ( spikeTimesFromEventOnsetT , trialIndexForEachSpikeT , indexLimitsEachTrialT ) = spikesanalysis . eventlocked_spiketimes ( spikeTimesT , eventOnsetTimesT , timeRange ) ax4 = plt . subplot2grid ( ( 4 , 8 ) , ( 0 , 1 ) , rowspan = 3 ) ( pRaster , hcond , zline ) = extraplots . raster_plot ( spikeTimesFromEventOnsetT , indexLimitsEachTrialT , timeRange , trialsEachCondT , labels = labelsForYaxis ) plt . setp ( pRaster , ms = 1 ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> , fontsize = 9 ) ax5 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 1 ) ) spikesorting . plot_isi_loghist ( spikeTimesT )  else :          ax4 = plt . subplot2grid ( ( 4 , 8 ) , ( 0 , 1 ) , rowspan = 3 ) ax5 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 1 ) )  ax6 = plt . subplot2grid ( ( 4 , 8 ) , ( 0 , 2 ) ) ax6 . axis ( <str> ) plt . text ( 0.25 , 0.5 , <str> , fontsize = 9 ) if oneCell . get_session_inds ( <str> ) != [ ] :          try :              ephysDataA , bdataA = oneCell . load ( <str> )  except ValueError as verror :              print ( verror ) continue  spikeTimesA = ephysDataA [ <str> ] eventOnsetTimesA = ephysDataA [ <str> ] [ <str> ] if len ( eventOnsetTimesA ) == len ( bdataA [ <str> ] ) + 1 :              print ( <str> ) eventOnsetTimesA = eventOnsetTimesA [ : - 1 ]  ( spikeTimesFromEventOnsetA , trialIndexForEachSpikeA , indexLimitsEachTrialA ) = spikesanalysis . eventlocked_spiketimes ( spikeTimesA , eventOnsetTimesA , timeRange ) stimConditionA = bdataA [ <str> ] if stimConditionA [ - 1 ] == 1 :              print ( <str> ) stimConditionA = stimConditionA [ : - 1 ]  oddballsA = np . flatnonzero ( stimConditionA ) firstOddballA = np . array ( oddballsA [ : : 2 ] ) secondOddballA = np . array ( oddballsA [ 1 : : 2 ] ) thirdOddballA = secondOddballA + 1 standardForFirstOddballA = firstOddballA - 2 standardForSecondOddballA = secondOddballA - 4 standardForThirdOddballA = thirdOddballA - 3 firstOddballIndexLimitsA = indexLimitsEachTrialA [ : , firstOddballA ] secondOddballIndexLimitsA = indexLimitsEachTrialA [ : , secondOddballA ] thirdOddballIndexLimitsA = indexLimitsEachTrialA [ : , thirdOddballA ] ax7 = plt . subplot2grid ( ( 4 , 8 ) , ( 1 , 2 ) ) extraplots . raster_plot ( spikeTimesFromEventOnsetA , firstOddballIndexLimitsA , timeRange ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> , fontsize = 9 ) ax11 = plt . subplot2grid ( ( 4 , 8 ) , ( 1 , 3 ) ) extraplots . raster_plot ( spikeTimesFromEventOnsetA , secondOddballIndexLimitsA , timeRange ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> , fontsize = 9 ) ax15 = plt . subplot2grid ( ( 4 , 8 ) , ( 1 , 4 ) ) extraplots . raster_plot ( spikeTimesFromEventOnsetA , thirdOddballIndexLimitsA , timeRange ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> , fontsize = 9 ) firstStandardIndexLimitsA = indexLimitsEachTrialA [ : , standardForFirstOddballA ] secondStandardIndexLimitsA = indexLimitsEachTrialA [ : , standardForSecondOddballA ] thirdStandardIndexLimitsA = indexLimitsEachTrialA [ : , standardForThirdOddballA ] ax8 = plt . subplot2grid ( ( 4 , 8 ) , ( 2 , 2 ) ) extraplots . raster_plot ( spikeTimesFromEventOnsetA , firstStandardIndexLimitsA , timeRange ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> , fontsize = 9 ) ax12 = plt . subplot2grid ( ( 4 , 8 ) , ( 2 , 3 ) ) extraplots . raster_plot ( spikeTimesFromEventOnsetA , secondStandardIndexLimitsA , timeRange ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> , fontsize = 9 ) ax16 = plt . subplot2grid ( ( 4 , 8 ) , ( 2 , 4 ) ) extraplots . raster_plot ( spikeTimesFromEventOnsetA , thirdStandardIndexLimitsA , timeRange ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> , fontsize = 9 ) frequenciesEachTrialA = bdataA [ <str> ] arrayOfFrequenciesA = np . unique ( bdataA [ <str> ] ) arrayOfFrequenciesAkHz = arrayOfFrequenciesA / 1000 labelsForYaxis = [ <str> % f for f in arrayOfFrequenciesAkHz ] trialsEachCondA = behavioranalysis . find_trials_each_type ( frequenciesEachTrialA , arrayOfFrequenciesA ) ax14 = plt . subplot2grid ( ( 4 , 8 ) , ( 0 , 3 ) , colspan = 2 ) ( pRaster , hcond , zline ) = extraplots . raster_plot ( spikeTimesFromEventOnsetA , indexLimitsEachTrialA , timeRange , trialsEachCondA , labels = labelsForYaxis ) plt . setp ( pRaster , ms = 1 ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) spikeCountMatFirstOddballA = spikesanalysis . spiketimes_to_spikecounts ( spikeTimesFromEventOnsetA , firstOddballIndexLimitsA , timeVec ) spikeCountMatSecondOddballA = spikesanalysis . spiketimes_to_spikecounts ( spikeTimesFromEventOnsetA , secondOddballIndexLimitsA , timeVec ) spikeCountMatThirdOddballA = spikesanalysis . spiketimes_to_spikecounts ( spikeTimesFromEventOnsetA , thirdOddballIndexLimitsA , timeVec ) spikeCountMatFirstStdA = spikesanalysis . spiketimes_to_spikecounts ( spikeTimesFromEventOnsetA , firstStandardIndexLimitsA , timeVec ) spikeCountMatSecondStdA = spikesanalysis . spiketimes_to_spikecounts ( spikeTimesFromEventOnsetA , secondStandardIndexLimitsA , timeVec ) spikeCountMatThirdStdA = spikesanalysis . spiketimes_to_spikecounts ( spikeTimesFromEventOnsetA , thirdStandardIndexLimitsA , timeVec ) ax9 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 2 ) ) extraplots . plot_psth ( spikeCountMatFirstOddballA / binWidth , smoothWinSizePsth , timeVec , trialsEachCond = [ ] , colorEachCond = <str> , linestyle = None , linewidth = lwPsth , downsamplefactor = downsampleFactorPsth ) extraplots . plot_psth ( spikeCountMatFirstStdA / binWidth , smoothWinSizePsth , timeVec , trialsEachCond = [ ] , colorEachCond = <str> , linestyle = None , linewidth = lwPsth , downsamplefactor = downsampleFactorPsth ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> . format ( arrayOfFrequenciesAkHz [ 2 ] ) , fontsize = 9 ) plt . legend ( handles = [ oddball_patch , standard_patch ] , fontsize = 7 ) ax13 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 3 ) ) extraplots . plot_psth ( spikeCountMatSecondOddballA / binWidth , smoothWinSizePsth , timeVec , trialsEachCond = [ ] , colorEachCond = <str> , linestyle = None , linewidth = lwPsth , downsamplefactor = downsampleFactorPsth ) extraplots . plot_psth ( spikeCountMatSecondStdA / binWidth , smoothWinSizePsth , timeVec , trialsEachCond = [ ] , colorEachCond = <str> , linestyle = None , linewidth = lwPsth , downsamplefactor = downsampleFactorPsth ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> . format ( arrayOfFrequenciesAkHz [ 1 ] ) , fontsize = 9 ) plt . legend ( handles = [ oddball_patch , standard_patch ] , fontsize = 7 ) ax17 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 4 ) ) extraplots . plot_psth ( spikeCountMatThirdOddballA / binWidth , smoothWinSizePsth , timeVec , trialsEachCond = [ ] , colorEachCond = <str> , linestyle = None , linewidth = lwPsth , downsamplefactor = downsampleFactorPsth ) extraplots . plot_psth ( spikeCountMatThirdStdA / binWidth , smoothWinSizePsth , timeVec , trialsEachCond = [ ] , colorEachCond = <str> , linestyle = None , linewidth = lwPsth , downsamplefactor = downsampleFactorPsth ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> . format ( arrayOfFrequenciesAkHz [ 0 ] ) , fontsize = 9 ) plt . legend ( handles = [ oddball_patch , standard_patch ] , fontsize = 7 )  else :          ax7 = plt . subplot2grid ( ( 4 , 8 ) , ( 1 , 2 ) ) ax11 = plt . subplot2grid ( ( 4 , 8 ) , ( 1 , 3 ) ) ax15 = plt . subplot2grid ( ( 4 , 8 ) , ( 1 , 4 ) ) ax8 = plt . subplot2grid ( ( 4 , 8 ) , ( 2 , 2 ) ) ax12 = plt . subplot2grid ( ( 4 , 8 ) , ( 2 , 3 ) ) ax16 = plt . subplot2grid ( ( 4 , 8 ) , ( 2 , 4 ) ) ax14 = plt . subplot2grid ( ( 4 , 8 ) , ( 0 , 3 ) , colspan = 2 ) ax9 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 2 ) ) ax13 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 3 ) ) ax17 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 4 ) )  ax18 = plt . subplot2grid ( ( 4 , 8 ) , ( 0 , 5 ) ) ax18 . axis ( <str> ) plt . text ( 0.23 , 0.5 , <str> , fontsize = 9 ) if oneCell . get_session_inds ( <str> ) != [ ] :          try :              ephysDataD , bdataD = oneCell . load ( <str> )  except ValueError as verror :              print ( verror ) continue  spikeTimesD = ephysDataD [ <str> ] eventOnsetTimesD = ephysDataD [ <str> ] [ <str> ] if len ( eventOnsetTimesD ) == len ( bdataD [ <str> ] ) + 1 :              print ( <str> ) eventOnsetTimesD = eventOnsetTimesD [ : - 1 ]  ( spikeTimesFromEventOnsetD , trialIndexForEachSpikeD , indexLimitsEachTrialD ) = spikesanalysis . eventlocked_spiketimes ( spikeTimesD , eventOnsetTimesD , timeRange ) stimConditionD = bdataD [ <str> ] if stimConditionD [ - 1 ] == 1 :              print ( <str> ) stimConditionD = stimConditionD [ : - 1 ]  oddballsD = np . flatnonzero ( stimConditionD ) firstOddballD = np . array ( oddballsD [ : : 2 ] ) secondOddballD = np . array ( oddballsD [ 1 : : 2 ] ) thirdOddballD = secondOddballD + 1 firstStandardD = firstOddballD - 2 secondStandardD = secondOddballD - 4 thirdStandardD = thirdOddballD - 3 firstOddballIndexLimitsD = indexLimitsEachTrialD [ : , firstOddballD ] secondOddballIndexLimitsD = indexLimitsEachTrialD [ : , secondOddballD ] thirdOddballIndexLimitsD = indexLimitsEachTrialD [ : , thirdOddballD ] ax19 = plt . subplot2grid ( ( 4 , 8 ) , ( 1 , 5 ) ) extraplots . raster_plot ( spikeTimesFromEventOnsetD , firstOddballIndexLimitsD , timeRange ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> , fontsize = 9 ) ax23 = plt . subplot2grid ( ( 4 , 8 ) , ( 1 , 6 ) ) extraplots . raster_plot ( spikeTimesFromEventOnsetD , secondOddballIndexLimitsD , timeRange ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> , fontsize = 9 ) ax27 = plt . subplot2grid ( ( 4 , 8 ) , ( 1 , 7 ) ) extraplots . raster_plot ( spikeTimesFromEventOnsetD , thirdOddballIndexLimitsD , timeRange ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> , fontsize = 9 ) firstStandardIndexLimitsD = indexLimitsEachTrialD [ : , firstStandardD ] secondStandardIndexLimitsD = indexLimitsEachTrialD [ : , secondStandardD ] thirdStandardIndexLimitsD = indexLimitsEachTrialD [ : , thirdStandardD ] ax20 = plt . subplot2grid ( ( 4 , 8 ) , ( 2 , 5 ) ) extraplots . raster_plot ( spikeTimesFromEventOnsetD , firstStandardIndexLimitsD , timeRange ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> , fontsize = 9 ) ax24 = plt . subplot2grid ( ( 4 , 8 ) , ( 2 , 6 ) ) extraplots . raster_plot ( spikeTimesFromEventOnsetD , secondStandardIndexLimitsD , timeRange ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> , fontsize = 9 ) ax28 = plt . subplot2grid ( ( 4 , 8 ) , ( 2 , 7 ) ) extraplots . raster_plot ( spikeTimesFromEventOnsetD , thirdStandardIndexLimitsD , timeRange ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> , fontsize = 9 ) frequenciesEachTrialD = bdataD [ <str> ] arrayOfFrequenciesD = np . unique ( bdataD [ <str> ] ) arrayOfFrequenciesDkHz = arrayOfFrequenciesD / 1000 labelsForYaxis = [ <str> % f for f in arrayOfFrequenciesDkHz ] trialsEachCondD = behavioranalysis . find_trials_each_type ( frequenciesEachTrialD , arrayOfFrequenciesD ) ax26 = plt . subplot2grid ( ( 4 , 8 ) , ( 0 , 6 ) , colspan = 2 ) ( pRaster , hcond , zline ) = extraplots . raster_plot ( spikeTimesFromEventOnsetD , indexLimitsEachTrialD , timeRange , trialsEachCondD , labels = labelsForYaxis ) plt . setp ( pRaster , ms = 1 ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) spikeCountMatFirstOddballD = spikesanalysis . spiketimes_to_spikecounts ( spikeTimesFromEventOnsetD , firstOddballIndexLimitsD , timeVec ) spikeCountMatSecondOddballD = spikesanalysis . spiketimes_to_spikecounts ( spikeTimesFromEventOnsetD , secondOddballIndexLimitsD , timeVec ) spikeCountMatThirdOddballD = spikesanalysis . spiketimes_to_spikecounts ( spikeTimesFromEventOnsetD , thirdOddballIndexLimitsD , timeVec ) spikeCountMatFirstStdD = spikesanalysis . spiketimes_to_spikecounts ( spikeTimesFromEventOnsetD , firstStandardIndexLimitsD , timeVec ) spikeCountMatSecondStdD = spikesanalysis . spiketimes_to_spikecounts ( spikeTimesFromEventOnsetD , secondStandardIndexLimitsD , timeVec ) spikeCountMatThirdStdD = spikesanalysis . spiketimes_to_spikecounts ( spikeTimesFromEventOnsetD , thirdStandardIndexLimitsD , timeVec ) ax21 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 5 ) ) extraplots . plot_psth ( spikeCountMatFirstOddballD / binWidth , smoothWinSizePsth , timeVec , trialsEachCond = [ ] , colorEachCond = <str> , linestyle = None , linewidth = lwPsth , downsamplefactor = downsampleFactorPsth ) extraplots . plot_psth ( spikeCountMatFirstStdD / binWidth , smoothWinSizePsth , timeVec , trialsEachCond = [ ] , colorEachCond = <str> , linestyle = None , linewidth = lwPsth , downsamplefactor = downsampleFactorPsth ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> . format ( arrayOfFrequenciesDkHz [ 0 ] ) , fontsize = 9 ) plt . legend ( handles = [ oddball_patch , standard_patch ] , fontsize = 7 ) ax25 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 6 ) ) extraplots . plot_psth ( spikeCountMatSecondOddballD / binWidth , smoothWinSizePsth , timeVec , trialsEachCond = [ ] , colorEachCond = <str> , linestyle = None , linewidth = lwPsth , downsamplefactor = downsampleFactorPsth ) extraplots . plot_psth ( spikeCountMatSecondStdD / binWidth , smoothWinSizePsth , timeVec , trialsEachCond = [ ] , colorEachCond = <str> , linestyle = None , linewidth = lwPsth , downsamplefactor = downsampleFactorPsth ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> . format ( arrayOfFrequenciesDkHz [ 1 ] ) , fontsize = 9 ) plt . legend ( handles = [ oddball_patch , standard_patch ] , fontsize = 7 ) ax29 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 7 ) ) extraplots . plot_psth ( spikeCountMatThirdOddballD / binWidth , smoothWinSizePsth , timeVec , trialsEachCond = [ ] , colorEachCond = <str> , linestyle = None , linewidth = lwPsth , downsamplefactor = downsampleFactorPsth ) extraplots . plot_psth ( spikeCountMatThirdStdD / binWidth , smoothWinSizePsth , timeVec , trialsEachCond = [ ] , colorEachCond = <str> , linestyle = None , linewidth = lwPsth , downsamplefactor = downsampleFactorPsth ) plt . xlabel ( <str> , fontsize = 9 ) plt . ylabel ( <str> , fontsize = 9 ) plt . title ( <str> . format ( arrayOfFrequenciesDkHz [ 2 ] ) , fontsize = 9 ) plt . legend ( handles = [ oddball_patch , standard_patch ] , fontsize = 7 ) ax3 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 0 ) ) try :              spikesorting . plot_waveforms ( ephysDataD [ <str> ] ) ax3 . set_title ( <str> , fontsize = 9 )  except ValueError as verror :              print ( verror ) continue   else :          ax22 = plt . subplot2grid ( ( 4 , 8 ) , ( 0 , 6 ) ) ax19 = plt . subplot2grid ( ( 4 , 8 ) , ( 1 , 5 ) ) ax23 = plt . subplot2grid ( ( 4 , 8 ) , ( 1 , 6 ) ) ax27 = plt . subplot2grid ( ( 4 , 8 ) , ( 1 , 7 ) ) ax20 = plt . subplot2grid ( ( 4 , 8 ) , ( 2 , 5 ) ) ax24 = plt . subplot2grid ( ( 4 , 8 ) , ( 2 , 6 ) ) ax28 = plt . subplot2grid ( ( 4 , 8 ) , ( 2 , 7 ) ) ax26 = plt . subplot2grid ( ( 4 , 8 ) , ( 0 , 6 ) , colspan = 2 ) ax21 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 5 ) ) ax25 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 6 ) ) ax29 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 7 ) ) ax3 = plt . subplot2grid ( ( 4 , 8 ) , ( 3 , 0 ) )  figFormat = <str> figFilename = <str> . format ( dbRow [ <str> ] , dbRow [ <str> ] , dbRow [ <str> ] , dbRow [ <str> ] , dbRow [ <str> ] , figFormat ) outputDir = os . path . join ( settings . FIGURES_DATA_PATH , studyparams . STUDY_NAME , <str> . format ( dbRow [ <str> ] ) ) figFullpath = os . path . join ( outputDir , figFilename ) plt . tight_layout ( ) plt . savefig ( figFullpath , format = figFormat ) plt . gcf ( ) . set_size_inches ( [ 22 , 12 ] ) plt . show ( ) print ( <str> . format ( indRow , number_of_clusters , figFilename ) )   