from jaratoolbox import spikesorting_ISIValues as spikesorting from jaratoolbox import settings import numpy as np import sys import importlib mouseName = str ( sys . argv [ 1 ] ) allcellsFileName = <str> + mouseName sys . path . append ( settings . ALLCELLS_PATH ) allcells = importlib . import_module ( allcellsFileName ) outputDir = <str> nameOfFile = <str> animalName = mouseName numOfCells = len ( allcells . cellDB ) numTetrodes = 8 numClusters = 12 ISIviolationsDict = { } ephysSessionEachCell = [ ] for cellID in range ( 0 , numOfCells ) :      ephysSessionEachCell . append ( allcells . cellDB [ cellID ] . ephysSession )  ephysSessionArray = np . unique ( ephysSessionEachCell ) badSessionList = [ ] for indEphys , ephysSession in enumerate ( ephysSessionArray ) :      ISIviolationsDict . update ( { ephysSession : np . empty ( [ numTetrodes , numClusters ] ) } ) for tetrode in range ( 1 , ( numTetrodes + 1 ) ) :          oneTT = spikesorting . TetrodeToCluster ( animalName , ephysSession , tetrode ) oneTT . save_report ( ) ISIviolationsDict [ ephysSession ] [ tetrode - 1 ] = oneTT . get_ISI_values ( )    