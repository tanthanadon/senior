import sys from jaratoolbox import behavioranalysis reload ( behavioranalysis ) import numpy as np from jaratoolbox import extraplots from matplotlib import pyplot as plt fontsize = 12 colors = [ <str> , <str> , <str> , <str> , <str> ] subjects = [ <str> , <str> ] sessions = [ <str> ] if len ( sys . argv ) > 1 :      sessions = sys . argv [ 1 : ]  plt . figure ( ) for indSubject , subject in enumerate ( subjects ) : 	 for indSession , session in enumerate ( sessions ) : 		 plt . subplot ( len ( subjects ) , 1 , indSubject + 1 ) bdata = behavioranalysis . load_many_sessions ( subject , [ session ] ) targetIntensity = bdata [ <str> ] valid = bdata [ <str> ] choice = bdata [ <str> ] choiceRight = choice == bdata . labels [ <str> ] [ <str> ] targetFreq = bdata [ <str> ] possibleInt = np . unique ( targetIntensity ) trialsEachInt = behavioranalysis . find_trials_each_type ( targetIntensity , possibleInt ) trialsInds = { } allPlines = [ ] for indInt , inten in enumerate ( possibleInt ) : 			 trialsInds [ inten ] = valid & ( bdata [ <str> ] == inten ) ( possibleValues , fractionHitsEachValue , ciHitsEachValue , nTrialsEachValue , nHitsEachValue ) = behavioranalysis . calculate_psychometric ( choiceRight , targetFreq , trialsInds [ inten ] ) ( pline , pcaps , pbars , pdots ) = extraplots . plot_psychometric ( 1e-3 * possibleValues , fractionHitsEachValue , ciHitsEachValue , xTickPeriod = 1 ) allPlines . append ( pline ) plt . title ( subject + <str> + session , fontsize = fontsize ) plt . xlabel ( <str> , fontsize = fontsize ) plt . ylabel ( <str> , fontsize = fontsize ) extraplots . set_ticks_fontsize ( plt . gca ( ) , fontsize ) plt . setp ( pline , color = colors [ indInt ] ) plt . setp ( pcaps , color = colors [ indInt ] ) plt . setp ( pbars , color = colors [ indInt ] ) plt . setp ( pdots , markerfacecolor = colors [ indInt ] ) legend = plt . legend ( allPlines , possibleInt )    plt . show ( )  