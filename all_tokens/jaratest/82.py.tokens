from jaratoolbox import settings import numpy as np from pylab import * import os from jaratoolbox import loadopenephys from scipy . signal import butter , lfilter def butter_bandpass ( lowcut , highcut , fs , order = 5 ) :      nyq = 0.5 * fs low = lowcut / nyq high = highcut / nyq b , a = butter ( order , [ low , high ] , btype = <str> ) return b , a  def butter_bandpass_filter ( data , lowcut , highcut , fs , order = 5 ) :      b , a = butter_bandpass ( lowcut , highcut , fs , order = order ) y = lfilter ( b , a , data ) return y  subject = <str> ephysSession = <str> ephysRoot = os . path . join ( settings . EPHYS_PATH , subject ) filename = os . path . join ( ephysRoot , ephysSession , <str> ) dc = loadopenephys . DataCont ( filename ) fc = butter_bandpass_filter ( dc . samples , 300 , 6000 , 30000 ) x = 140000 ; plot ( fc [ x : x + 200000 ] ) show ( )  