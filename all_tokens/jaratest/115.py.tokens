import numpy as np import cv2 import matplotlib . pyplot as plt colortrack = np . load ( <str> ) colorCenter = colortrack [ <str> ] stimtrack = np . load ( <str> ) stimIntensity = stimtrack [ <str> ] headVectorWithNaN = colorCenter [ : , : , 0 ] - colorCenter [ : , : , 1 ] nSamples = headVectorWithNaN . shape [ 1 ] headVector = headVectorWithNaN . copy ( ) for inds in range ( 1 , nSamples ) :      if np . isnan ( headVector [ 0 , inds ] ) :          headVector [ 0 , inds ] = headVector [ 0 , inds - 1 ] headVector [ 1 , inds ] = headVector [ 1 , inds - 1 ]   headAngleDiscont = np . arctan2 ( headVector [ 1 , : ] , headVector [ 0 , : ] ) discontThreshold = np . pi headAngle = np . unwrap ( headAngleDiscont , discont = discontThreshold ) headDiff = np . concatenate ( ( np . diff ( headAngle ) , [ 0 ] ) ) SATURATE = 0 if SATURATE :      satuThreshold = 1 satuValue = 1 headDiff [ headDiff > satuThreshold ] = satuValue headDiff [ headDiff < - satuThreshold ] = - satuValue  stimBool = stimIntensity > 20 deltaAngleStim1 = np . mean ( headDiff [ stimBool [ 0 , : ] ] ) deltaAngleStim2 = np . mean ( headDiff [ stimBool [ 1 , : ] ] ) deltaAngleNoStim = np . mean ( headDiff [ ~ stimBool [ 0 , : ] & ~ stimBool [ 1 , : ] ] ) print <str> print deltaAngleStim1 print deltaAngleStim2 print <str> print deltaAngleNoStim plt . clf ( ) plt . hold ( 1 ) CASE = 3 if CASE == 1 :      plt . xlim ( [ 0 , 800 ] ) ; plt . ylim ( [ 0 , 600 ] ) plt . gca ( ) . invert_yaxis ( ) for indc in range ( 2 ) :          plt . plot ( colorCenter [ 0 , : , indc ] , colorCenter [ 1 , : , indc ] , <str> ) plt . draw ( )   elif CASE == 2 :      for indc in range ( 2 ) :          ax1 = plt . subplot ( 3 , 1 , 1 ) plt . plot ( colorCenter [ 0 , : , indc ] , <str> ) ax2 = plt . subplot ( 3 , 1 , 2 , sharex = ax1 ) plt . plot ( colorCenter [ 1 , : , indc ] , <str> ) ax3 = plt . subplot ( 3 , 1 , 3 , sharex = ax1 ) plt . plot ( stimIntensity . T , <str> )  plt . draw ( )  elif CASE == 3 :      ax1 = plt . subplot ( 3 , 1 , 1 ) plt . plot ( headAngle , <str> ) plt . ylabel ( <str> ) ax2 = plt . subplot ( 3 , 1 , 2 , sharex = ax1 ) plt . plot ( headDiff , <str> ) plt . ylabel ( <str> ) ax3 = plt . subplot ( 3 , 1 , 3 , sharex = ax1 ) plt . plot ( stimIntensity . T , <str> ) plt . ylabel ( <str> ) plt . draw ( )  plt . show ( )  