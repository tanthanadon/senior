from jaratoolbox import loadbehavior from jaratoolbox import settings import os import numpy as np import sys import importlib mouseName = str ( sys . argv [ 1 ] ) allcellsFileName = <str> + mouseName sys . path . append ( settings . ALLCELLS_PATH ) allcells = importlib . import_module ( allcellsFileName ) outputDir = <str> nameOfFile = <str> minPerf = 0.70 subject = allcells . cellDB [ 0 ] . animalName behavSession = <str> ephysSession = <str> nameOfOutputFile = nameOfFile + <str> + subject numOfCells = len ( allcells . cellDB ) ephysRootDir = settings . EPHYS_PATH experimenter = <str> paradigm = <str> finalOutputDir = outputDir + <str> + subject + <str> text_file = open ( <str> % ( finalOutputDir , nameOfFile ) , <str> ) text_file . write ( <str> % minPerf ) for cellID in range ( 0 , numOfCells ) :      oneCell = allcells . cellDB [ cellID ] if ( behavSession != oneCell . behavSession ) :          subject = oneCell . animalName behavSession = oneCell . behavSession ephysSession = oneCell . ephysSession ephysRoot = os . path . join ( ephysRootDir , subject ) behaviorFilename = loadbehavior . path_to_behavior_data ( subject , experimenter , paradigm , behavSession ) bdata = loadbehavior . BehaviorData ( behaviorFilename ) numberOfTrials = len ( bdata [ <str> ] ) correct = bdata [ <str> ] == bdata . labels [ <str> ] [ <str> ] incorrect = bdata [ <str> ] == bdata . labels [ <str> ] [ <str> ] possibleFreq = np . unique ( bdata [ <str> ] ) firstFreq = bdata [ <str> ] == possibleFreq [ 0 ] lastFreq = bdata [ <str> ] == possibleFreq [ - 1 ] correctFirst = sum ( correct & firstFreq ) correctLast = sum ( correct & lastFreq ) incorrectFirst = sum ( incorrect & firstFreq ) incorrectLast = sum ( incorrect & lastFreq ) firstPerf = float ( correctFirst ) / ( correctFirst + incorrectFirst ) lastPerf = float ( correctLast ) / ( correctLast + incorrectLast ) if ( ( firstPerf >= minPerf ) & ( lastPerf >= minPerf ) ) :              text_file . write ( <str> % behavSession )    text_file . close ( )  