from . apirequest import APIRequest from . decorators import dyndoc_insert , endpoint from . responses . orders import responses from abc import abstractmethod class Orders ( APIRequest ) :      ENDPOINT = <str> METHOD = <str> EXPECTED_STATUS = 0 @ abstractmethod @ dyndoc_insert ( responses ) def __init__ ( self , accountID , orderID = None ) :          endpoint = self . ENDPOINT . format ( accountID = accountID , orderID = orderID ) super ( Orders , self ) . __init__ ( endpoint , method = self . METHOD , expected_status = self . EXPECTED_STATUS )   @ endpoint ( <str> , <str> , 201 ) class OrderCreate ( Orders ) :      HEADERS = { <str> : <str> } @ dyndoc_insert ( responses ) def __init__ ( self , accountID , data ) :          super ( OrderCreate , self ) . __init__ ( accountID ) self . data = data   @ endpoint ( <str> ) class OrderList ( Orders ) :      @ dyndoc_insert ( responses ) def __init__ ( self , accountID , params = None ) :          super ( OrderList , self ) . __init__ ( accountID ) self . params = params   @ endpoint ( <str> ) class OrdersPending ( Orders ) :      @ dyndoc_insert ( responses ) def __init__ ( self , accountID ) :          super ( OrdersPending , self ) . __init__ ( accountID )   @ endpoint ( <str> ) class OrderDetails ( Orders ) :      @ dyndoc_insert ( responses ) def __init__ ( self , accountID , orderID ) :          super ( OrderDetails , self ) . __init__ ( accountID , orderID )   @ endpoint ( <str> , <str> , 201 ) class OrderReplace ( Orders ) :      HEADERS = { <str> : <str> } @ dyndoc_insert ( responses ) def __init__ ( self , accountID , orderID , data ) :          super ( OrderReplace , self ) . __init__ ( accountID , orderID ) self . data = data   @ endpoint ( <str> , <str> ) class OrderCancel ( Orders ) :      @ dyndoc_insert ( responses ) def __init__ ( self , accountID , orderID ) :          super ( OrderCancel , self ) . __init__ ( accountID , orderID )   @ endpoint ( <str> , <str> ) class OrderClientExtensions ( Orders ) :      HEADERS = { <str> : <str> } @ dyndoc_insert ( responses ) def __init__ ( self , accountID , orderID , data ) :          super ( OrderClientExtensions , self ) . __init__ ( accountID , orderID ) self . data = data    