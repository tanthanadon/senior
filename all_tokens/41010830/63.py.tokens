from . baserequest import BaseRequest from oandapyV20 . types import Units , PriceValue from oandapyV20 . definitions . orders import ( OrderType , TimeInForce , OrderPositionFill ) class LimitOrderRequest ( BaseRequest ) :      def __init__ ( self , instrument , units , price , positionFill = OrderPositionFill . DEFAULT , clientExtensions = None , takeProfitOnFill = None , timeInForce = TimeInForce . GTC , gtdTime = None , stopLossOnFill = None , trailingStopLossOnFill = None , tradeClientExtensions = None ) :          super ( LimitOrderRequest , self ) . __init__ ( ) self . _data . update ( { <str> : OrderType . LIMIT } ) self . _data . update ( { <str> : timeInForce } ) self . _data . update ( { <str> : instrument } ) self . _data . update ( { <str> : Units ( units ) . value } ) self . _data . update ( { <str> : PriceValue ( price ) . value } ) self . _data . update ( { <str> : gtdTime } ) if timeInForce == TimeInForce . GTD and not gtdTime :              raise ValueError ( <str> )  self . _data . update ( { <str> : positionFill } ) self . _data . update ( { <str> : clientExtensions } ) self . _data . update ( { <str> : takeProfitOnFill } ) self . _data . update ( { <str> : stopLossOnFill } ) self . _data . update ( { <str> : trailingStopLossOnFill } ) self . _data . update ( { <str> : tradeClientExtensions } )  @ property def data ( self ) :          return dict ( { <str> : super ( LimitOrderRequest , self ) . data } )    