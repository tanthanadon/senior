from . baserequest import BaseRequest from oandapyV20 . types import TradeID , PriceValue from oandapyV20 . definitions . orders import TimeInForce , OrderType class StopLossOrderRequest ( BaseRequest ) :      def __init__ ( self , tradeID , price , clientTradeID = None , timeInForce = TimeInForce . GTC , gtdTime = None , clientExtensions = None ) :          super ( StopLossOrderRequest , self ) . __init__ ( ) if timeInForce not in [ TimeInForce . GTC , TimeInForce . GTD , TimeInForce . GFD ] :              raise ValueError ( <str> . format ( timeInForce ) )  self . _data . update ( { <str> : OrderType . STOP_LOSS } ) self . _data . update ( { <str> : TradeID ( tradeID ) . value } ) self . _data . update ( { <str> : PriceValue ( price ) . value } ) self . _data . update ( { <str> : clientExtensions } ) self . _data . update ( { <str> : timeInForce } ) self . _data . update ( { <str> : gtdTime } ) if timeInForce == TimeInForce . GTD and not gtdTime :              raise ValueError ( <str> )   @ property def data ( self ) :          return dict ( { <str> : super ( StopLossOrderRequest , self ) . data } )    