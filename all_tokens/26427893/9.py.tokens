import numpy as np import ehtim as eh import ehtim . scattering as so import ehtim . plotting as pl im = eh . image . load_txt ( <str> ) eht = eh . array . load_txt ( <str> ) sm = so . ScatteringModel ( ) im_scatt = sm . Scatter ( im , DisplayImage = True ) obs_unscatt = im . observe ( eht , tint = 300. , tadv = 300 , tstart = 22. , tstop = 28. , bw = 16e9 , add_th_noise = False , sgrscat = False , ampcal = True , phasecal = True , timetype = <str> ) obs_scatt = im_scatt . observe ( eht , tint = 300. , tadv = 300 , tstart = 22. , tstop = 28. , bw = 16e9 , add_th_noise = False , sgrscat = False , ampcal = True , phasecal = True , timetype = <str> ) obs_scatt_deblur = sm . Deblur_obs ( obs_scatt ) pl . comp_plots . plotall_obs_compare ( [ obs_unscatt , obs_scatt , obs_scatt_deblur ] , <str> , <str> ) im_scatt_List = [ sm . Scatter ( im , so . MakeEpsilonScreen ( im . xdim , im . ydim , rngseed = j ) , DisplayImage = False ) for j in range ( 100 ) ] im_scatt_ea = im . copy ( ) im_scatt_ea . imvec = np . mean ( [ i . imvec for i in im_scatt_List ] , axis = 0 ) im_scatt_ea . display ( ) movie_frames = sm . Scatter_Movie ( im , Vx_km_per_s = 50.0 , Vy_km_per_s = 0.0 , framedur_sec = 3600.0 , N_frames = 24 * 7 , Return_Image_List = True ) flux_timeseries = [ np . sum ( i . imvec ) for i in movie_frames ] import matplotlib . pyplot as plt plt . close ( ) plt . clf plt . plot ( flux_timeseries ) plt . axhline ( y = np . sum ( im . imvec ) , c = <str> , linewidth = 1 , zorder = 0 ) plt . xlabel ( <str> ) plt . ylabel ( <str> ) plt . show ( ) import ehtim . imaging . dynamical_imaging as di di . export_movie ( movie_frames , <str> )  