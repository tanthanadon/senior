from __future__ import division from __future__ import print_function import matplotlib . pyplot as plt import numpy as np import ehtim as eh from ehtim . calibrating import self_cal as sc im = eh . image . load_txt ( <str> ) eht = eh . array . load_txt ( <str> ) im . display ( ) tint_sec = 5 tadv_sec = 600 tstart_hr = 0 tstop_hr = 24 bw_hz = 4e9 obs = im . observe ( eht , tint_sec , tadv_sec , tstart_hr , tstop_hr , bw_hz , sgrscat = False , ampcal = True , phasecal = False ) obs . plotall ( <str> , <str> , conj = True ) obs . plotall ( <str> , <str> ) obs . plot_bl ( <str> , <str> , <str> ) npix = 64 fov = 1.5 * im . xdim * im . psize dim = obs . dirtyimage ( npix , fov ) dbeam = obs . dirtybeam ( npix , fov ) cbeam = obs . cleanbeam ( npix , fov ) dim . display ( ) dbeam . display ( ) cbeam . display ( ) beamparams = obs . fit_beam ( ) res = obs . res ( ) print ( <str> , beamparams ) print ( <str> , res ) npix = 32 fov = 1 * im . fovx ( ) zbl = im . total_flux ( ) prior_fwhm = 200 * eh . RADPERUAS emptyprior = eh . image . make_square ( obs , npix , fov ) flatprior = emptyprior . add_flat ( zbl ) gaussprior = emptyprior . add_gauss ( zbl , ( prior_fwhm , prior_fwhm , 0 , 0 , 0 ) ) flux = zbl out = eh . imager_func ( obs , gaussprior , gaussprior , flux , d1 = <str> , s1 = <str> , alpha_s1 = 1 , alpha_d1 = 100 , alpha_flux = 100 , alpha_cm = 50 , maxit = 100 , ttype = <str> ) out = out . blur_circ ( res ) out = eh . imager_func ( obs , out , out , flux , d1 = <str> , s1 = <str> , alpha_s1 = 1 , alpha_d1 = 50 , alpha_flux = 100 , alpha_cm = 50 , maxit = 100 , ttype = <str> ) out = out . blur_circ ( res / 2.0 ) out = eh . imager_func ( obs , out , out , flux , d1 = <str> , s1 = <str> , alpha_s1 = 1 , alpha_d1 = 10 , alpha_flux = 100 , alpha_cm = 50 , maxit = 100 , ttype = <str> ) obs_sc = sc . self_cal ( obs , out ) out_sc = out . blur_circ ( res ) out_sc = eh . imager_func ( obs_sc , out_sc , out_sc , flux , d1 = <str> , s1 = <str> , alpha_s1 = 1 , alpha_d1 = 100 , alpha_flux = 100 , alpha_cm = 50 , maxit = 50 , ttype = <str> ) out = out_sc eh . comp_plots . plotall_obs_im_compare ( obs , out , <str> , <str> , clist = [ <str> , <str> ] , conj = True ) outblur = out . blur_gauss ( beamparams , 0.5 ) out . display ( ) outname = <str> out . save_txt ( outname + <str> ) out . save_fits ( outname + <str> ) outblur . save_txt ( outname + <str> ) outblur . save_fits ( outname + <str> )  