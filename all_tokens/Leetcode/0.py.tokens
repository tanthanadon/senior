class Solution ( object ) :      d = { <str> : 1 , <str> : 4 , <str> : 5 , <str> : 9 , <str> : 10 , <str> : 40 , <str> : 50 , <str> : 90 , <str> : 100 , <str> : 400 , <str> : 500 , <str> : 900 , <str> : 1000 } def romanToInt ( self , s ) :          result = 0 c = len ( s ) - 1 while c >= 0 :              if c >= 1 :                  cur_and_prev_char = s [ c - 1 : c + 1 ] if self . d . has_key ( cur_and_prev_char ) :                      result += self . d [ cur_and_prev_char ] c -= 2 continue   cur_char = s [ c ] result += self . d [ cur_char ] c -= 1  return result    