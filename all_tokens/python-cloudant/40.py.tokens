from cloudant . _messages import ( ARGUMENT_ERROR , CLIENT , DATABASE , DESIGN_DOCUMENT , DOCUMENT , FEED , INDEX , REPLICATOR , RESULT , VIEW ) class CloudantException ( Exception ) :      def __init__ ( self , msg , code = None ) :          super ( CloudantException , self ) . __init__ ( msg ) self . status_code = code   class CloudantArgumentError ( CloudantException ) :      def __init__ ( self , code = 100 , * args ) :          try :              msg = ARGUMENT_ERROR [ code ] . format ( * args )  except ( KeyError , IndexError ) :              code = 100 msg = ARGUMENT_ERROR [ code ]  super ( CloudantArgumentError , self ) . __init__ ( msg , code )   class ResultException ( CloudantException ) :      def __init__ ( self , code = 100 , * args ) :          try :              msg = RESULT [ code ] . format ( * args )  except ( KeyError , IndexError ) :              code = 100 msg = RESULT [ code ]  super ( ResultException , self ) . __init__ ( msg , code )   class CloudantClientException ( CloudantException ) :      def __init__ ( self , code = 100 , * args ) :          try :              msg = CLIENT [ code ] . format ( * args )  except ( KeyError , IndexError ) :              code = 100 msg = CLIENT [ code ]  super ( CloudantClientException , self ) . __init__ ( msg , code )   class CloudantDatabaseException ( CloudantException ) :      def __init__ ( self , code = 100 , * args ) :          try :              if code in DATABASE :                  msg = DATABASE [ code ] . format ( * args )  elif isinstance ( code , int ) :                  msg = <str> . join ( args )  else :                  code = 100 msg = DATABASE [ code ]   except ( KeyError , IndexError ) :              code = 100 msg = DATABASE [ code ]  super ( CloudantDatabaseException , self ) . __init__ ( msg , code )   class CloudantDesignDocumentException ( CloudantException ) :      def __init__ ( self , code = 100 , * args ) :          try :              msg = DESIGN_DOCUMENT [ code ] . format ( * args )  except ( KeyError , IndexError ) :              code = 100 msg = DESIGN_DOCUMENT [ code ]  super ( CloudantDesignDocumentException , self ) . __init__ ( msg , code )   class CloudantDocumentException ( CloudantException ) :      def __init__ ( self , code = 100 , * args ) :          try :              msg = DOCUMENT [ code ] . format ( * args )  except ( KeyError , IndexError ) :              code = 100 msg = DOCUMENT [ code ]  super ( CloudantDocumentException , self ) . __init__ ( msg , code )   class CloudantFeedException ( CloudantException ) :      def __init__ ( self , code = 100 , * args ) :          try :              msg = FEED [ code ] . format ( * args )  except ( KeyError , IndexError ) :              code = 100 msg = FEED [ code ]  super ( CloudantFeedException , self ) . __init__ ( msg , code )   class CloudantIndexException ( CloudantException ) :      def __init__ ( self , code = 100 , * args ) :          try :              msg = INDEX [ code ] . format ( * args )  except ( KeyError , IndexError ) :              code = 100 msg = INDEX [ code ]  super ( CloudantIndexException , self ) . __init__ ( msg , code )   class CloudantReplicatorException ( CloudantException ) :      def __init__ ( self , code = 100 , * args ) :          try :              msg = REPLICATOR [ code ] . format ( * args )  except ( KeyError , IndexError ) :              code = 100 msg = REPLICATOR [ code ]  super ( CloudantReplicatorException , self ) . __init__ ( msg , code )   class CloudantViewException ( CloudantException ) :      def __init__ ( self , code = 100 , * args ) :          try :              msg = VIEW [ code ] . format ( * args )  except ( KeyError , IndexError ) :              code = 100 msg = VIEW [ code ]  super ( CloudantViewException , self ) . __init__ ( msg , code )    