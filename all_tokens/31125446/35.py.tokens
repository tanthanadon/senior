__author__ = <str> import matplotlib . pyplot as plt import matplotlib . patches as mpatches import numpy as np def setBoxColors ( bp ) :      bp [ <str> ] [ 0 ] . set ( facecolor = <str> ) bp [ <str> ] [ 1 ] . set ( facecolor = <str> ) bp [ <str> ] [ 2 ] . set ( facecolor = <str> ) bp [ <str> ] [ 3 ] . set ( facecolor = <str> ) bp [ <str> ] [ 0 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 1 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 2 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 3 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 0 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 1 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 2 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 3 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 4 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 5 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 6 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 7 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 0 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 1 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 2 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 3 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 4 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 5 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 6 ] . set ( color = <str> , linewidth = 2 ) bp [ <str> ] [ 7 ] . set ( color = <str> , linewidth = 2 ) for median in bp [ <str> ] :          median . set ( color = <str> , linewidth = 2 )  for flier in bp [ <str> ] :          flier . set ( marker = <str> , color = <str> , alpha = 0.5 )   def run ( d1 , d2 , d3 , figuredir ) :      g15up = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] g15do = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] g45up = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] g45do = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] boxplot = [ [ ] for i in range ( 3 ) ] sd = np . std ( d1 . values ( ) ) for gene in d1 :          if d1 [ gene ] > sd * 2 or d1 [ gene ] < - sd * 2 :              boxplot [ 0 ] . append ( d1 [ gene ] )   sd = np . std ( d2 . values ( ) ) for gene in d2 :          if d2 [ gene ] > sd * 2 or d2 [ gene ] < - sd * 2 :              boxplot [ 1 ] . append ( d2 [ gene ] )   sd = np . std ( d3 . values ( ) ) for gene in d3 :          if d3 [ gene ] > sd * 2 or d3 [ gene ] < - sd * 2 :              boxplot [ 2 ] . append ( d3 [ gene ] )   t0 = [ [ ] for i in range ( 4 ) ] for key in d1 :          gene = key . split ( <str> ) [ 1 ] PI = d1 [ key ] if gene in g15up :              t0 [ 0 ] . append ( PI )  if gene in g45up :              t0 [ 1 ] . append ( PI )  if gene in g45do :              t0 [ 2 ] . append ( PI )  if gene in g45up :              t0 [ 3 ] . append ( PI )   for list1 in t0 :          sd = np . std ( list1 ) j = 0 for i in range ( len ( list1 ) ) :              item = list1 [ i - j ] if not ( item > sd or item < - sd ) :                  del list1 [ i - j ] j += 1   if len ( list1 ) == 0 :              list1 . append ( 0 )   t15 = [ [ ] for i in range ( 4 ) ] for key in d2 :          gene = key . split ( <str> ) [ 1 ] PI = d2 [ key ] if gene in g15up :              t15 [ 0 ] . append ( PI )  if gene in g45up :              t15 [ 1 ] . append ( PI )  if gene in g45do :              t15 [ 2 ] . append ( PI )  if gene in g45up :              t15 [ 3 ] . append ( PI )   for list1 in t15 :          sd = np . std ( list1 ) j = 0 for i in range ( len ( list1 ) ) :              item = list1 [ i - j ] if not ( item > sd or item < - sd ) :                  del list1 [ i - j ] j += 1   if len ( list1 ) == 0 :              list1 . append ( 0 )   t45 = [ [ ] for i in range ( 4 ) ] for key in d3 :          gene = key . split ( <str> ) [ 1 ] PI = d3 [ key ] if gene in g15up :              t45 [ 0 ] . append ( PI )  if gene in g45up :              t45 [ 1 ] . append ( PI )  if gene in g45do :              t45 [ 2 ] . append ( PI )  if gene in g45up :              t45 [ 3 ] . append ( PI )   for list1 in t45 :          sd = np . std ( list1 ) j = 0 for i in range ( len ( list1 ) ) :              item = list1 [ i - j ] if not ( item > sd or item < - sd ) :                  del list1 [ i - j ] j += 1   if len ( list1 ) == 0 :              list1 . append ( 0 )   F = plt . figure ( ) ax = F . add_subplot ( 111 ) ax . set_title ( <str> ) ax . set_ylabel ( <str> ) ax . set_xlabel ( <str> ) ax . get_xaxis ( ) . tick_bottom ( ) ax . get_yaxis ( ) . tick_left ( ) bp = ax . boxplot ( boxplot , patch_artist = True ) for box in bp [ <str> ] :          box . set ( color = <str> , linewidth = 2 ) box . set ( facecolor = <str> )  for whisker in bp [ <str> ] :          whisker . set ( color = <str> , linewidth = 2 )  for cap in bp [ <str> ] :          cap . set ( color = <str> , linewidth = 2 )  for median in bp [ <str> ] :          median . set ( color = <str> , linewidth = 2 )  for flier in bp [ <str> ] :          flier . set ( marker = <str> , color = <str> , alpha = 0.5 )  plt . xticks ( [ 1 , 2 , 3 ] , [ <str> , <str> , <str> ] ) plt . axhline ( 0 , color = <str> , alpha = 0.3 ) ax . set_axisbelow ( True ) F . savefig ( figuredir + <str> , dpi = 1200 ) F = plt . figure ( ) ax = F . add_subplot ( 111 ) ax . set_title ( <str> ) ax . set_ylabel ( <str> ) ax . set_xlabel ( <str> ) ax . get_xaxis ( ) . tick_bottom ( ) ax . get_yaxis ( ) . tick_left ( ) bp = ax . boxplot ( t0 , positions = [ 1 , 2 , 3 , 4 ] , patch_artist = True ) setBoxColors ( bp ) bp2 = ax . boxplot ( t15 , positions = [ 6 , 7 , 8 , 9 ] , patch_artist = True ) setBoxColors ( bp2 ) bp3 = ax . boxplot ( t45 , positions = [ 11 , 12 , 13 , 14 ] , patch_artist = True ) setBoxColors ( bp3 ) ax . set_xlim ( [ 0 , 15 ] ) plt . xticks ( [ 2.5 , 7.5 , 12.5 ] , [ <str> , <str> , <str> ] ) plt . axhline ( 0 , color = <str> , alpha = 0.3 ) ax . set_axisbelow ( True ) green_patch = mpatches . Patch ( color = <str> , label = <str> ) red_patch = mpatches . Patch ( color = <str> , label = <str> ) blue_patch = mpatches . Patch ( color = <str> , label = <str> ) magenta_patch = mpatches . Patch ( color = <str> , label = <str> ) ax . legend ( [ green_patch , blue_patch , magenta_patch , red_patch ] , [ <str> , <str> , <str> , <str> ] , loc = 1 , fontsize = 10 ) F . savefig ( figuredir + <str> , dpi = 1200 )   