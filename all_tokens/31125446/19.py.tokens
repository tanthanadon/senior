__author__ = <str> import operator filedir = <str> def run ( filedir ) :      posgenes = list ( ) neggenes = list ( ) with open ( filedir + <str> ) as F :          for line in F :              if line [ 0 ] is <str> :                  gene , chrom , start , stop , number , strand , DMSOgene , exp2 , exp3 , CAgene , exp4 , exp5 = line . strip ( ) . split ( ) if strand is <str> :                      posgenes . append ( ( gene , ( float ( DMSOgene ) + float ( CAgene ) ) / 2 ) )  else :                      neggenes . append ( ( gene , ( float ( DMSOgene ) + float ( CAgene ) ) / 2 ) )     posgenes . sort ( key = operator . itemgetter ( 1 ) ) neggenes . sort ( key = operator . itemgetter ( 1 ) ) d = dict ( ) outfile1 = open ( filedir + <str> , <str> ) for gene in posgenes [ int ( len ( posgenes ) * .85 ) - 15 : int ( len ( posgenes ) * 0.85 ) ] :          chrom , [ start , stop ] = gene [ 0 ] . split ( <str> ) [ 2 ] . split ( <str> ) [ 0 ] , gene [ 0 ] . split ( <str> ) [ 2 ] . split ( <str> ) [ 1 ] . split ( <str> ) [ 0 ] . split ( <str> ) d [ chrom + <str> + start + <str> + stop + <str> + <str> ] = list ( )  for key in d :          outfile1 . write ( key )  d = dict ( ) for gene in posgenes [ 0 : 15 ] :          chrom , [ start , stop ] = gene [ 0 ] . split ( <str> ) [ 2 ] . split ( <str> ) [ 0 ] , gene [ 0 ] . split ( <str> ) [ 2 ] . split ( <str> ) [ 1 ] . split ( <str> ) [ 0 ] . split ( <str> ) d [ chrom + <str> + start + <str> + stop + <str> + <str> ] = list ( )  for key in d :          outfile1 . write ( key )  outfile2 = open ( filedir + <str> , <str> ) d = dict ( ) for gene in neggenes [ int ( len ( neggenes ) * .85 ) - 15 : int ( len ( neggenes ) * 0.85 ) ] :          chrom , [ start , stop ] = gene [ 0 ] . split ( <str> ) [ 2 ] . split ( <str> ) [ 0 ] , gene [ 0 ] . split ( <str> ) [ 2 ] . split ( <str> ) [ 1 ] . split ( <str> ) [ 0 ] . split ( <str> ) d [ chrom + <str> + start + <str> + stop + <str> + <str> ] = list ( )  for key in d :          outfile2 . write ( key )  d = dict ( ) for gene in neggenes [ 0 : 15 ] :          chrom , [ start , stop ] = gene [ 0 ] . split ( <str> ) [ 2 ] . split ( <str> ) [ 0 ] , gene [ 0 ] . split ( <str> ) [ 2 ] . split ( <str> ) [ 1 ] . split ( <str> ) [ 0 ] . split ( <str> ) d [ chrom + <str> + start + <str> + stop + <str> + <str> ] = list ( )  for key in d :          outfile2 . write ( key )   if __name__ == <str> :      run ( filedir )    