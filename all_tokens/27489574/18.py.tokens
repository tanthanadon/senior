import contextlib from . _2to3 import STRTYPE from . _common_util import codify , get_docs , response_to_json_dict from . result import Result from . error import CloudantArgumentError , CloudantViewException class View ( dict ) :      def __init__ ( self , ddoc , view_name , map_func = None , reduce_func = None , partition_key = None , ** kwargs ) :          super ( View , self ) . __init__ ( ) self . design_doc = ddoc self . _r_session = self . design_doc . r_session self . view_name = view_name if map_func is not None :              self [ <str> ] = codify ( map_func )  if reduce_func is not None :              self [ <str> ] = codify ( reduce_func )  self . _partition_key = partition_key self . update ( kwargs ) self . result = Result ( self )  @ property def map ( self ) :          return self . get ( <str> )  @ map . setter def map ( self , js_func ) :          self [ <str> ] = codify ( js_func )  @ property def reduce ( self ) :          return self . get ( <str> )  @ reduce . setter def reduce ( self , js_func ) :          self [ <str> ] = codify ( js_func )  @ property def url ( self ) :          if self . _partition_key :              base_url = self . design_doc . document_partition_url ( self . _partition_key )  else :              base_url = self . design_doc . document_url  return <str> . join ( ( base_url , <str> , self . view_name ) )  def __call__ ( self , ** kwargs ) :          resp = get_docs ( self . _r_session , self . url , self . design_doc . encoder , ** kwargs ) return response_to_json_dict ( resp )  @ contextlib . contextmanager def custom_result ( self , ** options ) :          rslt = Result ( self , ** options ) yield rslt del rslt   class QueryIndexView ( View ) :      def __init__ ( self , ddoc , view_name , map_fields , reduce_func , ** kwargs ) :          if not isinstance ( map_fields , dict ) :              raise CloudantArgumentError ( 132 )  if not isinstance ( reduce_func , STRTYPE ) :              raise CloudantArgumentError ( 133 )  super ( QueryIndexView , self ) . __init__ ( ddoc , view_name , map_fields , reduce_func , ** kwargs ) self [ <str> ] = map_fields self [ <str> ] = reduce_func self . result = None  @ property def map ( self ) :          return self . get ( <str> )  @ map . setter def map ( self , map_func ) :          if isinstance ( map_func , dict ) :              self [ <str> ] = map_func  else :              raise CloudantArgumentError ( 132 )   @ property def reduce ( self ) :          return self . get ( <str> )  @ reduce . setter def reduce ( self , reduce_func ) :          if isinstance ( reduce_func , STRTYPE ) :              self [ <str> ] = reduce_func  else :              raise CloudantArgumentError ( 133 )   def __call__ ( self , ** kwargs ) :          raise CloudantViewException ( 101 )  def custom_result ( self , ** options ) :          raise CloudantViewException ( 102 )    