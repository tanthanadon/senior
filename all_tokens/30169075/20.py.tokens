from __future__ import absolute_import from __future__ import division from __future__ import print_function from __future__ import unicode_literals import escpos . printer as printer from escpos . constants import BARCODE_TYPE_A , BARCODE_TYPE_B from escpos . capabilities import Profile , BARCODE_B from escpos . exceptions import BarcodeTypeError , BarcodeCodeError import pytest @ pytest . mark . parametrize ( <str> , [ ( <str> , <str> , <str> ) ] ) def test_barcode ( bctype , data , expected ) :      instance = printer . Dummy ( ) instance . barcode ( data , bctype ) assert instance . output == expected  @ pytest . mark . parametrize ( <str> , [ ( <str> , True ) , ( <str> , False ) , ] ) def test_lacks_support ( bctype , supports_b ) :      profile = Profile ( features = { BARCODE_B : supports_b } ) instance = printer . Dummy ( profile = profile ) with pytest . raises ( BarcodeTypeError ) :          instance . barcode ( <str> , bctype )  assert instance . output == <str>  @ pytest . mark . parametrize ( <str> , [ ( <str> , <str> ) , ( <str> , <str> ) , ] ) def test_code_check ( bctype , data ) :      instance = printer . Dummy ( ) with pytest . raises ( BarcodeCodeError ) :          instance . barcode ( data , bctype )  assert instance . output == <str>   