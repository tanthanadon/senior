from __future__ import absolute_import from __future__ import division from __future__ import print_function from __future__ import unicode_literals import pytest import mock from hypothesis import given , assume import hypothesis . strategies as st from escpos . printer import Dummy def get_printer ( ) :      return Dummy ( magic_encode_args = { <str> : True , <str> : <str> } )  @ given ( text = st . text ( ) ) def test_text ( text ) :      instance = get_printer ( ) instance . magic . write = mock . Mock ( ) instance . text ( text ) instance . magic . write . assert_called_with ( text )  def test_block_text ( ) :      printer = get_printer ( ) printer . block_text ( <str> , font = <str> ) assert printer . output == <str>  def test_textln ( ) :      printer = get_printer ( ) printer . textln ( <str> ) assert printer . output == <str>  def test_textln_empty ( ) :      printer = get_printer ( ) printer . textln ( ) assert printer . output == <str>  def test_ln ( ) :      printer = get_printer ( ) printer . ln ( ) assert printer . output == <str>  def test_multiple_ln ( ) :      printer = get_printer ( ) printer . ln ( 3 ) assert printer . output == <str>   