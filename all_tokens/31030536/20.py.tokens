import pytest import simplejson as json from subprocrunner import SubprocessRunner from tcconfig . _const import Tc from tcconfig . parser . shaping_rule import TcShapingRuleParser from tcconfig . traffic_control import delete_all_rules from . common import NullLogger , print_test_result @ pytest . fixture def device_value ( request ) :      return request . config . getoption ( <str> )  class Test_tcconfig :      @ pytest . mark . parametrize ( [ <str> ] , [ [ <str> ] , [ <str> ] ] ) def test_config_file_smoke ( self , tmpdir , device_value , overwrite ) :          if device_value is None :              pytest . skip ( <str> )  p = tmpdir . join ( <str> ) config = ( <str> + <str> . format ( device_value ) + <str> + ) print ( <str> . format ( config ) ) p . write ( config ) for device_option in [ device_value , <str> . format ( device_value ) ] :              delete_all_rules ( device_value ) command = <str> . join ( [ Tc . Command . TCSET , <str> , str ( p ) , overwrite ] ) SubprocessRunner ( command ) . run ( ) parser = TcShapingRuleParser ( device = device_value , ip_version = 4 , logger = NullLogger ( ) , tc_command_output = None , is_parse_filter_id = False , ) result = parser . get_tc_parameter ( ) print_test_result ( expected = config , actual = result ) assert result == json . loads ( config ) delete_all_rules ( device_value )     