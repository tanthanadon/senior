from __future__ import division , print_function import pytest import simplejson as json from subprocrunner import SubprocessRunner from tcconfig . _const import Tc from . common import execute_tcdel , print_test_result @ pytest . fixture def device_value ( request ) :      return request . config . getoption ( <str> )  class Test_tcconfig ( object ) :      @ pytest . mark . parametrize ( [ <str> ] , [ [ <str> ] , [ <str> ] ] ) def test_config_file_smoke ( self , tmpdir , device_value , overwrite ) :          if device_value is None :              pytest . skip ( <str> )  p = tmpdir . join ( <str> ) config = ( <str> + <str> . format ( device_value ) + <str> + ) print ( <str> . format ( config ) ) p . write ( config ) for device_option in [ device_value , <str> . format ( device_value ) ] :              execute_tcdel ( device_value ) command = <str> . join ( [ Tc . Command . TCSET , str ( p ) , <str> , overwrite ] ) SubprocessRunner ( command ) . run ( ) runner = SubprocessRunner ( <str> . format ( Tc . Command . TCSHOW , device_option ) ) runner . run ( ) print_test_result ( expected = config , actual = runner . stdout , error = runner . stderr ) assert json . loads ( runner . stdout ) == json . loads ( config ) execute_tcdel ( device_value )     