import pytest import simplejson as json from subprocrunner import SubprocessRunner from tcconfig . _const import Tc from tcconfig . traffic_control import delete_all_rules from . common import print_test_result , runner_helper @ pytest . fixture def device_value ( request ) :      return request . config . getoption ( <str> )  class Test_tcset_change :      def test_smoke_multiple ( self , device_value ) :          if device_value is None :              pytest . skip ( <str> )  for device_option in [ device_value , <str> . format ( device_value ) ] :              delete_all_rules ( device_option ) runner_helper ( <str> . join ( [ Tc . Command . TCSET , device_option , <str> , ] ) ) runner_helper ( <str> . join ( [ Tc . Command . TCSET , device_option , <str> , ] ) ) delete_all_rules ( device_option )   def test_normal ( self , device_value ) :          if device_value is None :              pytest . skip ( <str> )  for device_option in [ device_value , <str> . format ( device_value ) ] :              runner_helper ( <str> . join ( [ Tc . Command . TCSET , device_option , <str> , ] ) ) runner_helper ( <str> . join ( [ Tc . Command . TCSET , device_option , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , ] ) ) runner = SubprocessRunner ( <str> . format ( Tc . Command . TCSHOW , device_option ) ) expected = ( <str> + <str> . format ( device_value ) + <str> + ) runner . run ( ) print_test_result ( expected = expected , actual = runner . stdout , error = runner . stderr ) assert json . loads ( runner . stdout ) == json . loads ( expected ) runner_helper ( <str> . join ( [ Tc . Command . TCSET , device_option , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , ] ) ) runner = SubprocessRunner ( <str> . format ( Tc . Command . TCSHOW , device_option ) ) expected = ( <str> + <str> . format ( device_value ) + <str> + ) runner . run ( ) print_test_result ( expected = expected , actual = runner . stdout , error = runner . stderr ) assert json . loads ( runner . stdout ) == json . loads ( expected ) delete_all_rules ( device_option )     