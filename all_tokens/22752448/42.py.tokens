import os import re MD5_RE = re . compile ( <str> ) PKGNAME_TICKER_RE = re . compile ( <str> ) PKGNAME_CHARS_RE = re . compile ( <str> ) def IndexDictsBy ( list_of_dicts , field_key ) :    index = { } for d in list_of_dicts :      index . setdefault ( d [ field_key ] , [ ] ) index [ d [ field_key ] ] . append ( d )  return index  def IndexNamedtuplesBy ( list_of_namedtuples , field_key ) :    index = { } for named_tuple in list_of_namedtuples :      value = getattr ( named_tuple , field_key ) index . setdefault ( value , [ ] ) . append ( named_tuple )  return index  def OsReleaseToLong ( osrel ) :    if osrel . startswith ( <str> ) :      return osrel  else :      return <str> % osrel   def ResolveSymlink ( link_from , link_to ) :    target = os . path . normpath ( os . path . join ( os . path . dirname ( link_from ) , link_to ) ) return target  def IsMd5 ( s ) :    return MD5_RE . match ( s )  def MakeCatalognameByPkgname ( pkgname ) :    catalogname = re . sub ( PKGNAME_TICKER_RE , <str> , pkgname ) catalogname = <str> . join ( re . findall ( PKGNAME_CHARS_RE , catalogname ) ) return catalogname   