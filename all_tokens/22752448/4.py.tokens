import os . path import sys import unittest sys . path . append ( <str> ) import gartest import opencsw class OverridesUnitTest_1 ( unittest . TestCase ) :    def testOneOverride ( self ) :      mybuild = gartest . DynamicGarBuild ( ) mybuild . SetGarVariable ( <str> , <str> ) mybuild . SetGarVariable ( <str> , <str> ) mybuild . SetGarVariable ( <str> , <str> ) mybuild . WriteGarFiles ( ) self . assertEquals ( 0 , mybuild . Build ( ) ) pkg = mybuild . GetFirstBuiltPackage ( ) overr_file = <str> expected = <str> try :        self . assertEqual ( expected , pkg . GetFileContent ( overr_file ) ) overrides = pkg . GetOverrides ( ) self . assertEqual ( 1 , len ( overrides ) )  except opencsw . PackageError , e :        mybuild . cleanup = False self . fail ( e )   def testTwoOverriders ( self ) :      mybuild = gartest . DynamicGarBuild ( ) mybuild . SetGarVariable ( <str> , <str> ) mybuild . SetGarVariable ( <str> , <str> ) mybuild . SetGarVariable ( <str> , ( <str> <str> ) ) mybuild . WriteGarFiles ( ) self . assertEquals ( 0 , mybuild . Build ( ) ) pkg = mybuild . GetFirstBuiltPackage ( ) overr_file = <str> expected = ( <str> <str> ) self . assertEqual ( expected , pkg . GetFileContent ( overr_file ) ) overrides = pkg . GetOverrides ( ) self . assertEqual ( 2 , len ( overrides ) )   if __name__ == <str> : 	 unittest . main ( )   