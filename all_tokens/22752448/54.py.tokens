import optparse import pprint import logging import pipes import sys from lib . python import configuration from lib . python import rest from lib . python import errors def main ( ) :    parser = optparse . OptionParser ( ) parser . add_option ( <str> , <str> , dest = <str> ) parser . add_option ( <str> , dest = <str> , default = <str> ) parser . add_option ( <str> , dest = <str> , default = <str> ) parser . add_option ( <str> , dest = <str> , default = <str> ) parser . add_option ( <str> , dest = <str> ) parser . add_option ( <str> , dest = <str> , default = False , action = <str> ) options , args = parser . parse_args ( ) if options . debug :      logging . basicConfig ( level = logging . DEBUG )  else :      logging . basicConfig ( level = logging . INFO )  config = configuration . GetConfig ( ) rest_client = rest . RestClient ( pkgdb_url = config . get ( <str> , <str> ) , releases_url = config . get ( <str> , <str> ) ) if options . md5 :      md5 = options . md5  else :      pkg_basic = rest_client . Srv4ByCatalogAndCatalogname ( options . catrel , options . arch , options . osrel , options . catalogname ) md5 = pkg_basic [ <str> ]  logging . info ( <str> , md5 ) pkgstats = rest_client . GetBlob ( <str> , md5 ) elfdump_data = { } for _ , binary_md5 in pkgstats [ <str> ] :      elfdump_data [ binary_md5 ] = rest_client . GetBlob ( <str> , binary_md5 )  catalogname = pkgstats [ <str> ] [ <str> ] target_file = <str> % catalogname pkgstats [ <str> ] = elfdump_data with open ( target_file , <str> ) as fd :      fd . write ( <str> ) fd . write ( <str> % <str> . join ( pipes . quote ( x ) for x in sys . argv ) ) fd . write ( <str> ) fd . write ( pprint . pformat ( pkgstats ) ) fd . write ( <str> )  print target_file , <str>  if __name__ == <str> :    main ( )   