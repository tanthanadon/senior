import tag import os import opencsw import common_constants class FileSetChecker ( object ) :    def _CheckUncommitted ( self , files_with_metadata ) :      tags = [ ] expected_vendor_tag = <str> for filename , parsed_filename in files_with_metadata :        if parsed_filename [ <str> ] != expected_vendor_tag :          tags . append ( tag . CheckpkgTag ( None , <str> , <str> % ( filename , expected_vendor_tag , parsed_filename [ <str> ] ) ) )   return tags  def _CheckFilenames ( self , files_with_metadata ) :      tags = [ ] for filename , parsed_filename in files_with_metadata :        if not filename . endswith ( <str> ) and not filename . endswith ( <str> ) :          tags . append ( tag . CheckpkgTag ( None , <str> , <str> % filename ) )   return tags  def _CheckMissingArchs ( self , files_with_metadata ) :      tags = [ ] catalognames_by_arch = { } osrels = set ( x [ 1 ] [ <str> ] for x in files_with_metadata ) for arch in common_constants . PHYSICAL_ARCHITECTURES :        for osrel in osrels :          key = arch , osrel catalognames_by_arch [ key ] = set ( )   for file_path , file_metadata in files_with_metadata :        catalogname = file_metadata [ <str> ] if file_metadata [ <str> ] == <str> :          archs = common_constants . PHYSICAL_ARCHITECTURES  else :          archs = [ file_metadata [ <str> ] ]  osrel = file_metadata [ <str> ] for arch in archs :          key = arch , osrel if key in catalognames_by_arch :            catalognames_by_arch [ key ] . add ( catalogname )  else :            tags . append ( tag . CheckpkgTag ( None , <str> , <str> % ( file_path , arch , osrel ) ) )    missing = { } for key1 , set1 in catalognames_by_arch . iteritems ( ) :        for catalogname in set1 :          for key2 , set2 in catalognames_by_arch . iteritems ( ) :            if catalogname not in set2 :              arch , osrel = key2 missing_key = arch , osrel , catalogname missing . setdefault ( missing_key , set ( ) ) . add ( <str> % ( catalogname , key1 [ 0 ] , key1 [ 1 ] ) )     for arch , osrel , catalogname in missing :        error_tag_name = <str> % ( arch , osrel ) tags . append ( tag . CheckpkgTag ( None , error_tag_name , catalogname ) )  return tags  def _FilesWithMetadata ( self , file_list ) :      files_with_metadata = [ ] for file_path in file_list :        pkg_path , basename = os . path . split ( file_path ) parsed = opencsw . ParsePackageFileName ( basename ) catalogname = parsed [ <str> ] files_with_metadata . append ( ( basename , parsed ) ) if parsed [ <str> ] == <str> :          archs = common_constants . PHYSICAL_ARCHITECTURES  else :          archs = [ parsed [ <str> ] ]  for arch in archs :          for osrel in common_constants . OS_RELS :            key = arch , osrel    return files_with_metadata  def CheckFiles ( self , file_list ) :      files_with_metadata = self . _FilesWithMetadata ( file_list ) tags = [ ] tags . extend ( self . _CheckMissingArchs ( files_with_metadata ) ) tags . extend ( self . _CheckUncommitted ( files_with_metadata ) ) tags . extend ( self . _CheckFilenames ( files_with_metadata ) ) return tags    