try :    import unittest2 as unittest  except ImportError :    import unittest  import file_set_checker import tag SAMPLE_FILES = [ <str> , <str> , <str> , <str> , <str> , <str> , ] class FileSetCheckerUnitTest ( unittest . TestCase ) :    def testMissingArchitecture ( self ) :      fc = file_set_checker . FileSetChecker ( ) expected = [ tag . CheckpkgTag ( None , <str> , <str> ) ] files_with_metadata = fc . _FilesWithMetadata ( SAMPLE_FILES ) self . assertEqual ( expected , fc . _CheckMissingArchs ( files_with_metadata ) )  def testMissingArchitectureWithOsrel ( self ) :      files = [ <str> , <str> , <str> , ] fc = file_set_checker . FileSetChecker ( ) expected = [ tag . CheckpkgTag ( None , <str> , <str> ) ] files_with_metadata = fc . _FilesWithMetadata ( files ) self . assertEqual ( expected , fc . _CheckMissingArchs ( files_with_metadata ) )  def testUncommitted ( self ) :      fc = file_set_checker . FileSetChecker ( ) expected = [ tag . CheckpkgTag ( None , <str> , <str> ) , tag . CheckpkgTag ( None , <str> , <str> ) , ] files = [ <str> <str> , <str> <str> ] files_with_metadata = fc . _FilesWithMetadata ( files ) self . assertEqual ( expected , fc . _CheckUncommitted ( files_with_metadata ) )  def testBadInput ( self ) :      fc = file_set_checker . FileSetChecker ( ) expected = [ tag . CheckpkgTag ( None , <str> , <str> ) ] expected_2 = [ tag . CheckpkgTag ( None , <str> , <str> ) , ] files = [ <str> ] files_with_metadata = fc . _FilesWithMetadata ( files ) self . assertEqual ( expected , fc . _CheckUncommitted ( files_with_metadata ) ) self . assertEqual ( expected_2 , fc . _CheckMissingArchs ( files_with_metadata ) )  def testFilenames ( self ) :      fc = file_set_checker . FileSetChecker ( ) expected = [ tag . CheckpkgTag ( None , <str> , <str> ) , ] files = [ <str> ] files_with_metadata = fc . _FilesWithMetadata ( files ) self . assertEqual ( expected , fc . _CheckFilenames ( files_with_metadata ) )  def testFilenamesGood ( self ) :      fc = file_set_checker . FileSetChecker ( ) files = [ <str> <str> ] files_with_metadata = fc . _FilesWithMetadata ( files ) self . assertEqual ( [ ] , fc . _CheckFilenames ( files_with_metadata ) )   if __name__ == <str> : 	 unittest . main ( )   