from fast_rcnn . config import cfg import caffe import numpy as np import copy DEBUG = False class LossLayer ( caffe . Layer ) :    def setup ( self , bottom , top ) :      pass  def reshape ( self , bottom , top ) :      top [ 0 ] . reshape ( * bottom [ 0 ] . data . shape )  def forward ( self , bottom , top ) :      labels = bottom [ 0 ] . data iep = bottom [ 1 ] . data repeat_labels = labels [ 0 , : , 0 , 0 ] repeat_labels = repeat_labels . reshape ( 1 , labels . shape [ 1 ] ) if cfg . TRAIN . FULL_IMAGE == False or cfg . TEST . FULL_IMAGE == False :     	 repeat_labels = np . repeat ( repeat_labels , iep . shape [ 0 ] , axis = 0 )  self . diff = ( iep - repeat_labels ) top [ 0 ] . reshape ( * ( self . diff . shape ) ) if cfg . TRAIN . FULL_IMAGE or cfg . TEST . FULL_IMAGE :     	 top [ 0 ] . data [ ... ] = np . abs ( self . diff . astype ( np . float32 , copy = False ) )  else :     	 top [ 0 ] . data [ ... ] = np . mean ( np . abs ( self . diff . astype ( np . float32 , copy = False ) ) , axis = 0 )  top [ 0 ] . data [ ... ] = top [ 0 ] . data self . loss = top [ 0 ] . data if DEBUG :         print <str> , self . diff   def backward ( self , top , propagate_down , bottom ) :      bottom [ 1 ] . diff [ ... ] = np . sign ( self . diff ) if DEBUG :         print <str> , bottom [ 1 ] . diff     