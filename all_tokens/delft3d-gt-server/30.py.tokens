import datetime import datetime from mock import Mock from django . contrib . auth . models import Permission from django . contrib . admin . sites import AdminSite from django . test import Client , TestCase , RequestFactory from django . urls import reverse from django . utils import timezone from delft3dworker . models import Group from delft3dworker . models import User from delft3dworker . models import Scene from delft3dworker . models import Workflow from delft3dworker . admin import SceneAdmin from delft3dworker . admin import GroupUsageSummaryAdmin class GroupUsageSummaryAdminTest ( TestCase ) :      def setUp ( self ) :          self . factory = RequestFactory ( ) self . user_a = User . objects . create_user ( username = <str> ) self . user_b = User . objects . create_user ( username = <str> ) self . superuser = User . objects . create_superuser ( username = <str> , password = <str> , email = <str> ) self . company_w = Group . objects . create ( name = <str> ) for user in [ self . user_a , self . user_b ] :              self . company_w . user_set . add ( user ) for perm in [ <str> , <str> , <str> , <str> ] :                  user . user_permissions . add ( Permission . objects . get ( codename = perm ) )   self . company_a = Group . objects . create ( name = <str> ) self . company_a . user_set . add ( self . user_a ) self . company_b = Group . objects . create ( name = <str> ) self . company_b . user_set . add ( self . user_b ) self . scene_a = Scene . objects . create ( id = 0 , name = <str> , owner = self . user_a ) self . scene_b = Scene . objects . create ( id = 1 , name = <str> , owner = self . user_b ) self . scene_c = Scene . objects . create ( id = 2 , name = <str> , owner = self . user_b ) self . workflow_a = Workflow . objects . create ( name = <str> , scene = self . scene_a , starttime = datetime . datetime ( 2010 , 10 , 10 , 10 , 10 , 00 , tzinfo = timezone . utc ) , stoptime = datetime . datetime ( 2010 , 10 , 10 , 10 , 20 , 00 , tzinfo = timezone . utc ) ) self . workflow_b = Workflow . objects . create ( name = <str> , scene = self . scene_b , starttime = datetime . datetime ( 2010 , 10 , 10 , 10 , 20 , 00 , tzinfo = timezone . utc ) , stoptime = datetime . datetime ( 2010 , 10 , 10 , 10 , 40 , 00 , tzinfo = timezone . utc ) ) self . workflow_c = Workflow . objects . create ( name = <str> , scene = self . scene_c , starttime = datetime . datetime ( 2010 , 10 , 10 , 10 , 30 , 00 , tzinfo = timezone . utc ) ) self . group_usage_summary_admin = GroupUsageSummaryAdmin ( Group , AdminSite ( ) )  def test_changelist_view ( self ) :          factory = RequestFactory ( ) request = factory . get ( reverse ( <str> ) ) request . user = self . superuser response = self . group_usage_summary_admin . changelist_view ( request ) summary_total = response . context_data [ <str> ] self . assertEqual ( response . status_code , 200 ) self . assertEqual ( summary_total [ <str> ] , 2 ) self . assertEqual ( summary_total [ <str> ] , datetime . timedelta ( minutes = 30 ) )    