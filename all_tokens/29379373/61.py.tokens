def install ( job ) :      data = job . service . model . data cuisine = job . service . executor . cuisine if data . name not in cuisine . systemservices . openvswitch . networkList ( ) :          cuisine . systemservices . openvswitch . networkCreate ( data . name ) gateway = data . gateway if data . gateway else None cuisine . net . netconfig ( data . name , data . ipAddr , data . netmask , gateway = gateway , masquerading = data . masquerading ) cuisine . processmanager . start ( <str> )  if data . dhcpEnable :          range_start = data . dhcpRangeStart if data . dhcpRangeStart else <str> range_stop = data . dhcpRangeStop if data . dhcpRangeStop else <str> cuisine . apps . dnsmasq . install ( ) cuisine . apps . dnsmasq . config ( data . name , rangefrom = range_start , rangeto = range_stop ) cuisine . processmanager . restart ( <str> )  job . service . model . actions [ <str> ] . state = <str> job . service . saveAll ( )  def start ( job ) :      cuisine = job . service . executor . cuisine if not cuisine . processmanager . exists ( <str> ) :          raise j . exceptions . RuntimeError ( <str> )  cuisine . processmanager . start ( <str> ) job . service . model . actions [ <str> ] . state = <str> job . service . saveAll ( )  def stop ( job ) :      cuisine = job . service . executor . cuisine if not cuisine . processmanager . exists ( <str> ) :          raise j . exceptions . RuntimeError ( <str> )  cuisine . processmanager . stop ( <str> ) job . service . model . actions [ <str> ] . state = <str> job . service . saveAll ( )  def uninstall ( job ) :      data = job . service . model . data cuisine = job . service . executor . cuisine if data . name in cuisine . systemservices . openvswitch . networkList ( ) :          cuisine . systemservices . openvswitch . networkDelete ( data . name )  job . service . model . actions [ <str> ] . state = <str> job . service . saveAll ( )   