def init_actions_ ( service , args ) :      return { <str> : [ <str> ] }  def test ( job ) :      import sys RESULT_OK = <str> RESULT_FAILED = <str> RESULT_ERROR = <str> % job . service . name model = job . service . model model . data . result = RESULT_OK % job . service . name try :          services_to_check = { <str> : { <str> : <str> , <str> : [ ( <str> , [ <str> ] ) , ( <str> , [ <str> ] ) ] } , <str> : { <str> : <str> , <str> : [ ( <str> , [ <str> ] ) , ( <str> , [ <str> , <str> , <str> ] ) ] } , <str> : { <str> : <str> , <str> : [ ( <str> , [ <str> ] ) , ( <str> , [ <str> ] ) ] } } for actor , actor_info in services_to_check . items ( ) :              srv = job . service . aysrepo . servicesFind ( actor = actor , name = actor_info [ <str> ] ) [ 0 ] for action_info in actor_info [ <str> ] :                  if str ( srv . model . actions [ action_info [ 0 ] ] . state ) not in action_info [ 1 ] :                      model . data . result = RESULT_FAILED % ( <str> % ( action_info [ 0 ] , <str> % ( actor , actor_info [ <str> ] ) , action_info [ 1 ] , str ( srv . model . actions [ action_info [ 0 ] ] . state ) ) )     except :          model . data . result = RESULT_ERROR % str ( sys . exc_info ( ) [ : 2 ] )  finally :          job . service . save ( )    