def install ( job ) :      cuisine = job . service . executor . cuisine cuisine . systemservices . openvswitch . install ( ) job . service . executeActionJob ( <str> , inprocess = True ) job . service . model . actions [ <str> ] . state = <str> job . service . saveAll ( )  def start ( job ) :      cuisine = job . service . executor . cuisine if not cuisine . processmanager . exists ( <str> ) :          raise j . exceptions . RuntimeError ( <str> )  cuisine . processmanager . start ( <str> ) job . service . model . actions [ <str> ] . state = <str> job . service . saveAll ( )  def stop ( job ) :      cuisine = job . service . executor . cuisine if not cuisine . processmanager . exists ( <str> ) :          raise j . exceptions . RuntimeError ( <str> )  cuisine . processmanager . stop ( <str> ) job . service . model . actions [ <str> ] . state = <str> job . service . saveAll ( )  def uninstall ( job ) :      cuisine = job . service . executor . cuisine cuisine . systemservices . openvswitch . uninstall ( ) job . service . model . actions [ <str> ] . state = <str> job . service . saveAll ( )   