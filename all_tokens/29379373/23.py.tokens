def init_actions_ ( service , args ) :      return { <str> : [ <str> ] }  def test ( job ) :      import sys RESULT_OK = <str> RESULT_FAILED = <str> RESULT_ERROR = <str> % job . service . name model = job . service . model model . data . result = RESULT_OK % job . service . name failures = [ ] try :          if job . service . name == <str> :              if job . service . parent . name != <str> :                  failures . append ( RESULT_FAILED % ( <str> ) )  elif model . dbobj . actorName not in job . service . parent . consumers :                  failures . append ( RESULT_FAILED % ( <str> ) )   if job . service . name == <str> :              if <str> not in job . service . producers :                  failures . append ( RESULT_FAILED % ( <str> ) )  elif len ( job . service . producers [ <str> ] ) != 1 :                  failures . append ( RESULT_FAILED % ( <str> ) )   if failures :              model . data . result = <str> . join ( failures )   except :          model . data . result = RESULT_ERROR % str ( sys . exc_info ( ) [ : 2 ] )  job . service . save ( )    