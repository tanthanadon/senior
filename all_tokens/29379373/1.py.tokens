def init_actions_ ( service , args ) :      return { <str> : [ <str> ] }  def test ( job ) :      import sys try :          log = j . logger . get ( <str> ) log . addHandler ( j . logger . _LoggerFactory__fileRotateHandler ( <str> ) ) log . info ( <str> ) service = job . service vm_os = service . producers . get ( <str> ) [ 0 ] vm_exe = vm_os . executor . cuisine log . info ( <str> ) vm_exe . core . run ( <str> ) vm_exe . core . run ( <str> ) log . info ( <str> ) vm = service . producers [ <str> ] [ 0 ] disk = vm . producers [ <str> ] [ 0 ] maxIOPS = disk . model . data . maxIOPS fio_cmd = <str> <str> <str> . format ( <str> , <str> ) vm_exe . core . run ( fio_cmd ) out = vm_exe . core . run ( <str> % <str> ) list = out [ 1 ] . split ( <str> ) int_list = [ int ( i ) for i in list if int ( i ) > maxIOPS ] iops = len ( int_list ) if iops != 0 :              service . model . data . result = <str> . format ( <str> , str ( sys . exc_info ( ) [ : 2 ] ) ) service . save ( ) return  log . info ( <str> ) vdc = vm . producers [ <str> ] [ 0 ] g8client = vdc . producers [ <str> ] [ 0 ] client = j . clients . openvcloud . getFromService ( g8client ) acc = client . account_get ( vdc . model . data . account ) space = acc . space_get ( vdc . model . dbobj . name , vdc . model . data . location ) machine = space . machines [ vm . name ] disk_id = machine . add_disk ( name = <str> , description = <str> , size = 50 , type = <str> ) machine . disk_limit_io ( disk_id , 1000 ) log . info ( <str> ) fio_cmd = <str> <str> <str> . format ( <str> , <str> ) vm_exe . core . run ( fio_cmd ) out = vm_exe . core . run ( <str> % <str> ) list = out [ 1 ] . split ( <str> ) int_list = [ int ( i ) for i in list if int ( i ) > 1000 ] iops = len ( int_list ) if iops != 0 :              service . model . data . result = <str> . format ( <str> , str ( sys . exc_info ( ) [ : 2 ] ) ) service . save ( ) return  log . info ( <str> ) machine . disk_limit_io ( disk_id , 500 ) fio_cmd = <str> <str> <str> . format ( <str> , <str> ) vm_exe . core . run ( fio_cmd ) out = vm_exe . core . run ( <str> % <str> ) list = out [ 1 ] . split ( <str> ) int_list = [ int ( i ) for i in list if int ( i ) > 500 ] iops = len ( int_list ) if iops != 0 :              service . model . data . result = <str> . format ( <str> , str ( sys . exc_info ( ) [ : 2 ] ) ) service . save ( ) return  service . model . data . result = <str> . format ( <str> )  except :          service . model . data . result = <str> . format ( <str> , str ( sys . exc_info ( ) [ : 2 ] ) )  log . info ( <str> ) service . save ( )   