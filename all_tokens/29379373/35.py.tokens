def init_actions_ ( service , args ) :      return { <str> : [ <str> ] }  def test ( job ) :      import requests , sys service = job . service RESULT_OK = <str> RESULT_FAILED = <str> RESULT_ERROR = <str> try :          g8client = service . producers [ <str> ] [ 0 ] url = <str> + g8client . model . data . url username = g8client . model . data . login password = g8client . model . data . password login_url = url + <str> credential = { <str> : username , <str> : password } session = requests . Session ( ) session . post ( url = login_url , data = credential ) vm = service . producers [ <str> ] [ 0 ] vmID = vm . model . data . machineId user = service . producers [ <str> ] [ 0 ] user_name = user . model . data . provider API_URL = url + <str> API_BODY = { <str> : vmID } response = session . post ( url = API_URL , data = API_BODY ) if response . status_code == 200 :              content = response . json ( ) for user in content [ <str> ] :                  if user_name in user [ <str> ] :                      service . model . data . result = RESULT_OK % <str> break  else :                      continue   else :                  failure = <str> % ( username , vmID ) service . model . data . result = RESULT_FAILED % failure   else :              response_data = { <str> : response . status_code , <str> : response . content } service . model . data . result = RESULT_ERROR % str ( response_data ) + str ( vmID )   except Exception as e :          service . model . data . result = RESULT_ERROR % ( str ( sys . exc_info ( ) [ : 2 ] ) + str ( e ) )  service . save ( )   