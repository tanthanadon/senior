def init_actions_ ( service , args ) :      action_required = args . get ( <str> ) if action_required == <str> :          service . model . actions [ <str> ] . state = <str>  if action_required == <str> :          service . model . actions [ <str> ] . state = <str>  service . save ( ) return { <str> : [ ] , <str> : [ <str> ] , <str> : [ ] , }  def install ( job ) :      cuisine = job . service . executor . cuisine data = job . service . model . data cuisine . systemservices . kvm . disks . download_image ( url = data . url , overwrite = data . overwrite ) job . service . model . actions [ <str> ] . state = <str> job . service . saveAll ( )  def uninstall ( job ) :      cuisine = job . service . executor . cuisine data = job . service . model . data name = data . url . split ( <str> ) [ - 1 ] path = cuisine . systemservices . kvm . image_get_path ( name ) cuisine . core . file_unlink ( path ) job . service . model . actions [ <str> ] . state = <str> job . service . saveAll ( )  def processChange ( job ) :      args = job . model . args category = args . pop ( <str> ) if category == <str> :          data = job . service . model . data data . overwrite = args . get ( <str> , False ) if <str> not in args or args [ <str> ] == <str> :              raise j . exceptions . Input ( <str> )  data . url = args [ <str> ] job . service . saveAll ( )    