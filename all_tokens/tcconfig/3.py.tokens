from __future__ import unicode_literals import io import os . path import sys import setuptools MODULE_NAME = <str> REPOSITORY_URL = <str> . format ( MODULE_NAME ) REQUIREMENT_DIR = <str> ENCODING = <str> pkg_info = { } def need_pytest ( ) :      return set ( [ <str> , <str> , <str> ] ) . intersection ( sys . argv )  def get_release_command_class ( ) :      try :          from releasecmd import ReleaseCommand  except ImportError :          return { }  return { <str> : ReleaseCommand }  with open ( os . path . join ( MODULE_NAME , <str> ) ) as f :      exec ( f . read ( ) , pkg_info )  with io . open ( <str> , encoding = ENCODING ) as fp :      long_description = fp . read ( )  with io . open ( os . path . join ( <str> , <str> , <str> , <str> ) , encoding = ENCODING ) as f :      summary = f . read ( ) . strip ( )  with open ( os . path . join ( REQUIREMENT_DIR , <str> ) ) as f :      install_requires = [ line . strip ( ) for line in f if line . strip ( ) ]  with open ( os . path . join ( REQUIREMENT_DIR , <str> ) ) as f :      tests_requires = [ line . strip ( ) for line in f if line . strip ( ) ]  with open ( os . path . join ( REQUIREMENT_DIR , <str> ) ) as f :      docs_requires = [ line . strip ( ) for line in f if line . strip ( ) ]  build_exe_requires = [ <str> ] build_wheel_requires = [ <str> , <str> ] build_requires = build_exe_requires + build_wheel_requires color_requires = [ <str> ] setuptools_require = [ <str> ] pytest_runner = [ <str> ] if need_pytest ( ) else [ ] setuptools . setup ( name = MODULE_NAME , version = pkg_info [ <str> ] , url = REPOSITORY_URL , author = pkg_info [ <str> ] , author_email = pkg_info [ <str> ] , description = summary , keywords = [ <str> , <str> , <str> , <str> , <str> , ] , long_description = long_description , license = pkg_info [ <str> ] , include_package_data = True , packages = setuptools . find_packages ( exclude = [ <str> ] ) , project_urls = { <str> : <str> . format ( MODULE_NAME ) , <str> : REPOSITORY_URL , <str> : <str> . format ( REPOSITORY_URL ) , } , python_requires = <str> , install_requires = setuptools_require + install_requires , setup_requires = setuptools_require + pytest_runner , tests_require = tests_requires , extras_require = { <str> : [ <str> ] + color_requires , <str> : build_requires , <str> : build_exe_requires , <str> : build_wheel_requires , <str> : color_requires , <str> : docs_requires , <str> : [ <str> ] , <str> : tests_requires , } , classifiers = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , ] , entry_points = { <str> : [ <str> , <str> , <str> , ] , } , cmdclass = get_release_command_class ( ) )  