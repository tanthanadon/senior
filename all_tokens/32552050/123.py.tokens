from __future__ import unicode_literals from django . db import migrations , models import django . db . models . deletion import django_markdown . models import jsonfield . fields class Migration ( migrations . Migration ) :      initial = True dependencies = [ ( <str> , <str> ) , ( <str> , <str> ) , ] operations = [ migrations . CreateModel ( name = <str> , fields = [ ( <str> , models . AutoField ( auto_created = True , primary_key = True , serialize = False , verbose_name = <str> ) ) , ( <str> , models . CharField ( max_length = 16 ) ) , ( <str> , models . IntegerField ( help_text = <str> ) ) , ( <str> , models . ForeignKey ( on_delete = django . db . models . deletion . CASCADE , to = <str> ) ) , ] , options = { <str> : <str> , } , ) , migrations . CreateModel ( name = <str> , fields = [ ( <str> , models . AutoField ( auto_created = True , primary_key = True , serialize = False , verbose_name = <str> ) ) , ( <str> , models . PositiveIntegerField ( ) ) , ( <str> , models . CharField ( help_text = <str> , max_length = 26 ) ) , ( <str> , models . PositiveSmallIntegerField ( blank = True , help_text = <str> , null = True ) ) , ( <str> , models . CharField ( help_text = <str> , max_length = 256 ) ) , ( <str> , models . ForeignKey ( on_delete = django . db . models . deletion . CASCADE , to = <str> ) ) , ] , options = { <str> : False , } , ) , migrations . CreateModel ( name = <str> , fields = [ ( <str> , models . AutoField ( auto_created = True , primary_key = True , serialize = False , verbose_name = <str> ) ) , ( <str> , models . PositiveIntegerField ( ) ) , ( <str> , models . CharField ( help_text = <str> , max_length = 26 ) ) , ( <str> , models . PositiveSmallIntegerField ( blank = True , help_text = <str> , null = True ) ) , ( <str> , models . CharField ( help_text = <str> , max_length = 256 ) ) , ( <str> , models . CharField ( help_text = <str> , max_length = 256 ) ) , ( <str> , models . ForeignKey ( on_delete = django . db . models . deletion . CASCADE , to = <str> ) ) , ] , options = { <str> : False , } , ) , migrations . CreateModel ( name = <str> , fields = [ ( <str> , models . AutoField ( auto_created = True , primary_key = True , serialize = False , verbose_name = <str> ) ) , ( <str> , models . PositiveIntegerField ( ) ) , ( <str> , models . CharField ( max_length = 16 ) ) , ( <str> , models . CharField ( max_length = 16 ) ) , ( <str> , models . ForeignKey ( on_delete = django . db . models . deletion . CASCADE , to = <str> ) ) , ] , ) , migrations . CreateModel ( name = <str> , fields = [ ( <str> , models . AutoField ( auto_created = True , primary_key = True , serialize = False , verbose_name = <str> ) ) , ( <str> , models . PositiveIntegerField ( help_text = <str> ) ) , ( <str> , models . CharField ( help_text = <str> , max_length = 24 ) ) , ( <str> , models . PositiveSmallIntegerField ( blank = True , help_text = <str> , null = True ) ) , ( <str> , models . PositiveSmallIntegerField ( blank = True , help_text = <str> , null = True ) ) , ( <str> , models . PositiveIntegerField ( blank = True , help_text = <str> , null = True ) ) , ( <str> , models . CharField ( help_text = <str> , max_length = 26 ) ) , ( <str> , models . BooleanField ( ) ) , ( <str> , jsonfield . fields . JSONField ( blank = True , null = True ) ) , ( <str> , django_markdown . models . MarkdownField ( help_text = <str> ) ) , ( <str> , django_markdown . models . MarkdownField ( help_text = <str> , null = True ) ) , ( <str> , django_markdown . models . MarkdownField ( help_text = <str> , null = True ) ) , ( <str> , django_markdown . models . MarkdownField ( help_text = <str> , null = True ) ) , ( <str> , models . CharField ( blank = True , help_text = <str> , max_length = 24 , null = True ) ) , ( <str> , models . ForeignKey ( help_text = <str> , on_delete = django . db . models . deletion . CASCADE , to = <str> ) ) , ( <str> , models . ForeignKey ( help_text = <str> , on_delete = django . db . models . deletion . CASCADE , related_name = <str> , to = <str> ) ) , ] , options = { <str> : False , } , ) , migrations . AlterIndexTogether ( name = <str> , index_together = set ( [ ( <str> , <str> ) ] ) , ) , ]   