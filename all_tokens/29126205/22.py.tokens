from __future__ import division , print_function import numpy as np import healpy as hp from bayesian_machinery import * from plot_map_outcomes import nonzero_data planck_tqu_db = sqlite3 . connect ( <str> ) planck_tqu_cursor = planck_tqu_db . cursor ( ) planck_cov_db = sqlite3 . connect ( <str> ) planck_cov_cursor = planck_cov_db . cursor ( ) rht_cursor , tablename = get_rht_cursor ( ) allids = get_all_rht_ids ( rht_cursor , tablename ) p_planck_flatprior_fn = <str> psi_planck_flatprior_fn = <str> p_planck_flatprior = hp . fitsfunc . read_map ( p_planck_flatprior_fn ) psi_planck_flatprior = hp . fitsfunc . read_map ( psi_planck_flatprior_fn ) pMLmap_fn = <str> psiMLmap_fn = <str> p_planckRHT_ML = hp . fitsfunc . read_map ( pMLmap_fn ) psi_planckRHT_ML = hp . fitsfunc . read_map ( psiMLmap_fn ) planck353_fn = <str> planckT , planckQ , planckU = hp . fitsfunc . read_map ( planck353_fn , field = ( 0 , 1 , 2 ) ) psi = np . mod ( 0.5 * np . arctan2 ( planckU , planckQ ) , np . pi ) planckp_orig = np . sqrt ( planckQ ** 2 + planckU ** 2 ) / planckT RHT_TQU_Gal_fn = <str> RHT_T_Gal , QRHT , URHT = hp . fitsfunc . read_map ( RHT_TQU_Gal_fn , field = ( 0 , 1 , 2 ) ) intrhtmask = np . zeros ( RHT_T_Gal . shape ) intrhtmask [ RHT_T_Gal > 0.5 ] = 1 theta_rht = np . mod ( 0.5 * np . arctan2 ( URHT , QRHT ) , np . pi ) RHT_TQU_Gal_fn_2 = <str> RHT_T_Gal2 , QRHT2 , URHT2 = hp . fitsfunc . read_map ( RHT_TQU_Gal_fn_2 , field = ( 0 , 1 , 2 ) ) intrhtmask2 = np . zeros ( RHT_T_Gal2 . shape ) intrhtmask2 [ RHT_T_Gal2 > 0.5 ] = 1 theta_rht2 = np . mod ( 0.5 * np . arctan2 ( URHT2 , QRHT2 ) , np . pi ) psi_prior_MB = hp . fitsfunc . read_map ( <str> ) psi_prior_smalloffset = hp . fitsfunc . read_map ( <str> ) preroll_thetas = hp . fitsfunc . read_map ( <str> ) postroll_thetas = hp . fitsfunc . read_map ( <str> ) planckpsi , planckpsiplot = nonzero_data ( psi , mask = intrhtmask , samesize = True ) rhtpsi , rhtpsiplot = nonzero_data ( theta_rht , mask = intrhtmask , samesize = True ) planckp , planckpplot = nonzero_data ( planckp_orig , mask = intrhtmask , samesize = True ) planckRHTpriorpsi , planckRHTpriorpsiplot = nonzero_data ( psi_planckRHT_ML , mask = intrhtmask , samesize = True ) planckRHTpriorp , planckRHTpriorpplot = nonzero_data ( p_planckRHT_ML , mask = intrhtmask , samesize = True ) psi_prior_MB , psi_prior_MBplot = nonzero_data ( psi_prior_MB , mask = intrhtmask , samesize = True ) psi_prior_smalloffset , psi_prior_smalloffsetplot = nonzero_data ( psi_prior_smalloffset , mask = intrhtmask , samesize = True ) preroll_thetas , preroll_thetasplot = nonzero_data ( preroll_thetas , mask = intrhtmask , samesize = True ) postroll_thetas , postroll_thetasplot = nonzero_data ( postroll_thetas , mask = intrhtmask , samesize = True ) planckpsi_zero = copy . copy ( planckpsiplot ) planckpsi_zero [ np . where ( np . isnan ( planckpsiplot ) ) ] = 0.0 rawindices = np . nonzero ( planckpsi_zero ) psi_planck_flatprior_mask = copy . copy ( psi_planck_flatprior ) psi_planck_flatprior_mask [ np . where ( np . isnan ( planckpsiplot ) == True ) ] = None p_planck_flatprior_mask = copy . copy ( p_planck_flatprior ) p_planck_flatprior_mask [ np . where ( np . isnan ( planckpsiplot ) == True ) ] = None sigpGsq = hp . fitsfunc . read_map ( <str> ) sigpGsq_0_indx = np . where ( sigpGsq == 0 ) sigpGsq [ sigpGsq_0_indx ] = None sigpGsq [ np . where ( np . isnan ( planckpsiplot ) == True ) ] = None planckpsiplot [ sigpGsq_0_indx ] = None psi_planck_flatprior_mask [ sigpGsq_0_indx ] = None planckpplot [ sigpGsq_0_indx ] = None p_planck_flatprior_mask [ sigpGsq_0_indx ] = None planckRHTpriorpsiplot [ sigpGsq_0_indx ] = None planckRHTpriorpplot [ sigpGsq_0_indx ] = None psi_prior_MBplot [ sigpGsq_0_indx ] = None psi_prior_smalloffsetplot [ sigpGsq_0_indx ] = None preroll_thetasplot [ sigpGsq_0_indx ] = None postroll_thetasplot [ sigpGsq_0_indx ] = None sigpG = np . sqrt ( sigpGsq ) p_over_sigma = planckpplot / sigpG p_over_sigma_lt_1 = np . where ( p_over_sigma < 1 ) p_over_sigma_gt_1_lt_2 = np . where ( ( p_over_sigma > 1 ) & ( p_over_sigma < 2 ) ) p_over_sigma_gt_2 = np . where ( p_over_sigma > 2 ) Nside = 2048 Npix = 12 * Nside ** 2 indices_allids = np . zeros ( Npix , np . int_ ) indices_planck = np . zeros ( Npix , np . int_ ) allids_ring = hp . pixelfunc . nest2ring ( Nside , allids ) indices_allids_ring = np . zeros ( Npix , np . int_ ) indices_allids_ring [ allids_ring ] = 1 indices_allids [ allids ] = 1 indices_planck [ rawindices ] = 1 id_ring = 18691216 id = hp . pixelfunc . ring2nest ( Nside , id_ring ) pp = Posterior ( id , rht_cursor = rht_cursor , adaptivep0 = False ) pp_adaptive = Posterior ( id , rht_cursor = rht_cursor , adaptivep0 = True ) axs = plot_all_bayesian_components_from_posterior ( pp , returnax = True ) rht_data = pp . prior_obj . rht_data sample_psi0 = pp . prior_obj . sample_psi0 QRHT_from_proj_bins = np . sum ( np . cos ( 2 * sample_psi0 ) * rht_data ) URHT_from_proj_bins = np . sum ( np . sin ( 2 * sample_psi0 ) * rht_data ) theta_rht_from_proj_bins = np . mod ( 0.5 * np . arctan2 ( URHT_from_proj_bins , QRHT_from_proj_bins ) , np . pi ) posterior_is_prior = copy . copy ( pp ) posterior_is_prior . normed_posterior = pp . normed_prior MB_p_prior , MB_psi_prior = mean_bayesian_posterior ( posterior_is_prior ) MB_p_posterior , MB_psi_posterior = mean_bayesian_posterior ( pp ) MB_p_posterior_adaptive , MB_psi_posterior_adaptive = mean_bayesian_posterior ( pp_adaptive ) planckposterior = PlanckPosterior ( id , planck_tqu_cursor , planck_cov_cursor , pp . sample_p0 , pp . sample_psi0 , adaptivep0 = False ) planckposterior_adaptive = PlanckPosterior ( id , planck_tqu_cursor , planck_cov_cursor , pp . sample_p0 , pp . sample_psi0 , adaptivep0 = True ) MB_p_planckonly , MB_psi_planckonly = mean_bayesian_posterior ( planckposterior ) MB_p_planckonly_adaptive , MB_psi_planckonly_adaptive = mean_bayesian_posterior ( planckposterior_adaptive ) print ( <str> . format ( planckpsiplot [ id_ring ] ) ) print ( <str> . format ( pp . naive_psi ) ) print ( <str> . format ( MB_psi_planckonly ) ) print ( <str> . format ( MB_psi_planckonly_adaptive ) ) print ( <str> . format ( MB_psi_posterior ) ) print ( <str> . format ( MB_psi_posterior_adaptive ) ) print ( <str> . format ( theta_rht [ id_ring ] ) ) print ( <str> . format ( MB_psi_prior ) ) print ( <str> . format ( planckpplot [ id_ring ] ) ) print ( <str> . format ( pp . pmeas ) ) print ( <str> . format ( MB_p_planckonly ) ) print ( <str> . format ( MB_p_planckonly_adaptive ) ) print ( <str> . format ( MB_p_posterior ) ) print ( <str> . format ( MB_p_posterior_adaptive ) ) axs = plot_all_bayesian_components_from_posterior ( posterior_is_prior , returnax = True ) axs [ 2 ] . plot ( MB_p_prior , MB_psi_prior , <str> , color = <str> ) axs [ 2 ] . plot ( MB_p_prior , theta_rht [ id_ring ] , <str> , color = <str> ) print ( len ( planckpplot [ ~ np . isnan ( planckpplot ) ] ) , len ( p_planck_flatprior_mask [ ~ np . isnan ( p_planck_flatprior_mask ) ] ) ) plt . figure ( ) plt . hist ( p_planck_flatprior_mask [ ~ np . isnan ( p_planck_flatprior_mask ) ] , bins = 100 , histtype = <str> , range = ( - 0.5 , 2.0 ) ) plt . hist ( planckpplot [ ~ np . isnan ( planckpplot ) ] , bins = 100 , histtype = <str> , range = ( - 0.5 , 2.0 ) ) plt . legend ( [ <str> , <str> ] ) plt . title ( <str> ) plt . figure ( ) plt . hist ( psi_planck_flatprior_mask [ ~ np . isnan ( psi_planck_flatprior_mask ) ] , bins = 100 , histtype = <str> ) plt . hist ( planckpsiplot [ ~ np . isnan ( planckpsiplot ) ] , bins = 100 , histtype = <str> ) plt . hist ( planckRHTpriorpsiplot [ ~ np . isnan ( planckRHTpriorpsiplot ) ] , bins = 100 , histtype = <str> ) plt . legend ( [ <str> , <str> , <str> ] ) plt . title ( <str> ) plt . figure ( ) plt . hist ( rhtpsiplot [ ~ np . isnan ( rhtpsiplot ) ] , bins = 100 , histtype = <str> ) plt . hist ( psi_prior_MBplot [ ~ np . isnan ( psi_prior_MBplot ) ] , bins = 100 , histtype = <str> ) plt . hist ( psi_prior_smalloffsetplot [ ~ np . isnan ( psi_prior_smalloffsetplot ) ] , bins = 100 , histtype = <str> ) plt . hist ( preroll_thetasplot [ ~ np . isnan ( preroll_thetasplot ) ] , bins = 100 , histtype = <str> ) plt . legend ( [ <str> , <str> , <str> , <str> ] ) plt . figure ( ) plt . hist ( sigpGsq [ ~ np . isnan ( sigpGsq ) ] , bins = 100 , histtype = <str> , range = ( 0 , 1 ) ) plt . hist ( planckpplot [ ~ np . isnan ( planckpplot ) ] / sigpG [ ~ np . isnan ( sigpG ) ] , bins = 100 , histtype = <str> ) fig = plt . figure ( ) hp . mollview ( p_planck_flatprior_mask , sub = ( 222 ) , title = <str> ) hp . mollview ( planckpplot , sub = ( 221 ) , title = <str> ) hp . mollview ( psi_planck_flatprior_mask , sub = ( 224 ) , title = <str> ) hp . mollview ( planckpsiplot , sub = ( 223 ) , title = <str> ) fig = plt . figure ( ) ax1 = fig . add_subplot ( 131 ) ax2 = fig . add_subplot ( 132 ) ax3 = fig . add_subplot ( 133 ) histrange = ( - 0.1 , 2.0 ) ax1 . hist ( planckpplot [ p_over_sigma_lt_1 ] , bins = 100 , histtype = <str> , range = histrange ) ax1 . hist ( p_planck_flatprior_mask [ p_over_sigma_lt_1 ] , bins = 100 , histtype = <str> , range = histrange ) ax2 . hist ( planckpplot [ p_over_sigma_gt_1_lt_2 ] , bins = 100 , histtype = <str> , range = histrange ) ax2 . hist ( p_planck_flatprior_mask [ p_over_sigma_gt_1_lt_2 ] , bins = 100 , histtype = <str> , range = histrange ) ax3 . hist ( planckpplot [ p_over_sigma_gt_2 ] , bins = 100 , histtype = <str> , range = histrange ) ax3 . hist ( p_planck_flatprior_mask [ p_over_sigma_gt_2 ] , bins = 100 , histtype = <str> , range = histrange ) ax3 . legend ( [ <str> , <str> ] ) ax1 . title ( <str> ) ax2 . title ( <str> ) ax3 . title ( <str> )  