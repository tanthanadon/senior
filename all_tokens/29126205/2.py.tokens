from __future__ import division , print_function import numpy as np import healpy as hp from bayesian_machinery import * from plot_map_outcomes import nonzero_data from astropy . io import fits import rht_to_planck sys . path . insert ( 0 , <str> ) import cutouts hp0orig = fits . getdata ( <str> ) hp0new = fits . getdata ( <str> ) y_pos = 112 x_pos = 5171 stb_root = <str> galfa_fn = stb_root + <str> gg = fits . getdata ( galfa_fn ) galfa_hdr = fits . getheader ( galfa_fn ) rht_data_unproj = np . zeros ( 165 ) rht_data_proj = np . zeros ( 165 ) for _i in np . arange ( 165 ) :      singlethet_fn = stb_root + <str> + str ( _i ) + <str> singlethet_data = fits . getdata ( singlethet_fn ) rht_data_unproj [ _i ] = singlethet_data [ y_pos , x_pos ]  thet0data = fits . getdata ( stb_root + <str> ) allsky_zeros = np . zeros ( gg . shape ) allsky_zeros [ : , : ] = None allsky_zeros [ y_pos , x_pos ] = thet0data [ y_pos , x_pos ] allsky_zeros_block = copy . copy ( allsky_zeros ) radblock = 2 allsky_zeros_block [ y_pos - radblock : y_pos + radblock , x_pos - radblock : x_pos + radblock ] = thet0data [ y_pos - radblock : y_pos + radblock , x_pos - radblock : x_pos + radblock ] allsky_zeros_hp_Gal_none , allsky_zeros_hp_Gal_hdr = rht_to_planck . interpolate_data_to_hp_galactic ( allsky_zeros , galfa_hdr , nonedata = None ) rht_cursor , tablename = get_rht_cursor ( region = <str> ) id = np . int ( np . where ( allsky_zeros_hp_Gal_none > 0 ) [ 0 ] ) pp = Posterior ( id , rht_cursor = rht_cursor , adaptivep0 = False ) thets_unproj = rht_to_planck . get_thets ( 75 ) plt . figure ( ) plt . plot ( thets_unproj , rht_data_unproj ) plt . plot ( pp . prior_obj . sample_psi0 , pp . prior_obj . rht_data ) plt . legend ( [ <str> , <str> ] ) plt . xlabel ( <str> ) print ( hp0orig [ id ] , hp0new [ id ] , allsky_zeros_hp_Gal_none [ id ] , thet0data [ y_pos , x_pos ] , allsky_zeros_block_hp_Gal_none [ id ] ) print ( pp . prior_obj . unrolled_rht_data [ 0 ] , pp . prior_obj . rht_data [ 0 ] , rht_data_unproj [ 0 ] )   