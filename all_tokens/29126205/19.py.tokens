from __future__ import division import glob import numpy as np import cPickle import time import copy import os . path import cPickle as pickle from astropy . io import fits from astropy import wcs from scipy import ndimage import astropy . coordinates as coord from astropy . coordinates import SkyCoord from astropy import units as u import sqlite3 import healpy as hp import itertools import string from reproject import reproject_interp path_to_galfa_cubes = <str> path_to_rht_thetaslices = <str> galfa_cube_name = <str> galfa_cube_fn = path_to_galfa_cubes + galfa_cube_name + <str> galfa_cube_data = fits . getdata ( galfa_cube_fn ) galfa_cube_hdr = fits . getheader ( galfa_cube_fn ) nthets = 165 rht_data_cube = np . zeros ( ( nthets , galfa_cube_hdr [ <str> ] , galfa_cube_hdr [ <str> ] ) , np . float_ ) new_header = fits . getheader ( galfa_cube_fn ) new_header . remove ( <str> ) new_header . remove ( <str> ) new_header . remove ( <str> ) new_header . remove ( <str> ) new_header . remove ( <str> ) new_header . remove ( <str> ) new_header [ <str> ] = 2 for thet_i in xrange ( nthets ) :      allsky_fn = path_to_rht_thetaslices + <str> + str ( thet_i ) + <str> allsky_thetaslice_data = fits . getdata ( allsky_fn ) allsky_thetaslice_hdr = fits . getheader ( allsky_fn ) allsky_thetaslice_hdr_new = copy . copy ( allsky_thetaslice_hdr ) allsky_thetaslice_hdr_new [ <str> ] = <str> allsky_thetaslice_hdr_new [ <str> ] = <str> output0 , footprint0 = reproject_interp ( ( allsky_thetaslice_data , allsky_thetaslice_hdr ) , allsky_thetaslice_hdr_new ) print ( <str> , thet_i ) output , footprint = reproject_interp ( ( allsky_thetaslice_data , allsky_thetaslice_hdr ) , new_header ) rht_data_cube [ thet_i , : , : ] = output  new_hdr = copy . copy ( galfa_cube_hdr ) new_hdr [ <str> ] = nthets new_hdr [ <str> ] = <str> new_hdr [ <str> ] = 0.000000 new_hdr [ <str> ] = 0.000000 new_hdr [ <str> ] = np . pi / nthets out_fn = path_to_galfa_cubes + galfa_cube_name + <str> fits . writeto ( out_fn , rht_data_cube , header = new_hdr )  