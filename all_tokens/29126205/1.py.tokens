from __future__ import division , print_function import numpy as np import sys import matplotlib . pyplot as plt import matplotlib import pyfits import healpy as hp import pylab from matplotlib import rc rc ( <str> , usetex = True ) class XcorrData ( ) :      def __init__ ( self , fn ) :          self . fn = fn self . data = np . loadtxt ( self . fn ) self . ell = self . data [ : , 0 ] self . EE = self . data [ : , 1 ] self . EE_err = self . data [ : , 2 ] self . BB = self . data [ : , 3 ] self . BB_err = self . data [ : , 4 ]   fn_prefix = <str> fn_suffix = <str> fn_suffix2 = <str> testname = <str> planckdataname = <str> AvMname = <str> testname2 = <str> testname3 = <str> RHT_data_fn = <str> + fn_prefix + testname + fn_suffix Planck_data_fn = <str> + fn_prefix + planckdataname + fn_suffix RHT_data_fn_AvM = <str> + fn_prefix + AvMname + fn_suffix RHT_data_fn_2 = <str> + fn_prefix + testname2 + fn_suffix RHT_data_fn_3 = <str> + fn_prefix + testname3 + fn_suffix RawPlanck_fn = <str> RHTdata = XcorrData ( RHT_data_fn ) Planckdata = XcorrData ( Planck_data_fn ) RHTdataAvM = XcorrData ( RHT_data_fn_AvM ) RawPlanckdata = XcorrData ( RawPlanck_fn ) RHTdata2 = XcorrData ( RHT_data_fn_2 ) fig = plt . figure ( figsize = ( 10 , 8 ) , facecolor = <str> ) ax = fig . add_subplot ( 111 ) ellnudge = 0.05 p1 = ax . errorbar ( Planckdata . ell * ( 1 - 2 * ellnudge ) , Planckdata . EE , yerr = [ Planckdata . EE_err , Planckdata . EE_err ] , ms = 7 , fmt = <str> , markerfacecolor = <str> , mec = <str> , ecolor = <str> , elinewidth = 2 , capsize = 0 , capthick = 2 , label = <str> ) p2 = ax . errorbar ( RawPlanckdata . ell * ( 1 + - 1 * ellnudge ) , RawPlanckdata . EE , yerr = [ RawPlanckdata . EE_err , RawPlanckdata . EE_err ] , ms = 7 , fmt = <str> , markerfacecolor = <str> , mec = <str> , ecolor = <str> , elinewidth = 2 , capsize = 0 , capthick = 2 , label = <str> ) p3 = ax . errorbar ( RHTdata . ell * ( 1 + 0 * ellnudge ) , RHTdata . EE , yerr = [ RHTdata . EE_err , RHTdata . EE_err ] , ms = 7 , fmt = <str> , markerfacecolor = <str> , mec = <str> , ecolor = <str> , elinewidth = 2 , capsize = 0 , capthick = 2 , label = <str> ) p4 = ax . errorbar ( RHTdata2 . ell * ( 1 + 1 * ellnudge ) , RHTdata2 . EE , yerr = [ RHTdata2 . EE_err , RHTdata2 . EE_err ] , ms = 7 , fmt = <str> , markerfacecolor = <str> , mec = <str> , ecolor = <str> , elinewidth = 2 , capsize = 0 , capthick = 2 , label = <str> ) p5 = ax . errorbar ( RHTdataAvM . ell * ( 1 + 2 * ellnudge ) , RHTdataAvM . EE , yerr = [ RHTdataAvM . EE_err , RHTdataAvM . EE_err ] , ms = 7 , fmt = <str> , markerfacecolor = <str> , mec = <str> , ecolor = <str> , elinewidth = 2 , capsize = 0 , capthick = 2 , label = <str> ) p6 = ax . errorbar ( Planckdata . ell * ( 1 - 2 * ellnudge ) , Planckdata . BB , yerr = [ Planckdata . BB_err , Planckdata . BB_err ] , ms = 7 , fmt = <str> , markerfacecolor = <str> , mec = <str> , ecolor = <str> , elinewidth = 2 , capsize = 0 , capthick = 2 , label = <str> ) p7 = ax . errorbar ( RawPlanckdata . ell * ( 1 + - 1 * ellnudge ) , RawPlanckdata . BB , yerr = [ RawPlanckdata . BB_err , RawPlanckdata . BB_err ] , ms = 7 , fmt = <str> , markerfacecolor = <str> , mec = <str> , ecolor = <str> , elinewidth = 2 , capsize = 0 , capthick = 2 , label = <str> ) p8 = ax . errorbar ( RHTdata . ell * ( 1 + 0 * ellnudge ) , RHTdata . BB , yerr = [ RHTdata . BB_err , RHTdata . BB_err ] , ms = 7 , fmt = <str> , markerfacecolor = <str> , mec = <str> , ecolor = <str> , elinewidth = 2 , capsize = 0 , capthick = 2 , label = <str> ) p9 = ax . errorbar ( RHTdata2 . ell * ( 1 + 1 * ellnudge ) , RHTdata2 . BB , yerr = [ RHTdata2 . BB_err , RHTdata2 . BB_err ] , ms = 7 , fmt = <str> , markerfacecolor = <str> , mec = <str> , ecolor = <str> , elinewidth = 2 , capsize = 0 , capthick = 2 , label = <str> ) p10 = ax . errorbar ( RHTdataAvM . ell * ( 1 + 2 * ellnudge ) , RHTdataAvM . BB , yerr = [ RHTdataAvM . BB_err , RHTdataAvM . BB_err ] , ms = 7 , fmt = <str> , markerfacecolor = <str> , mec = <str> , ecolor = <str> , elinewidth = 2 , capsize = 0 , capthick = 2 , label = <str> ) ax . tick_params ( labelsize = 15 ) ax . semilogx ( ) ax . grid ( color = <str> ) ax . axhline ( y = 0.0 , color = <str> , lw = 1.0 ) box = ax . get_position ( ) ax . set_position ( [ box . x0 , box . y0 , box . width * 0.8 , box . height ] ) legenditems = [ p1 , p2 , p3 , p4 , p5 , p6 , p7 , p8 , p9 , p10 ] labelitems = [ p . get_label ( ) for p in legenditems ] legendappear = [ p1 , p2 , p3 , p4 , p5 , matplotlib . lines . Line2D ( [ ] , [ ] , linestyle = <str> ) , p6 , p7 , p8 , p9 , p10 ] labelappear = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] ax . legend ( legendappear , labelappear , numpoints = 1 , ncol = 1 , fancybox = True , borderpad = 0.5 , bbox_to_anchor = ( 1.32 , 1.0 ) , frameon = False ) ax . set_xlim ( 40.0 , 1000.0 ) ax . set_xlabel ( <str> , fontsize = 18 ) ax . set_ylabel ( <str> , fontsize = 18 ) plt . title ( <str> , size = 20 )   