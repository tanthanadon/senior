import pygtk pygtk . require ( <str> ) import gtk pixmap = None def configure_event ( widget , event ) :      global pixmap x , y , width , height = widget . get_allocation ( ) pixmap = gtk . gdk . Pixmap ( widget . window , width , height ) pixmap . draw_rectangle ( widget . get_style ( ) . white_gc , True , 0 , 0 , width , height ) return True  def expose_event ( widget , event ) :      x , y , width , height = event . area widget . window . draw_drawable ( widget . get_style ( ) . fg_gc [ gtk . STATE_NORMAL ] , pixmap , x , y , x , y , width , height ) return False  def draw_brush ( widget , x , y ) :      rect = ( int ( x - 5 ) , int ( y - 5 ) , 10 , 10 ) pixmap . draw_rectangle ( widget . get_style ( ) . black_gc , True , rect [ 0 ] , rect [ 1 ] , rect [ 2 ] , rect [ 3 ] ) widget . queue_draw_area ( rect [ 0 ] , rect [ 1 ] , rect [ 2 ] , rect [ 3 ] )  def button_press_event ( widget , event ) :      if event . button == 1 and pixmap != None :          draw_brush ( widget , event . x , event . y )  return True  def motion_notify_event ( widget , event ) :      if event . is_hint :          x , y , state = event . window . get_pointer ( )  else :          x = event . x y = event . y state = event . state  if state & gtk . gdk . BUTTON1_MASK and pixmap != None :          draw_brush ( widget , x , y )  return True  def main ( ) :      window = gtk . Window ( gtk . WINDOW_TOPLEVEL ) window . set_name ( <str> ) vbox = gtk . VBox ( False , 0 ) window . add ( vbox ) vbox . show ( ) window . connect ( <str> , lambda w : gtk . main_quit ( ) ) drawing_area = gtk . DrawingArea ( ) drawing_area . set_size_request ( 600 , 600 ) vbox . pack_start ( drawing_area , True , True , 0 ) drawing_area . show ( ) drawing_area . connect ( <str> , expose_event ) drawing_area . connect ( <str> , configure_event ) drawing_area . connect ( <str> , motion_notify_event ) drawing_area . connect ( <str> , button_press_event ) drawing_area . set_events ( gtk . gdk . EXPOSURE_MASK | gtk . gdk . LEAVE_NOTIFY_MASK | gtk . gdk . BUTTON_PRESS_MASK | gtk . gdk . POINTER_MOTION_MASK | gtk . gdk . POINTER_MOTION_HINT_MASK ) button = gtk . Button ( <str> ) vbox . pack_start ( button , False , False , 0 ) button . connect_object ( <str> , lambda w : w . destroy ( ) , window ) button . show ( ) window . show ( ) gtk . main ( ) return 0  if __name__ == <str> :      main ( )   