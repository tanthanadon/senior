import sys sys . path . append ( <str> ) from ch . systemsx . cisd . openbis . generic . shared . api . v1 . dto import SearchCriteria from java . lang import Byte from java . io import FileInputStream from java . io import File import jarray def getByteArray ( fileUrl ) :    file = File ( fileUrl ) ; inputStream = FileInputStream ( file ) length = file . length ( ) bytes = jarray . zeros ( length , <str> ) offset = 0 numRead = 0 while offset < length :        if numRead >= 0 :            print numRead numRead = inputStream . read ( bytes , offset , length - offset ) offset = offset + numRead   return bytes  def attach ( name , file , sample ) :    bytes = getByteArray ( file ) sample . addAttachment ( file , name , <str> , bytes )  def process ( tr , parameters , tableBuilder ) :    print parameters if <str> in parameters :      tr . setUserId ( parameters . get ( <str> ) )  sampleCode = parameters . get ( <str> ) search_service = tr . getSearchService ( ) sc = SearchCriteria ( ) sc . addMatchClause ( SearchCriteria . MatchClause . createAttributeMatch ( SearchCriteria . MatchClauseAttribute . CODE , sampleCode ) ) foundSamples = search_service . searchForSamples ( sc ) if ( foundSamples . size ( ) < 1 ) :      proj = parameters . get ( <str> ) space = parameters . get ( <str> ) sampleType = parameters . get ( <str> ) sampleId = <str> + space + <str> + sampleCode sample = tr . createNewSample ( sampleId , sampleType ) exp = <str> + space + <str> + proj + <str> + parameters . get ( <str> ) exp = tr . getExperiment ( exp ) sample . setExperiment ( exp ) if parameters . get ( <str> ) :        sample . setPropertyValue ( <str> , parameters . get ( <str> ) )  if parameters . get ( <str> ) :        sample . setParentSampleIdentifiers ( parameters . get ( <str> ) )  if parameters . get ( <str> ) :        properties = parameters . get ( <str> ) for prop in properties . keySet ( ) :          sample . setPropertyValue ( prop , properties . get ( prop ) )      