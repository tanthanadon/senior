from ch . systemsx . cisd . openbis . generic . shared . api . v1 . dto . SearchCriteria import MatchClause from ch . systemsx . cisd . openbis . generic . shared . api . v1 . dto . SearchCriteria import MatchClauseAttribute from ch . systemsx . cisd . openbis . generic . shared . api . v1 . dto import SearchCriteria CODE = <str> EXTERNAL_ID = <str> SECONDARY_NAME = <str> XML = <str> def aggregate ( parameters , tableBuilder ) : 	 codes = parameters . get ( <str> ) tableBuilder . addHeader ( CODE ) tableBuilder . addHeader ( EXTERNAL_ID ) tableBuilder . addHeader ( SECONDARY_NAME ) tableBuilder . addHeader ( XML ) for code in codes : 		 sc = SearchCriteria ( ) sc . addMatchClause ( SearchCriteria . MatchClause . createAttributeMatch ( SearchCriteria . MatchClauseAttribute . CODE , code ) ) sample = searchService . searchForSamples ( sc ) [ 0 ] row = tableBuilder . addRow ( ) row . setCell ( CODE , sample . getCode ( ) ) row . setCell ( EXTERNAL_ID , sample . getPropertyValue ( <str> ) ) row . setCell ( SECONDARY_NAME , sample . getPropertyValue ( <str> ) ) row . setCell ( XML , sample . getPropertyValue ( <str> ) )    