DATA_SOURCE = <str> QUERY = DATA_SET_CODE = <str> RELATIVE_PATH = <str> FILE_NAME = <str> SIZE_IN_BYTES = <str> FOLDER = <str> LAST_MODIFIED = <str> def aggregate ( parameters , tableBuilder ) :      codes = parameters . get ( <str> ) tableBuilder . addHeader ( DATA_SET_CODE ) tableBuilder . addHeader ( RELATIVE_PATH ) tableBuilder . addHeader ( FILE_NAME ) tableBuilder . addHeader ( SIZE_IN_BYTES ) tableBuilder . addHeader ( FOLDER ) tableBuilder . addHeader ( LAST_MODIFIED ) for code in codes :          results = queryService . select ( DATA_SOURCE , QUERY , [ code ] ) for r in results :              if not r . get ( <str> . lower ( ) ) in [ <str> , <str> ] : 		 row = tableBuilder . addRow ( ) folder = <str> splt = r . get ( <str> . lower ( ) ) . split ( <str> ) if len ( splt ) > 1 : 			 folder = splt [ - 2 ]  row . setCell ( DATA_SET_CODE , r . get ( <str> . lower ( ) ) ) row . setCell ( RELATIVE_PATH , r . get ( <str> . lower ( ) ) ) row . setCell ( FILE_NAME , r . get ( <str> . lower ( ) ) ) row . setCell ( SIZE_IN_BYTES , r . get ( <str> . lower ( ) ) ) row . setCell ( FOLDER , folder ) row . setCell ( LAST_MODIFIED , r . get ( <str> . lower ( ) ) )   results . close ( )    