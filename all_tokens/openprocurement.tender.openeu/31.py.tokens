def put_tender_complaint_document ( self ) :      response = self . app . post ( <str> . format ( self . tender_id , self . complaint_id , self . complaint_owner_token ) , upload_files = [ ( <str> , <str> , <str> ) ] ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) doc_id = response . json [ <str> ] [ <str> ] self . assertIn ( doc_id , response . headers [ <str> ] ) response = self . app . put ( <str> . format ( self . tender_id , self . complaint_id , doc_id , self . complaint_owner_token ) , status = 404 , upload_files = [ ( <str> , <str> , <str> ) ] ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( response . json [ <str> ] , <str> ) self . assertEqual ( response . json [ <str> ] , [ { <str> : <str> , <str> : <str> , <str> : <str> } ] ) response = self . app . put ( <str> . format ( self . tender_id , self . complaint_id , doc_id , self . tender_token ) , upload_files = [ ( <str> , <str> , <str> ) ] , status = 403 ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( response . json [ <str> ] [ 0 ] [ <str> ] , <str> ) response = self . app . put ( <str> . format ( self . tender_id , self . complaint_id , doc_id , self . complaint_owner_token ) , upload_files = [ ( <str> , <str> , <str> ) ] ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( doc_id , response . json [ <str> ] [ <str> ] ) key = response . json [ <str> ] [ <str> ] . split ( <str> ) [ - 1 ] response = self . app . get ( <str> . format ( self . tender_id , self . complaint_id , doc_id , key ) ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( response . content_length , 8 ) self . assertEqual ( response . body , <str> ) response = self . app . get ( <str> . format ( self . tender_id , self . complaint_id , doc_id ) ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( doc_id , response . json [ <str> ] [ <str> ] ) self . assertEqual ( <str> , response . json [ <str> ] [ <str> ] ) response = self . app . put ( <str> . format ( self . tender_id , self . complaint_id , doc_id , self . complaint_owner_token ) , <str> , content_type = <str> ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( doc_id , response . json [ <str> ] [ <str> ] ) key = response . json [ <str> ] [ <str> ] . split ( <str> ) [ - 1 ] response = self . app . get ( <str> . format ( self . tender_id , self . complaint_id , doc_id , key ) ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( response . content_length , 8 ) self . assertEqual ( response . body , <str> ) response = self . app . patch_json ( <str> . format ( self . tender_id , self . complaint_id , self . complaint_owner_token ) , { <str> : { <str> : <str> , } } ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . json [ <str> ] [ <str> ] , <str> ) response = self . app . put ( <str> . format ( self . tender_id , self . complaint_id , doc_id , self . complaint_owner_token ) , <str> , content_type = <str> ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) key = response . json [ <str> ] [ <str> ] . split ( <str> ) [ - 1 ] response = self . app . get ( <str> . format ( self . tender_id , self . complaint_id , doc_id , key ) ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( response . content_length , 8 ) self . assertEqual ( response . body , <str> ) self . set_status ( <str> ) response = self . app . put ( <str> . format ( self . tender_id , self . complaint_id , doc_id , self . complaint_owner_token ) , upload_files = [ ( <str> , <str> , <str> ) ] , status = 403 ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( response . json [ <str> ] [ 0 ] [ <str> ] , <str> )   