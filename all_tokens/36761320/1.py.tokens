from himlarcli import tests as tests tests . is_virtual_env ( ) from himlarcli . keystone import Keystone from himlarcli . parser import Parser from himlarcli . printer import Printer from himlarcli import utils as himutils parser = Parser ( ) options = parser . parse_args ( ) printer = Printer ( options . format ) ksclient = Keystone ( options . config , debug = options . debug ) ksclient . set_dry_run ( options . dry_run ) ksclient . set_domain ( options . domain ) logger = ksclient . get_logger ( ) if hasattr ( options , <str> ) :      regions = ksclient . find_regions ( region_name = options . region )  else :      regions = ksclient . find_regions ( )  if not regions :      himutils . sys_error ( <str> )  def action_grant ( ) :      users = ksclient . list_roles ( project_name = options . project ) for user in users :          if user [ <str> ] is not <str> :              ksclient . grant_role ( email = user [ <str> ] , project_name = options . project , role_name = <str> )    def action_revoke ( ) :      project = ksclient . get_project_by_name ( project_name = options . project ) if not project :          himutils . sys_error ( <str> % options . project )  users = ksclient . get_users ( domain = options . domain , project = project . id ) emails = list ( ) for user in users :          emails . append ( user . email )  ksclient . revoke_role ( emails = emails , project_name = project . name , role_name = <str> )  action = locals ( ) . get ( <str> + options . action ) if not action :      himutils . sys_error ( <str> % options . action )  action ( )  