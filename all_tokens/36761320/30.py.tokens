import utils import httplib import statsd from himlarcli import utils as himutils import socket desc = <str> options = utils . get_options ( desc , hosts = False , debug = True ) config = himutils . get_config ( options . config ) region = config . get ( <str> , <str> ) logger = himutils . get_logger ( __name__ , config , options . debug ) statsd_server = config . get ( <str> , <str> ) statsd_port = config . get ( <str> , <str> ) prefix = <str> % region statsd = statsd . StatsClient ( statsd_server , statsd_port , prefix = prefix ) services = himutils . load_region_config ( <str> , region = region , log = logger ) for name , check in sorted ( services [ <str> ] . iteritems ( ) ) :      if <str> in check :          timeout = check [ <str> ]  else :          timeout = 10  if check [ <str> ] :          c = httplib . HTTPSConnection ( check [ <str> ] , timeout = timeout )  else :          c = httplib . HTTPConnection ( check [ <str> ] , timeout = timeout )  try :          c . request ( <str> , check [ <str> ] ) response = c . getresponse ( ) status = response . status  except socket . error as e :          logger . debug ( <str> % e ) status = 0  statsd . gauge ( name , status ) if status in check [ <str> ] :          statsd . gauge ( name , 1 ) print <str> % check [ <str> ]  else :          statsd . gauge ( name , 0 ) logger . debug ( <str> % ( name , status ) ) print <str> % check [ <str> ]    