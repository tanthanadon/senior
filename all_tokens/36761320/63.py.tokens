from himlarcli . client import Client from himlarcli import utils import ldap import inspect import re class LdapClient ( Client ) :      def __init__ ( self , config_path , ldap_config = <str> , debug = False , log = None ) :          self . config = utils . get_config ( config_path ) self . logger = utils . get_logger ( __name__ , self . config , debug , log ) self . logger . debug ( <str> % config_path ) self . ldap_config = utils . load_config ( ldap_config , self . logger ) self . debug = debug self . dry_run = False self . org = None self . ldap = None  def bind ( self , org ) :          server = self . get_ldap_config ( org , <str> ) self . org = org try :              self . ldap = ldap . initialize ( server ) self . ldap . simple_bind ( ) self . debug_log ( <str> % server )  except ldap . LDAPError as e :              self . log_error ( <str> % ( server , e . message [ <str> ] ) )   def get_ldap_config ( self , org , option ) :          if org not in self . ldap_config :              self . debug_log ( <str> % org )  if option not in self . ldap_config [ org ] :              self . debug_log ( <str> % ( option , org ) )  return self . ldap_config . get ( org ) . get ( option )  def get_client ( self ) :          return self . ldap  def get_user ( self , email , org = None , attr = None ) :          if not self . ldap :              raise ValueError ( <str> )  base_dn = self . get_ldap_config ( self . org , <str> ) try :              if org and org == <str> and <str> in email :                  user = self . ldap . search_s ( base_dn , ldap . SCOPE_SUBTREE , <str> % email . split ( <str> ) [ 0 ] , attr )  else :                  user = self . ldap . search_s ( base_dn , ldap . SCOPE_SUBTREE , <str> % email , attr )   except ldap . LDAPError as e :              self . log_error ( <str> % ( self . org , e . message [ <str> ] ) , 1 )  return user    