import os import numpy as np import pandas as pd from jaratoolbox import settings from jaratoolbox import extraplots import figparams import matplotlib . pyplot as plt import scipy . stats as stats import matplotlib import matplotlib . gridspec as gridspec from matplotlib . ticker import FormatStrFormatter matplotlib . rcParams [ <str> ] = <str> matplotlib . rcParams [ <str> ] = <str> SAVE_FIGURE = 1 outputDir = <str> figFilename = <str> figFormat = <str> figSize = [ 7 , 7 ] fontSizeLabels = figparams . fontSizeLabels fontSizeTicks = figparams . fontSizeTicks fontSizePanel = figparams . fontSizePanel labelPosX = [ 0.04 , 0.49 ] labelPosY = [ 0.94 , 0.5 ] fig = plt . gcf ( ) fig . clf ( ) fig . set_facecolor ( <str> ) gs = gridspec . GridSpec ( 2 , 2 ) gs . update ( left = 0.15 , right = 0.95 , top = 0.9 , bottom = 0.15 , wspace = 0.6 , hspace = 0.5 ) qualityList = [ 1 , 6 ] ISIcutoff = 0.02 maxZThreshold = 3 maxTroughToPeakTime = 0.4 switchingFilePath = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME ) switchingFileName = <str> switchingFullPath = os . path . join ( switchingFilePath , switchingFileName ) allcells_switching = pd . read_hdf ( switchingFullPath , key = <str> ) psychometricFilePath = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME ) psychometricFileName = <str> psychometricFullPath = os . path . join ( psychometricFilePath , psychometricFileName ) allcells_psychometric = pd . read_hdf ( psychometricFullPath , key = <str> ) goodcells_psychometric = ( allcells_psychometric . cellQuality . isin ( qualityList ) ) & ( allcells_psychometric . ISI <= ISIcutoff ) cellInStr = ( allcells_psychometric . cellInStr == 1 ) keepAfterDupTest = allcells_psychometric . keep_after_dup_test responsiveMidFreqs = ( abs ( allcells_psychometric . maxZSoundMid1 ) >= maxZThreshold ) | ( abs ( allcells_psychometric . maxZSoundMid2 ) >= maxZThreshold ) cellsToPlot_psychometric = allcells_psychometric [ goodcells_psychometric & cellInStr & keepAfterDupTest & responsiveMidFreqs ] trough2peak_psychometric = 1000 * ( cellsToPlot_psychometric . peakKTime - cellsToPlot_psychometric . peakNaTime ) . values trough2peakFilter = ( trough2peak_psychometric <= maxTroughToPeakTime ) trough2peak_psychometric = trough2peak_psychometric [ trough2peakFilter ] trough2peakRatio_psychometric = ( np . abs ( cellsToPlot_psychometric . peakNaAmp / cellsToPlot_psychometric . peakKAmp ) ) . values trough2peakRatio_psychometric = trough2peakRatio_psychometric [ trough2peakFilter ] strongerSoundResMid1 = abs ( cellsToPlot_psychometric . maxZSoundMid1 ) > abs ( cellsToPlot_psychometric . maxZSoundMid2 ) soundModI_psychometric = np . r_ [ cellsToPlot_psychometric . modIndexMid1 [ strongerSoundResMid1 ] . values , cellsToPlot_psychometric . modIndexMid2 [ ~ strongerSoundResMid1 ] . values ] soundModI_psychometric = soundModI_psychometric [ trough2peakFilter ] soundModSig_psychometric = np . r_ [ cellsToPlot_psychometric . modSigMid1 [ strongerSoundResMid1 ] . values , cellsToPlot_psychometric . modSigMid2 [ ~ strongerSoundResMid1 ] . values ] soundModSig_psychometric = soundModSig_psychometric [ trough2peakFilter ] soundModPsychometric = ( soundModSig_psychometric <= 0.05 ) goodcells_switching = ( allcells_switching . cellQuality . isin ( qualityList ) ) & ( allcells_switching . ISI <= ISIcutoff ) cellInStr = ( allcells_switching . cellInStr == 1 ) keepAfterDupTest = allcells_switching . keep_after_dup_test responsiveMidFreqs = abs ( allcells_switching . maxZSoundMid ) >= maxZThreshold cellsToPlot_switching = allcells_switching [ goodcells_switching & cellInStr & keepAfterDupTest & responsiveMidFreqs ] trough2peak_switching = 1000 * ( cellsToPlot_switching . peakKTime - cellsToPlot_switching . peakNaTime ) . values trough2peakFilter = ( trough2peak_switching <= maxTroughToPeakTime ) trough2peak_switching = trough2peak_switching [ trough2peakFilter ] trough2peakRatio_switching = ( np . abs ( cellsToPlot_switching . peakNaAmp ) / np . abs ( cellsToPlot_switching . peakKAmp ) ) . values trough2peakRatio_switching = trough2peakRatio_switching [ trough2peakFilter ] soundModI_switching = cellsToPlot_switching . modIndex . values soundModI_switching = soundModI_switching [ trough2peakFilter ] soundModSig_switching = cellsToPlot_switching . modSig . values soundModSig_switching = soundModSig_switching [ trough2peakFilter ] soundModDir_switching = cellsToPlot_switching . modDir . values soundModDir_switching = soundModDir_switching [ trough2peakFilter ] soundModSwitching = ( soundModSig_switching <= 0.05 ) & ( soundModDir_switching >= 1 ) ax1 = plt . subplot ( gs [ 0 , 0 ] ) ax1 . annotate ( <str> , xy = ( labelPosX [ 0 ] , labelPosY [ 0 ] ) , xycoords = <str> , fontsize = fontSizePanel , fontweight = <str> ) plt . plot ( trough2peak_psychometric , np . abs ( soundModI_psychometric ) , marker = <str> , linestyle = <str> , mec = <str> , mfc = <str> ) plt . plot ( trough2peak_psychometric [ soundModPsychometric ] , np . abs ( soundModI_psychometric [ soundModPsychometric ] ) , marker = <str> , linestyle = <str> , mec = <str> , mfc = <str> ) plt . xlabel ( <str> , fontsize = fontSizeLabels ) plt . ylabel ( <str> , fontsize = fontSizeLabels ) plt . title ( <str> ) plt . xticks ( [ 0.1 , 0.2 , 0.3 , 0.4 ] , [ <str> , <str> , <str> , <str> ] ) plt . ylim ( [ - 0.05 , 0.4 ] ) plt . yticks ( [ 0 , 0.1 , 0.2 , 0.3 , 0.4 ] , [ <str> , <str> , <str> , <str> , <str> ] ) extraplots . boxoff ( plt . gca ( ) ) ax2 = plt . subplot ( gs [ 0 , 1 ] ) ax2 . annotate ( <str> , xy = ( labelPosX [ 1 ] , labelPosY [ 0 ] ) , xycoords = <str> , fontsize = fontSizePanel , fontweight = <str> ) plt . plot ( trough2peakRatio_psychometric , np . abs ( soundModI_psychometric ) , marker = <str> , linestyle = <str> , mec = <str> , mfc = <str> ) plt . plot ( trough2peakRatio_psychometric [ soundModPsychometric ] , np . abs ( soundModI_psychometric [ soundModPsychometric ] ) , marker = <str> , linestyle = <str> , mec = <str> , mfc = <str> ) plt . xlabel ( <str> , fontsize = fontSizeLabels ) plt . ylabel ( <str> , fontsize = fontSizeLabels ) plt . title ( <str> ) ax2 . set_xscale ( <str> ) plt . ylim ( [ - 0.05 , 0.4 ] ) plt . yticks ( [ 0 , 0.1 , 0.2 , 0.3 , 0.4 ] , [ <str> , <str> , <str> , <str> , <str> ] ) ax2 . xaxis . set_ticks_position ( <str> ) extraplots . boxoff ( plt . gca ( ) ) ax3 = plt . subplot ( gs [ 1 , 0 ] ) ax3 . annotate ( <str> , xy = ( labelPosX [ 0 ] , labelPosY [ 1 ] ) , xycoords = <str> , fontsize = fontSizePanel , fontweight = <str> ) plt . plot ( trough2peak_switching , np . abs ( soundModI_switching ) , marker = <str> , linestyle = <str> , mec = <str> , mfc = <str> ) plt . plot ( trough2peak_switching [ soundModSwitching ] , np . abs ( soundModI_switching [ soundModSwitching ] ) , marker = <str> , linestyle = <str> , mec = <str> , mfc = <str> ) plt . xlabel ( <str> , fontsize = fontSizeLabels ) plt . ylabel ( <str> , fontsize = fontSizeLabels ) plt . title ( <str> ) plt . ylim ( [ - 0.05 , 0.4 ] ) plt . yticks ( [ 0 , 0.1 , 0.2 , 0.3 , 0.4 ] , [ <str> , <str> , <str> , <str> , <str> ] ) plt . xticks ( [ 0.1 , 0.2 , 0.3 , 0.4 ] , [ <str> , <str> , <str> , <str> ] ) extraplots . boxoff ( plt . gca ( ) ) ax4 = plt . subplot ( gs [ 1 , 1 ] ) ax4 . annotate ( <str> , xy = ( labelPosX [ 1 ] , labelPosY [ 1 ] ) , xycoords = <str> , fontsize = fontSizePanel , fontweight = <str> ) plt . plot ( trough2peakRatio_switching , np . abs ( soundModI_switching ) , marker = <str> , linestyle = <str> , mec = <str> , mfc = <str> ) plt . plot ( trough2peakRatio_switching [ soundModSwitching ] , np . abs ( soundModI_switching [ soundModSwitching ] ) , marker = <str> , linestyle = <str> , mec = <str> , mfc = <str> ) plt . xlabel ( <str> , fontsize = fontSizeLabels ) plt . ylabel ( <str> , fontsize = fontSizeLabels ) plt . title ( <str> ) ax4 . set_xscale ( <str> ) plt . ylim ( [ - 0.05 , 0.4 ] ) plt . yticks ( [ 0 , 0.1 , 0.2 , 0.3 , 0.4 ] , [ <str> , <str> , <str> , <str> , <str> ] ) ax4 . xaxis . set_ticks_position ( <str> ) extraplots . boxoff ( plt . gca ( ) ) plt . show ( ) print <str> , len ( cellsToPlot_psychometric ) , <str> . format ( sum ( soundModPsychometric ) ) print <str> , len ( cellsToPlot_switching ) , <str> . format ( sum ( soundModSwitching ) ) rPsy1 , pValPsy1 = stats . spearmanr ( trough2peak_psychometric , np . abs ( soundModI_psychometric ) ) print <str> , rPsy1 , <str> , pValPsy1 rPsy2 , pValPsy2 = stats . spearmanr ( trough2peakRatio_psychometric , np . abs ( soundModI_psychometric ) ) print <str> , rPsy2 , <str> , pValPsy2 rSwi , pValSwi = stats . spearmanr ( trough2peak_switching , np . abs ( soundModI_switching ) ) print <str> , rSwi , <str> , pValSwi rSwi2 , pValSwi2 = stats . spearmanr ( trough2peakRatio_switching , np . abs ( soundModI_switching ) ) print <str> , rSwi2 , <str> , pValSwi2 if SAVE_FIGURE :      extraplots . save_figure ( figFilename , figFormat , figSize , outputDir )   