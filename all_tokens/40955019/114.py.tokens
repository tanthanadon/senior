import os import numpy as np from scipy import stats import matplotlib . pyplot as plt import matplotlib . gridspec as gridspec import matplotlib . colors import matplotlib . patches as patches from jaratoolbox import settings from jaratoolbox import extraplots reload ( extraplots ) import figparams reload ( figparams ) FIGNAME = <str> dataDir = os . path . join ( <str> , <str> ) PANELS = [ 1 , 1 ] SAVE_FIGURE = 1 outputDir = <str> figFilename = <str> figFormat = <str> figSize = [ 8 , 4 ] fontSizeLabels = figparams . fontSizeLabels fontSizeTicks = figparams . fontSizeTicks fontSizePanel = figparams . fontSizePanel labelPosX = [ 0.02 , 0.5 ] labelPosY = [ 0.96 ] fig = plt . gcf ( ) fig . clf ( ) fig . set_facecolor ( <str> ) gs = gridspec . GridSpec ( 1 , 2 ) gs . update ( top = 0.95 , bottom = 0.18 , left = 0.1 , right = 0.95 , wspace = 0.5 , hspace = 0.2 ) summaryFileName = <str> if PANELS [ 0 ] :      summaryDataFullPath = os . path . join ( dataDir , summaryFileName ) summaryData = np . load ( summaryDataFullPath ) PVsustainedSuppressionNoLaser = summaryData [ <str> ] PVsustainedSuppressionLaser = summaryData [ <str> ] SOMsustainedSuppressionNoLaser = summaryData [ <str> ] SOMsustainedSuppressionLaser = summaryData [ <str> ] PVsupNoLaser = summaryData [ <str> ] PVsupLaser = summaryData [ <str> ] semPVsupNoLaser = summaryData [ <str> ] semPVsupLaser = summaryData [ <str> ] SOMsupNoLaser = summaryData [ <str> ] SOMsupLaser = summaryData [ <str> ] semSOMsupNoLaser = summaryData [ <str> ] semSOMsupLaser = summaryData [ <str> ] panelLabel = <str> cellLabels = [ <str> , <str> ] PVcolour = figparams . colp [ <str> ] SOMcolour = figparams . colp [ <str> ] cellTypeColours = [ PVcolour , SOMcolour ] axScatter = plt . subplot ( gs [ 0 , 0 ] ) plt . hold ( True ) plt . plot ( [ - 2 , 2 ] , [ - 2 , 2 ] , <str> ) l2 , = plt . plot ( SOMsustainedSuppressionNoLaser , SOMsustainedSuppressionLaser , <str> , color = SOMcolour , mec = <str> , ms = 4 ) plt . errorbar ( SOMsupNoLaser , SOMsupLaser , xerr = [ [ semSOMsupNoLaser , semSOMsupNoLaser ] ] , yerr = [ [ semSOMsupLaser , semSOMsupLaser ] ] , fmt = <str> , ecolor = SOMcolour , capsize = 0 , lw = 2 ) l1 , = plt . plot ( PVsustainedSuppressionNoLaser , PVsustainedSuppressionLaser , <str> , color = PVcolour , mec = <str> , ms = 4 ) plt . errorbar ( PVsupNoLaser , PVsupLaser , xerr = [ [ semPVsupNoLaser , semPVsupNoLaser ] ] , yerr = [ [ semPVsupLaser , semPVsupLaser ] ] , fmt = <str> , ecolor = PVcolour , capsize = 0 , lw = 2 ) plt . ylabel ( <str> , fontsize = fontSizeLabels ) plt . xlabel ( <str> , fontsize = fontSizeLabels ) plt . xlim ( - 0.1 , 1.1 ) plt . ylim ( - 0.1 , 1.1 ) plt . legend ( [ l1 , l2 ] , [ <str> , <str> ] , loc = <str> , fontsize = fontSizeLabels , numpoints = 1 , handlelength = 0.3 ) extraplots . boxoff ( axScatter ) plt . ylabel ( <str> , fontsize = fontSizeLabels ) axScatter . annotate ( panelLabel , xy = ( labelPosX [ 0 ] , labelPosY [ 0 ] ) , xycoords = <str> , fontsize = fontSizePanel , fontweight = <str> ) noPV = stats . wilcoxon ( PVsustainedSuppressionNoLaser , PVsustainedSuppressionLaser ) [ 1 ] noSOM = stats . wilcoxon ( SOMsustainedSuppressionNoLaser , SOMsustainedSuppressionLaser ) [ 1 ] print <str> . format ( noPV , noSOM )  if PANELS [ 1 ] :      summaryDataFullPath = os . path . join ( dataDir , summaryFileName ) summaryData = np . load ( summaryDataFullPath ) PVpeakChangeFR = summaryData [ <str> ] PVWNChangeFR = summaryData [ <str> ] SOMpeakChangeFR = summaryData [ <str> ] SOMWNChangeFR = summaryData [ <str> ] PVpeakChange = summaryData [ <str> ] PVWNChange = summaryData [ <str> ] semPVpeakChange = summaryData [ <str> ] semPVWNChange = summaryData [ <str> ] SOMpeakChange = summaryData [ <str> ] SOMWNChange = summaryData [ <str> ] semSOMpeakChange = summaryData [ <str> ] semSOMWNChange = summaryData [ <str> ] panelLabel = <str> PVcolour = figparams . colp [ <str> ] SOMcolour = figparams . colp [ <str> ] cellTypeColours = [ PVcolour , SOMcolour ] axScatter = plt . subplot ( gs [ 0 , 1 ] ) plt . hold ( True ) plt . plot ( [ - 20 , 30 ] , [ - 20 , 30 ] , <str> ) l2 , = plt . plot ( SOMpeakChangeFR , SOMWNChangeFR , <str> , color = SOMcolour , mec = <str> , ms = 4 ) plt . errorbar ( SOMpeakChange , SOMWNChange , xerr = [ [ semSOMpeakChange , semSOMpeakChange ] ] , yerr = [ [ semSOMWNChange , semSOMWNChange ] ] , fmt = <str> , ecolor = SOMcolour , capsize = 0 , lw = 2 , zorder = 9 ) l1 , = plt . plot ( PVpeakChangeFR , PVWNChangeFR , <str> , color = PVcolour , mec = <str> , ms = 4 ) plt . errorbar ( PVpeakChange , PVWNChange , xerr = [ [ semPVpeakChange , semPVpeakChange ] ] , yerr = [ [ semPVWNChange , semPVWNChange ] ] , fmt = <str> , ecolor = PVcolour , capsize = 0 , lw = 2 , zorder = 10 ) plt . ylabel ( <str> , fontsize = fontSizeLabels ) plt . xlabel ( <str> , fontsize = fontSizeLabels ) plt . xlim ( - 5 , 10 ) plt . ylim ( - 5 , 10 ) plt . legend ( [ l1 , l2 ] , [ <str> , <str> ] , loc = <str> , fontsize = fontSizeLabels , numpoints = 1 , handlelength = 0.3 ) axScatter . annotate ( panelLabel , xy = ( labelPosX [ 1 ] , labelPosY [ 0 ] ) , xycoords = <str> , fontsize = fontSizePanel , fontweight = <str> ) extraplots . boxoff ( axScatter ) noPV = stats . wilcoxon ( PVpeakChangeFR , PVWNChangeFR ) [ 1 ] noSOM = stats . wilcoxon ( SOMpeakChangeFR , SOMWNChangeFR ) [ 1 ] print <str> . format ( noPV , noSOM )  if SAVE_FIGURE :      extraplots . save_figure ( figFilename , figFormat , figSize , outputDir )    