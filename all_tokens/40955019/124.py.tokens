import os import numpy as np import matplotlib . pyplot as plt import matplotlib . gridspec as gridspec import matplotlib . colors import matplotlib . patches as patches from scipy import stats from jaratoolbox import settings from jaratoolbox import extraplots import figparams dataDir = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME , <str> ) SAVE_FIGURE = 1 outputDir = <str> figFilename = <str> figFormat = <str> figSize = [ 4 , 4 ] fontSizeLabels = figparams . fontSizeLabels fontSizeTicks = figparams . fontSizeTicks fontSizePanel = figparams . fontSizePanel labelPosX = [ 0.02 , 0.2 , 0.4 , 0.59 , 0.78 ] labelPosY = [ 0.96 , 0.48 ] fig = plt . gcf ( ) fig . clf ( ) fig . set_facecolor ( <str> ) gs = gridspec . GridSpec ( 1 , 1 ) gs . update ( top = 0.95 , bottom = 0.18 , left = 0.15 , right = 0.95 , wspace = 0.6 , hspace = 0.2 ) summaryFileName = <str> summaryDataFullPath = os . path . join ( dataDir , summaryFileName ) summaryData = np . load ( summaryDataFullPath ) PVpeakChangeFR = summaryData [ <str> ] PVWNChangeFR = summaryData [ <str> ] SOMpeakChangeFR = summaryData [ <str> ] SOMWNChangeFR = summaryData [ <str> ] PVpeakChange = summaryData [ <str> ] PVWNChange = summaryData [ <str> ] semPVpeakChange = summaryData [ <str> ] semPVWNChange = summaryData [ <str> ] SOMpeakChange = summaryData [ <str> ] SOMWNChange = summaryData [ <str> ] semSOMpeakChange = summaryData [ <str> ] semSOMWNChange = summaryData [ <str> ] PVcolour = figparams . colp [ <str> ] SOMcolour = figparams . colp [ <str> ] cellTypeColours = [ PVcolour , SOMcolour ] axScatter = plt . subplot ( gs [ 0 , 0 ] ) plt . hold ( True ) plt . plot ( [ - 20 , 30 ] , [ - 20 , 30 ] , <str> ) l2 , = plt . plot ( SOMpeakChangeFR , SOMWNChangeFR , <str> , color = SOMcolour , mec = <str> , ms = 4 ) l1 , = plt . plot ( PVpeakChangeFR , PVWNChangeFR , <str> , color = PVcolour , mec = <str> , ms = 4 ) plt . plot ( [ - 5 , - 5 , 8 , 8 , - 5 ] , [ - 5 , 8 , 8 , - 5 , - 5 ] , <str> , color = <str> ) plt . xlim ( - 15 , 25 ) plt . ylim ( - 15 , 25 ) plt . ylabel ( <str> , fontsize = fontSizeLabels ) plt . xlabel ( <str> , fontsize = fontSizeLabels ) plt . legend ( [ l1 , l2 ] , [ <str> , <str> ] , loc = <str> , fontsize = fontSizeLabels , numpoints = 1 , handlelength = 0.3 , markerscale = 1.5 ) extraplots . boxoff ( axScatter ) if SAVE_FIGURE :      extraplots . save_figure ( figFilename , figFormat , figSize , outputDir )    