import os import numpy as np import pandas as pd from jaratoolbox import settings import figparams scriptFullPath = os . path . realpath ( __file__ ) qualityList = [ 1 , 6 ] maxZThreshold = 3 psychometricFilePath = os . path . join ( settings . FIGURESDATA , figparams . STUDY_NAME ) psychometricFileName = <str> psychometricFullPath = os . path . join ( psychometricFilePath , psychometricFileName ) allcells_psychometric = pd . read_hdf ( psychometricFullPath , key = <str> ) goodcells = ( allcells_psychometric . cellQuality . isin ( qualityList ) ) & ( allcells_psychometric . ISI <= 0.02 ) allcells = allcells_psychometric [ goodcells & ( allcells_psychometric . cellInStr == 1 ) ] strongerSoundResMid1 = abs ( allcells . maxZSoundMid1 ) > abs ( allcells . maxZSoundMid2 ) modIStrongerSoundRes = np . r_ [ allcells . modIndexMid1 [ strongerSoundResMid1 ] . values , allcells . modIndexMid2 [ ~ strongerSoundResMid1 ] . values ] modSigStrongerSoundRes = np . r_ [ allcells . modSigMid1 [ strongerSoundResMid1 ] . values , allcells . modSigMid2 [ ~ strongerSoundResMid1 ] . values ] sigMod = np . array ( ( modSigStrongerSoundRes <= 0.05 ) , dtype = bool ) dataToPlot = { <str> : sigMod , <str> : modIStrongerSoundRes } outputDir = os . path . join ( settings . FIGURESDATA , figparams . STUDY_NAME ) outputFile = <str> outputFullPath = os . path . join ( outputDir , outputFile ) np . savez ( outputFullPath , sourcePsychometric = psychometricFilePath , goodCellQuality = qualityList , script = scriptFullPath , ** dataToPlot ) responsiveMidFreqs = ( abs ( allcells_psychometric . maxZSoundMid1 ) >= maxZThreshold ) | ( abs ( allcells_psychometric . maxZSoundMid2 ) >= maxZThreshold ) allcellsResponsive = allcells_psychometric [ goodcells & responsiveMidFreqs & ( allcells_psychometric . cellInStr == 1 ) ] strongerSoundResMid1 = abs ( allcellsResponsive . maxZSoundMid1 ) > abs ( allcellsResponsive . maxZSoundMid2 ) modIStrongerSoundRes = np . r_ [ allcellsResponsive . modIndexMid1 [ strongerSoundResMid1 ] . values , allcellsResponsive . modIndexMid2 [ ~ strongerSoundResMid1 ] . values ] modSigStrongerSoundRes = np . r_ [ allcellsResponsive . modSigMid1 [ strongerSoundResMid1 ] . values , allcellsResponsive . modSigMid2 [ ~ strongerSoundResMid1 ] . values ] sigMod = np . array ( ( modSigStrongerSoundRes <= 0.05 ) , dtype = bool ) dataToPlot = { <str> : sigMod , <str> : modIStrongerSoundRes } outputDir = os . path . join ( settings . FIGURESDATA , figparams . STUDY_NAME ) outputFile = <str> outputFullPath = os . path . join ( outputDir , outputFile ) np . savez ( outputFullPath , sourcePsychometric = psychometricFilePath , maxZThreshold = maxZThreshold , goodCellQuality = qualityList , script = scriptFullPath , ** dataToPlot )  