import os import numpy as np import matplotlib . pyplot as plt import matplotlib . gridspec as gridspec import matplotlib . colors import matplotlib . patches as patches from scipy import ndimage from scipy import stats from jaratoolbox import celldatabase from jaratoolbox import settings from jaratoolbox import extraplots import studyparams import figparams FIGNAME = <str> dataDir = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME , FIGNAME ) PANELS = [ 1 , 1 ] SAVE_FIGURE = 1 outputDir = <str> figFilename = <str> figFormat = <str> figSize = [ 6 , 3 ] fontSizeLabels = figparams . fontSizeLabels fontSizeTicks = figparams . fontSizeTicks fontSizePanel = figparams . fontSizePanel fontSizeLegend = figparams . fontSizeLegend excColor = figparams . colp [ <str> ] labelPosX = [ 0.01 , 0.48 ] labelPosY = 0.94 histFileName = <str> fig = plt . gcf ( ) fig . clf ( ) fig . set_facecolor ( <str> ) gs = gridspec . GridSpec ( 1 , 2 , width_ratios = [ 1 , 0.9 ] ) gs . update ( top = 0.95 , bottom = 0.21 , left = 0.04 , right = 0.95 , wspace = 0.3 , hspace = 0.2 ) if PANELS [ 0 ] :      panelLabel = <str> histFullPath = os . path . join ( dataDir , histFileName ) histImage = ndimage . imread ( histFullPath ) imageBounds = [ 400 , 800 , 0 , 400 ] axImage = plt . subplot ( gs [ 0 , 0 ] ) plt . imshow ( histImage [ imageBounds [ 0 ] : imageBounds [ 1 ] , imageBounds [ 2 ] : imageBounds [ 3 ] , : ] ) plt . axis ( <str> ) axImage . annotate ( panelLabel , xy = ( labelPosX [ 0 ] , labelPosY ) , xycoords = <str> , fontsize = fontSizePanel , fontweight = <str> ) axImage . annotate ( <str> , xy = ( 0.65 , 0.35 ) , xycoords = <str> , fontsize = fontSizeLabels , color = <str> ) axImage . annotate ( <str> , xy = ( 0.7 , 0.75 ) , xycoords = <str> , fontsize = fontSizeLabels , color = <str> ) axImage . annotate ( <str> , xy = ( 0.5 , 0.05 ) , xycoords = <str> , fontsize = fontSizeLabels , color = <str> )  if PANELS [ 1 ] :      panelLabel = <str> dbFilename = <str> db = celldatabase . load_hdf ( dbFilename ) cellsWithDepths = db [ db [ <str> ] . notnull ( ) ] EXC_CELLS = cellsWithDepths . query ( <str> . format ( studyparams . EXC_LASER_RESPONSE_PVAL , studyparams . EXC_SPIKE_WIDTH , studyparams . SOM_CHR2_MICE ) ) depths = EXC_CELLS [ <str> ] SIs = EXC_CELLS [ <str> ] slope , intercept , rVal , pVal , stdErr = stats . linregress ( depths , SIs ) print <str> . format ( rVal , pVal ) axScatter = plt . subplot ( gs [ 0 , 1 ] ) plt . hold ( True ) plt . plot ( depths , SIs , <str> , color = excColor ) xvals = np . linspace ( - 2 , 2 , 200 ) yvals = slope * xvals + intercept plt . plot ( xvals , yvals , <str> , color = excColor , zorder = - 1 ) plt . xlim ( - 0.1 , 1.1 ) plt . ylim ( - 0.1 , 1.1 ) plt . xlabel ( <str> , fontsize = fontSizeLabels ) plt . ylabel ( <str> , fontsize = fontSizeLabels ) extraplots . boxoff ( axScatter ) axScatter . annotate ( panelLabel , xy = ( labelPosX [ 1 ] , labelPosY ) , xycoords = <str> , fontsize = fontSizePanel , fontweight = <str> )  if SAVE_FIGURE :      extraplots . save_figure ( figFilename , figFormat , figSize , outputDir )   