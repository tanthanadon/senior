import os import numpy as np import matplotlib . pyplot as plt import matplotlib . gridspec as gridspec import matplotlib . patches as mpatches from jaratoolbox import settings from jaratoolbox import extraplots from jaratoolbox import behavioranalysis from jaratoolbox import spikesanalysis from jaratoolbox import celldatabase from scipy import stats import pandas as pd import figparams reload ( figparams ) dbPath = <str> db = celldatabase . load_hdf ( dbPath ) goodISI = db . query ( <str> ) goodShape = goodISI . query ( <str> ) goodLaser = goodShape . query ( <str> ) goodNSpikes = goodLaser . query ( <str> ) goodPulseLatency = goodNSpikes . query ( <str> ) dbToUse = goodNSpikes dbToUse [ <str> ] = ( dbToUse [ <str> ] - dbToUse [ <str> ] ) / ( dbToUse [ <str> ] + dbToUse [ <str> ] ) ac = dbToUse . groupby ( <str> ) . get_group ( <str> ) thal = dbToUse . groupby ( <str> ) . get_group ( <str> ) def jitter ( arr , frac ) :      jitter = ( np . random . random ( len ( arr ) ) - 0.5 ) * 2 * frac jitteredArr = arr + jitter return jitteredArr  def medline ( yval , midline , width , color = <str> , linewidth = 3 ) :      start = midline - ( width / 2 ) end = midline + ( width / 2 ) plt . plot ( [ start , end ] , [ yval , yval ] , color = color , lw = linewidth )  plt . clf ( ) ax = plt . subplot ( 111 ) colorATh = <str> colorAC = <str> dataMS = 4 popStatCol = <str> acPopStat = ac [ popStatCol ] [ pd . notnull ( ac [ popStatCol ] ) ] thalPopStat = thal [ popStatCol ] [ pd . notnull ( thal [ popStatCol ] ) ] jitterFrac = 0.2 pos = jitter ( np . ones ( len ( thalPopStat ) ) * 0 , jitterFrac ) ax . plot ( pos , thalPopStat , <str> , mec = colorATh , mfc = <str> , alpha = 1 , ms = dataMS ) medline ( np . median ( thalPopStat ) , 0 , 0.5 ) pos = jitter ( np . ones ( len ( acPopStat ) ) * 1 , jitterFrac ) ax . plot ( pos , acPopStat , <str> , mec = colorAC , mfc = <str> , alpha = 1 , ms = dataMS ) medline ( np . median ( acPopStat ) , 1 , 0.5 ) tickLabels = [ <str> . format ( len ( thalPopStat ) ) , <str> . format ( len ( acPopStat ) ) ] ax . set_xticks ( range ( 2 ) ) ax . set_xticklabels ( tickLabels ) ax . set_ylabel ( <str> ) plt . show ( ) zStat , pVal = stats . mannwhitneyu ( thalPopStat , acPopStat ) print pVal  