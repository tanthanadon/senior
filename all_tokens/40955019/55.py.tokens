import os import numpy as np import pandas as pd from jaratoolbox import settings import figparams FIGNAME = <str> outputDir = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME , FIGNAME ) scriptFullPath = os . path . realpath ( __file__ ) qualityList = [ 1 , 6 ] ISIcutoff = 0.02 taskToPlot = <str> if taskToPlot == <str> :      databaseFilePath = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME ) databaseFileName = <str> databaseFullPath = os . path . join ( databaseFilePath , databaseFileName ) allcells = pd . read_hdf ( databaseFullPath , key = <str> )  elif taskToPlot == <str> :      databaseFilePath = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME ) databaseFileName = <str> databaseFullPath = os . path . join ( databaseFilePath , databaseFileName ) allcells = pd . read_hdf ( databaseFullPath , key = <str> )  dataToPlot = { <str> : [ ] , <str> : [ ] , <str> : [ ] } goodcells = ( allcells . cellQuality . isin ( qualityList ) ) & ( allcells . ISI <= ISIcutoff ) cellInStr = ( allcells . cellInStr == 1 ) keepAfterDupTest = allcells . keep_after_dup_test allcells = allcells [ goodcells & cellInStr & keepAfterDupTest ] sigMod = np . array ( ( allcells . movementModS <= 0.05 ) , dtype = bool ) dataToPlot [ <str> ] . extend ( sigMod ) dataToPlot [ <str> ] . extend ( allcells . animalName ) dataToPlot [ <str> ] . extend ( allcells . movementModI ) outputFile = <str> . format ( taskToPlot ) outputFullPath = os . path . join ( outputDir , outputFile ) np . savez ( outputFullPath , sourceDatabase = databaseFullPath , goodCellQuality = qualityList , ISIcutoff = ISIcutoff , script = scriptFullPath , ** dataToPlot )  