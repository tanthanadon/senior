import os import figparams from jaratoolbox import behavioranalysis from jaratoolbox import settings reload ( settings ) import figparams import numpy as np from muscimol_sessions import animals FIGNAME = <str> outputDir = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME , FIGNAME ) scriptFullPath = os . path . realpath ( __file__ ) summaryFilename = <str> summaryFullPath = os . path . join ( outputDir , summaryFilename ) def frac_correct ( bdata ) :      correct = bdata [ <str> ] == bdata . labels [ <str> ] [ <str> ] nCorrect = sum ( correct ) valid = bdata [ <str> ] nValid = sum ( valid ) return nCorrect / float ( nValid )  animalsToUse = [ <str> , <str> , <str> , <str> , <str> ] nAnimals = len ( animalsToUse ) nSessions = 4 nCond = 2 conditions = [ <str> , <str> ] dataMat = np . zeros ( ( nAnimals , nSessions , nCond ) ) subjects = [ ] for indAnimal , animalName in enumerate ( animalsToUse ) :      animalSessionDict = animals [ animalName ] subjects . append ( animalName ) for indCond in [ 0 , 1 ] :          sessions = animalSessionDict [ conditions [ indCond ] ] for indSession , session in enumerate ( sessions ) :              bdata = behavioranalysis . load_many_sessions ( animalName , [ session ] ) fracCorrect = frac_correct ( bdata ) dataMat [ indAnimal , indSession , indCond ] = fracCorrect    np . savez ( summaryFullPath , data = dataMat , subjects = np . array ( subjects ) , conditions = np . array ( conditions ) , script = scriptFullPath ) print <str> . format ( summaryFullPath )  