import numpy as np import Image import os from jaratoolbox import settings from jaratoolbox import histologyanalysis as ha reload ( ha ) import nrrd import matplotlib . pyplot as plt subject = <str> registrationFolder = <str> sliceName = <str> sliceNum = 195 from jaratoolbox import histologyanalysis as ha filenameAtlas = <str> . format ( sliceNum ) filenameSlice = <str> . format ( subject , sliceName ) filenameSVG = <str> . format ( subject , sliceName ) ( scale , translate , affine ) = ha . get_svg_transform ( filenameSVG , sliceSize = [ 1388 , 1040 ] ) filenameCSV = <str> . format ( subject , sliceName ) coords = ha . get_coords_from_fiji_csv ( filenameCSV , pixelSize = 4.0048 ) newCoords = ha . apply_svg_transform ( scale , translate , affine , coords ) annotationVolume = ha . AllenAnnotation ( ) structIDs = annotationVolume . get_structure_id_many_xy ( newCoords , sliceNum ) structNames = np . array ( [ annotationVolume . get_structure_from_id ( structID ) for structID in structIDs ] ) primaryBool = np . array ( [ <str> in name for name in structNames ] , dtype = bool ) primaryCoords = newCoords [ : , primaryBool ] ccfZ = sliceNum atlasPath = os . path . join ( settings . ALLEN_ATLAS_DIR , <str> ) atlasData = nrrd . read ( atlasPath ) atlas = atlasData [ 0 ] sliceData = np . rot90 ( atlas [ : , : , sliceNum ] , - 1 ) plt . clf ( ) ax = plt . subplot ( 111 ) ax . imshow ( sliceData , <str> ) ax . plot ( newCoords [ 0 ] , newCoords [ 1 ] , <str> ) ax . hold ( 1 ) lapPath = os . path . join ( settings . ALLEN_ATLAS_DIR , <str> ) lapData = nrrd . read ( lapPath ) lap = lapData [ 0 ] cortexDepthData = np . rot90 ( lap [ : , : , sliceNum ] , - 1 ) bottomData = np . where ( cortexDepthData > 0.95 ) plt . plot ( bottomData [ 1 ] , bottomData [ 0 ] , <str> ) topData = np . where ( ( cortexDepthData < 0.02 ) & ( cortexDepthData > 0 ) ) plt . plot ( topData [ 1 ] , topData [ 0 ] , <str> ) plt . show ( ) numCells = np . shape ( primaryCoords ) [ 1 ] cellDepths = np . empty ( numCells ) for indCell in range ( numCells ) :      print <str> . format ( indCell ) cellX = primaryCoords [ 0 , indCell ] cellY = primaryCoords [ 1 , indCell ] dXTop = topData [ 1 ] - cellX dYTop = topData [ 0 ] - cellY distanceTop = np . sqrt ( dXTop ** 2 + dYTop ** 2 ) indMinTop = np . argmin ( distanceTop ) minDistanceTop = distanceTop . min ( ) dXBottom = bottomData [ 1 ] - cellX dYBottom = bottomData [ 0 ] - cellY distanceBottom = np . sqrt ( dXBottom ** 2 + dYBottom ** 2 ) minDistanceBottom = distanceBottom . min ( ) cellRatio = minDistanceTop / ( minDistanceBottom + minDistanceTop ) cellDepths [ indCell ] = cellRatio  figName = <str> dataFn = os . path . join ( settings . FIGURES_DATA_PATH , <str> , figName , <str> ) np . save ( dataFn , cellDepths ) plt . figure ( ) plt . hist ( cellDepths , bins = 30 , histtype = <str> ) plt . xlim ( [ 0 , 1 ] ) plt . show ( )  