import os import figparams import copy from jaratoolbox import behavioranalysis from jaratoolbox import settings import figparams import numpy as np from muscimol_sessions import animals from jaratoolbox import extrastats animalName = <str> FIGNAME = <str> outputDir = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME , FIGNAME ) scriptFullPath = os . path . realpath ( __file__ ) def calculate_psychometric_and_estimate ( bdata , fullDataPath ) :      targetFrequency = bdata [ <str> ] choice = bdata [ <str> ] valid = bdata [ <str> ] & ( choice != bdata . labels [ <str> ] [ <str> ] ) choiceRight = choice == bdata . labels [ <str> ] [ <str> ] possibleFreq = np . unique ( targetFrequency ) nFreq = len ( possibleFreq ) ( possibleValues , fractionHitsEachValue , ciHitsEachValue , nTrialsEachValue , nHitsEachValue ) = behavioranalysis . calculate_psychometric ( choiceRight , targetFrequency , valid ) logPossibleValues = np . log2 ( possibleValues ) lowerFreqConstraint = logPossibleValues [ 1 ] upperFreqConstraint = logPossibleValues [ - 2 ] maxFreq = max ( logPossibleValues ) minFreq = min ( logPossibleValues ) constraints = ( <str> . format ( lowerFreqConstraint , upperFreqConstraint ) , <str> , <str> , <str> ) estimate = extrastats . psychometric_fit ( logPossibleValues , nTrialsEachValue , nHitsEachValue , constraints ) np . savez ( fullDataPath , possibleValues = possibleValues , fractionHitsEachValue = fractionHitsEachValue , ciHitsEachValue = ciHitsEachValue , nTrialsEachValue = nTrialsEachValue , nHitsEachValue = nHitsEachValue , logPossibleValues = logPossibleValues , estimate = estimate , script = scriptFullPath ) print <str> . format ( fullDataPath )  animalSessionDict = animals [ animalName ] musSessions = animalSessionDict [ <str> ] salSessions = animalSessionDict [ <str> ] musBdata = behavioranalysis . load_many_sessions ( [ animalName ] , musSessions ) salBdata = behavioranalysis . load_many_sessions ( [ animalName ] , salSessions ) musFilename = <str> . format ( animalName ) musFullPath = os . path . join ( outputDir , musFilename ) calculate_psychometric_and_estimate ( musBdata , musFullPath ) salFilename = <str> . format ( animalName ) salFullPath = os . path . join ( outputDir , salFilename ) calculate_psychometric_and_estimate ( salBdata , salFullPath )  