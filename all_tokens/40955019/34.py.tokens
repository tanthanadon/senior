import os import numpy as np from matplotlib import pyplot as plt import matplotlib . gridspec as gridspec from jaratoolbox import settings reload ( settings ) from jaratoolbox import extraplots from jaratoolbox import extrastats import figparams from scipy import stats reload ( figparams ) FIGNAME = <str> dataDir = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME , FIGNAME ) SAVE_FIGURE = 1 outputDir = <str> figFilename = <str> . format ( FIGNAME ) figFormat = <str> figSize = [ 4.8 , 2.5 ] fontSizeLabels = figparams . fontSizeLabels fontSizeTicks = figparams . fontSizeTicks fontSizePanel = figparams . fontSizePanel labelPosX = [ - 0.35 ] labelPosY = [ 1 ] fontSizeLabels = 12 fontSizeTicks = 12 fontSizePanel = 16 animalNumbers = { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> } fig = plt . gcf ( ) fig . clf ( ) fig . set_facecolor ( <str> ) panelsToPlot = [ 0 , 1 ] gs = gridspec . GridSpec ( 1 , 1 ) gs . update ( left = 0.15 , right = 0.70 , bottom = 0.2 , wspace = 0.5 , hspace = 0.5 ) ax2 = plt . subplot ( gs [ 0 , 0 ] ) summaryFilename = <str> summaryFullPath = os . path . join ( dataDir , summaryFilename ) fcFile = np . load ( summaryFullPath ) totalMat = fcFile [ <str> ] validMat = fcFile [ <str> ] subjects = fcFile [ <str> ] conditions = fcFile [ <str> ] ind = np . arange ( len ( subjects ) ) width = 0.35 muscimolColor = figparams . colp [ <str> ] condColors = [ <str> , muscimolColor ] shiftAmt = width * 0.05 fontSizeLabels = 12 fontSizeTicks = 10 pointShift = np . array ( [ - shiftAmt , shiftAmt , - shiftAmt , shiftAmt ] ) def plot_bars ( ax , dataMat , label ) :      for indSubject , subject in enumerate ( subjects ) :          for indCond , condition in enumerate ( conditions ) :              sessionsThisCondThisSubject = dataMat [ indSubject , : , indCond ] ax . plot ( np . zeros ( len ( sessionsThisCondThisSubject ) ) + ( indSubject + 0.5 * width + indCond * width ) + pointShift , sessionsThisCondThisSubject , marker = <str> , linestyle = <str> , mec = condColors [ indCond ] , mfc = <str> ) ax . hold ( 1 )   rects1 = ax . bar ( ind , dataMat [ : , : , 0 ] . mean ( 1 ) - 0.5 , width , bottom = 0.5 , edgecolor = <str> , facecolor = <str> , lw = 2 , label = <str> ) rects2 = ax . bar ( ind + width + 0.015 , dataMat [ : , : , 1 ] . mean ( 1 ) - 0.5 , width , bottom = 0.5 , edgecolor = muscimolColor , lw = 2 , facecolor = <str> , label = <str> ) ax . set_xticks ( ind + width ) ax . set_xticklabels ( np . arange ( 6 ) + 1 , fontsize = fontSizeLabels ) ax . set_xlabel ( <str> , fontsize = fontSizeLabels ) ax . axhline ( y = 0.5 , color = <str> , linestyle = <str> ) ax . set_xlim ( [ ind [ 0 ] - 0.5 * width , ind [ - 1 ] + 2.5 * width ] ) ax . set_ylabel ( <str> , fontsize = fontSizeLabels ) extraplots . set_ticks_fontsize ( plt . gca ( ) , fontSizeTicks ) extraplots . boxoff ( ax ) ax . legend ( bbox_to_anchor = ( 0.95 , 0.6 ) , loc = 3 , numpoints = 1 , fontsize = fontSizeLabels , ncol = 1 , columnspacing = 1.5 , frameon = False ) for i in [ 1 , 3 , 4 ] :          extraplots . significance_stars ( [ i + 0.5 * width , i + 1.5 * width ] , 1000 , 50 , starSize = 6 , gapFactor = 0.4 , color = <str> )   plot_bars ( ax2 , validMat , <str> ) plt . show ( ) print <str> dataMat = totalMat for indSubject in range ( 5 ) :      subDataSal = dataMat [ indSubject , : , 0 ] subDataMus = dataMat [ indSubject , : , 1 ] print indSubject print stats . ranksums ( subDataSal , subDataMus )  print <str> dataMat = validMat for indSubject in range ( 5 ) :      subDataSal = dataMat [ indSubject , : , 0 ] subDataMus = dataMat [ indSubject , : , 1 ] print indSubject print stats . ranksums ( subDataSal , subDataMus )  if SAVE_FIGURE :      extraplots . save_figure ( figFilename , figFormat , figSize , outputDir )   