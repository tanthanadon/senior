import os import numpy as np import scipy . stats import matplotlib . pyplot as plt import matplotlib . colors from jaratoolbox import celldatabase from jaratoolbox import extraplots from jaratoolbox import settings FONTSIZE = 14 dbFilename = os . path . join ( settings . FIGURES_DATA_PATH , <str> , <str> ) db = celldatabase . load_hdf ( <str> ) bestCells = db . query ( <str> ) bestCells = bestCells . query ( <str> ) LASER_RESPONSE_PVAL = 0.001 EXC_LASER_RESPONSE_PVAL = 0.5 EXC_SPIKE_WIDTH = 0.0004 PV_CHR2_MICE = [ <str> , <str> , <str> , <str> ] SOM_CHR2_MICE = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] PV_CELLS = bestCells . query ( <str> . format ( LASER_RESPONSE_PVAL , PV_CHR2_MICE ) ) SOM_CELLS = bestCells . query ( <str> . format ( LASER_RESPONSE_PVAL , SOM_CHR2_MICE ) ) EXC_CELLS = bestCells . query ( <str> . format ( EXC_LASER_RESPONSE_PVAL , EXC_SPIKE_WIDTH , SOM_CHR2_MICE ) ) PVonsetSIs = np . array ( PV_CELLS [ <str> ] ) SOMonsetSIs = np . array ( SOM_CELLS [ <str> ] ) excOnsetSIs = np . array ( EXC_CELLS [ <str> ] ) cellTypeColours = [ <str> , <str> , <str> ] categoryLabels = [ <str> , <str> , <str> ] axScatter = plt . subplot ( 1 , 2 , 1 ) plt . hold ( 1 ) suppressionVals = [ excOnsetSIs , PVonsetSIs , SOMonsetSIs ] for category in range ( len ( suppressionVals ) ) :      edgeColour = matplotlib . colors . colorConverter . to_rgba ( cellTypeColours [ category ] , alpha = 0.5 ) xval = ( category + 1 ) * np . ones ( len ( suppressionVals [ category ] ) ) jitterAmt = np . random . random ( len ( xval ) ) xval = xval + ( 0.4 * jitterAmt ) - 0.2 plt . hold ( True ) plt . plot ( xval , suppressionVals [ category ] , <str> , mec = edgeColour , mfc = <str> ) median = np . median ( suppressionVals [ category ] ) plt . plot ( [ category + 0.7 , category + 1.3 ] , [ median , median ] , <str> , color = <str> , mec = cellTypeColours [ category ] , lw = 3 )  plt . xlim ( 0 , len ( suppressionVals ) + 1 ) plt . ylim ( - 0.05 , 1.05 ) plt . ylabel ( <str> , fontsize = FONTSIZE ) axScatter . set_xticks ( range ( 1 , len ( suppressionVals ) + 1 ) ) axScatter . set_xticklabels ( categoryLabels , fontsize = FONTSIZE ) extraplots . boxoff ( axScatter ) yLims = np . array ( plt . ylim ( ) ) extraplots . significance_stars ( [ 1 , 2 ] , yLims [ 1 ] * 1.03 , yLims [ 1 ] * 0.02 , gapFactor = 0.25 ) plt . hold ( 0 ) ExcPV = scipy . stats . ranksums ( excOnsetSIs , PVonsetSIs ) [ 1 ] ExcSOM = scipy . stats . ranksums ( excOnsetSIs , SOMonsetSIs ) [ 1 ] PVSOM = scipy . stats . ranksums ( PVonsetSIs , SOMonsetSIs ) [ 1 ] print <str> . format ( ExcPV , ExcSOM , PVSOM ) dbFilename2 = os . path . join ( settings . FIGURES_DATA_PATH , <str> , <str> ) db2 = celldatabase . load_hdf ( <str> ) bestCells2 = db2 . query ( <str> ) bestCells2 = bestCells2 . query ( <str> ) PV_ARCHT_MICE = [ <str> , <str> , <str> , <str> , <str> , <str> ] SOM_ARCHT_MICE = [ <str> , <str> , <str> ] PV_INACTIVATED_CELLS = bestCells2 . query ( <str> . format ( PV_ARCHT_MICE ) ) SOM_INACTIVATED_CELLS = bestCells2 . query ( <str> . format ( SOM_ARCHT_MICE ) ) PVSIs = np . array ( PV_INACTIVATED_CELLS [ <str> ] ) PVSIsLaser = np . array ( PV_INACTIVATED_CELLS [ <str> ] ) SOMSIs = np . array ( SOM_INACTIVATED_CELLS [ <str> ] ) SOMSIsLaser = np . array ( SOM_INACTIVATED_CELLS [ <str> ] ) axScatter2 = plt . subplot ( 1 , 2 , 2 ) plt . hold ( 1 ) l1 , = plt . plot ( PVSIs , PVSIsLaser , <str> , ms = 5 , mec = <str> ) l2 , = plt . plot ( SOMSIs , SOMSIsLaser , <str> , ms = 5 , mec = <str> ) plt . plot ( [ - 5 , 5 ] , [ - 5 , 5 ] , <str> ) plt . legend ( [ l1 , l2 ] , [ <str> , <str> ] , loc = <str> , numpoints = 1 , handlelength = 0.3 , markerscale = 1.7 , frameon = False ) plt . xlim ( - 0.05 , 1.05 ) plt . ylim ( - 0.05 , 1.05 ) plt . xlabel ( <str> , fontsize = FONTSIZE ) plt . ylabel ( <str> , fontsize = FONTSIZE ) extraplots . boxoff ( axScatter2 ) noSOM = scipy . stats . wilcoxon ( SOMSIs , SOMSIsLaser ) [ 1 ] noPV = scipy . stats . wilcoxon ( PVSIs , PVSIsLaser ) [ 1 ] print <str> . format ( noSOM , noPV ) plt . show ( )   