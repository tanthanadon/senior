import os import numpy as np import pandas as pd from jaratoolbox import settings import figparams scriptFullPath = os . path . realpath ( __file__ ) qualityList = [ 1 , 6 ] maxZThreshold = 3 ISIcutoff = 0.02 removedDuplicates = True FIGNAME = <str> dataDir = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME , FIGNAME ) if not os . path . exists ( dataDir ) :      os . mkdir ( dataDir )  switchingFilePath = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME ) switchingFileName = <str> switchingFullPath = os . path . join ( switchingFilePath , switchingFileName ) allcells_switching = pd . read_hdf ( switchingFullPath , key = <str> ) goodcells = ( allcells_switching . cellQuality . isin ( qualityList ) ) & ( allcells_switching . ISI <= ISIcutoff ) cellsInStr = allcells_switching . cellInStr == 1 keepAfterDupTest = allcells_switching . keep_after_dup_test allcells = allcells_switching [ goodcells & cellsInStr & keepAfterDupTest ] sigMod = np . array ( ( allcells [ <str> ] <= 0.05 ) & ( allcells [ <str> ] >= 1 ) , dtype = bool ) dataToPlot = { <str> : sigMod , <str> : allcells . modIndex , <str> : allcells . animalName } outputFile = <str> outputFullPath = os . path . join ( dataDir , outputFile ) np . savez ( outputFullPath , sourceSwitching = switchingFilePath , goodCellQuality = qualityList , ISIcutoff = ISIcutoff , removedDuplicates = removedDuplicates , script = scriptFullPath , ** dataToPlot ) responsiveMidFreqs = abs ( allcells_switching . maxZSoundMid ) >= maxZThreshold allcellsResponsive = allcells_switching [ goodcells & cellsInStr & keepAfterDupTest & responsiveMidFreqs ] sigMod = np . array ( ( allcellsResponsive [ <str> ] <= 0.05 ) & ( allcellsResponsive [ <str> ] >= 1 ) , dtype = bool ) dataToPlot = { <str> : sigMod , <str> : allcellsResponsive . modIndex , <str> : allcellsResponsive . animalName } outputFile = <str> outputFullPath = os . path . join ( dataDir , outputFile ) np . savez ( outputFullPath , sourceSwitching = switchingFilePath , maxZThreshold = maxZThreshold , goodCellQuality = qualityList , ISIcutoff = ISIcutoff , removedDuplicates = removedDuplicates , script = scriptFullPath , ** dataToPlot ) movementSelective = allcells_switching . movementModS <= 0.05 allcellsMovementSel = allcells_switching [ goodcells & cellsInStr & keepAfterDupTest & movementSelective ] sigMod = np . array ( ( allcellsMovementSel [ <str> ] <= 0.05 ) & ( allcellsMovementSel [ <str> ] >= 1 ) , dtype = bool ) dataToPlot = { <str> : sigMod , <str> : allcellsMovementSel . modIndex , <str> : allcellsMovementSel . animalName } outputFile = <str> outputFullPath = os . path . join ( dataDir , outputFile ) np . savez ( outputFullPath , sourceSwitching = switchingFilePath , maxZThreshold = maxZThreshold , goodCellQuality = qualityList , ISIcutoff = ISIcutoff , removedDuplicates = removedDuplicates , script = scriptFullPath , ** dataToPlot )  