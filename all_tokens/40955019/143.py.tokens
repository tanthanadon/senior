import os import numpy as np import nrrd from matplotlib import pyplot as plt from jaratoolbox import histologyanalysis as ha from jaratoolbox import settings from jaratoolbox import extraplots import xml . etree . ElementTree as ETree import pandas as pd import figparams reload ( settings ) import re FIGNAME = <str> figDir = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME , FIGNAME ) atlasPath = os . path . join ( settings . ALLEN_ATLAS_DIR , <str> ) atlasData = nrrd . read ( atlasPath ) atlas = atlasData [ 0 ] dbPath = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME , <str> ) db = pd . read_hdf ( dbPath , key = <str> ) goodISI = db . query ( <str> ) goodShape = goodISI . query ( <str> ) goodLaser = goodShape . query ( <str> ) thalCells = goodLaser . groupby ( <str> ) . get_group ( <str> ) atlasWidth = 456 atlasHeight = 320 HISTOLOGY_PATH = settings . HISTOLOGY_PATH zBounds = [ 185 , 197 ] plt . close ( <str> ) numFigs = len ( zBounds ) + 1 figs = [ ] axs = [ ] for indFig in range ( numFigs ) :      fig , ax = plt . subplots ( ) ax . set_xlim ( [ 0 , atlasWidth ] ) ax . set_ylim ( [ 0 , atlasHeight ] ) ax . invert_yaxis ( ) figs . append ( fig ) axs . append ( ax )  lineColor = <str> lineWidth = 1 markerColor = <str> markerSize = 1 allY = [ ] for indRow , dbRow in thalCells . iterrows ( ) :      if dbRow [ <str> ] < zBounds [ 0 ] :          tractAx = axs [ 0 ] tractFig = figs [ 0 ] sliceNum = 181  elif ( dbRow [ <str> ] > zBounds [ 0 ] ) & ( dbRow [ <str> ] < zBounds [ 1 ] ) :          tractAx = axs [ 1 ] tractFig = figs [ 1 ] sliceNum = 193  elif ( dbRow [ <str> ] > zBounds [ 1 ] ) :          tractAx = axs [ 2 ] tractFig = figs [ 2 ] sliceNum = 206  plt . sca ( tractAx ) plt . figure ( tractFig . number ) tractAx . imshow ( np . rot90 ( atlas [ : , : , sliceNum ] , - 1 ) , <str> ) plt . hold ( 1 ) allY . append ( dbRow [ <str> ] ) if dbRow [ <str> ] > 200 :          print dbRow  tractAx . plot ( dbRow [ <str> ] , dbRow [ <str> ] , <str> , mfc = markerColor , mec = markerColor , ms = markerSize ) plt . hold ( 1 )  outputDir = <str> for indFig , fig in enumerate ( figs ) :      plt . figure ( fig . number ) extraplots . save_figure ( <str> . format ( indFig + 1 ) , <str> , ( 5 , 3 ) , outputDir = outputDir )  plt . show ( )  