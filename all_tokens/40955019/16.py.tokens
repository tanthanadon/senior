import os import numpy as np from matplotlib import pyplot as plt from jaratoolbox import colorpalette as cp from jaratoolbox import extraplots from jaratoolbox import settings from jaratoolbox import loadbehavior from jaratoolbox import behavioranalysis import matplotlib . gridspec as gridspec import matplotlib import pandas as pd import figparams qualityList = [ 1 , 6 ] maxZThreshold = 3 ISIcutoff = 0.02 removedDuplicates = True FIGNAME = <str> dataDir = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME , FIGNAME ) matplotlib . rcParams [ <str> ] = <str> matplotlib . rcParams [ <str> ] = <str> SAVE_FIGURE = 1 outputDir = <str> figFormat = <str> figSize = [ 7 , 7 ] fontSizeLabels = figparams . fontSizeLabels fontSizeTicks = figparams . fontSizeTicks fontSizePanel = figparams . fontSizePanel labelDis = 0.1 labelPosX = [ 0.02 ] labelPosY = [ 0.95 ] switchingFilePath = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME ) switchingFileName = <str> switchingFullPath = os . path . join ( switchingFilePath , switchingFileName ) allcells_switching = pd . read_hdf ( switchingFullPath , key = <str> ) goodcells = ( allcells_switching . cellQuality . isin ( qualityList ) ) & ( allcells_switching . ISI <= ISIcutoff ) cellsInStr = allcells_switching . cellInStr == 1 keepAfterDupTest = allcells_switching . keep_after_dup_test cellsToUse = allcells_switching [ goodcells & cellsInStr & keepAfterDupTest ] fig = plt . gcf ( ) fig . clf ( ) fig . set_facecolor ( <str> ) animals = np . unique ( cellsToUse . animalName ) paradigm = <str> f = open ( os . path . join ( outputDir , <str> ) , <str> ) for animal in animals :      f . write ( <str> + animal + <str> ) cellsThisAnimal = cellsToUse . query ( <str> . format ( animal ) ) behavSessThisAnimal = np . unique ( cellsThisAnimal . behavSession ) for session in behavSessThisAnimal :          print <str> . format ( animal , session ) f . write ( <str> + session + <str> )  f . write ( <str> )  f . close ( )  