import os import numpy as np import matplotlib . pyplot as plt from scipy import stats from jaratoolbox import settings from jaratoolbox import extraplots reload ( extraplots ) import figparams reload ( figparams ) dataDir = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME ) SAVE_FIGURE = 1 outputDir = <str> figFilename = <str> figFormat = <str> figSize = [ 6 , 6 ] photostimMice = [ <str> , <str> , <str> ] tuningData = np . load ( os . path . join ( dataDir , <str> ) ) biasData = np . load ( os . path . join ( dataDir , <str> ) ) tuningToPlot = [ ] biasToPlot = [ ] for mouse in photostimMice :      for stimHemi in [ <str> , <str> ] :          if not np . all ( tuningData [ <str> . format ( mouse , stimHemi ) ] == biasData [ <str> . format ( mouse , stimHemi ) ] ) :              print <str> . format ( mouse , stimHemi ) continue  validTuning = ~ np . isnan ( tuningData [ <str> . format ( mouse , stimHemi ) ] ) tuningToPlot . extend ( tuningData [ <str> . format ( mouse , stimHemi ) ] [ validTuning ] ) biasToPlot . extend ( biasData [ <str> . format ( mouse , stimHemi ) ] [ validTuning ] )   plt . figure ( ) plt . plot ( tuningToPlot , biasToPlot , <str> ) plt . xlabel ( <str> ) plt . ylabel ( <str> ) plt . show ( ) if SAVE_FIGURE :      extraplots . save_figure ( figFilename , figFormat , figSize , outputDir )  rho , pVal = stats . pearsonr ( tuningToPlot , biasToPlot ) print <str> , rho , <str> , pVal  