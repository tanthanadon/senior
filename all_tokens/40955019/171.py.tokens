import os import numpy as np import matplotlib . pyplot as plt import matplotlib . gridspec as gridspec from jaratoolbox import settings from jaratoolbox import extraplots from jaratoolbox import behavioranalysis from jaratoolbox import spikesanalysis from jaratoolbox import ephyscore from jaratest . nick . reports import pinp_report from collections import Counter from scipy import stats from scipy import signal import pandas as pd import figparams reload ( figparams ) reload ( pinp_report ) dbPath = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME , <str> ) db = pd . read_hdf ( dbPath , key = <str> ) goodISI = db . query ( <str> ) goodShape = goodISI . query ( <str> ) goodLaser = goodShape . query ( <str> ) goodLaserAM = goodLaser [ ~ pd . isnull ( goodLaser [ <str> ] ) ] reportDirAM = <str> if not os . path . exists ( reportDirAM ) :      os . mkdir ( reportDirAM )  reportDirFreq = <str> if not os . path . exists ( reportDirFreq ) :      os . mkdir ( reportDirFreq )  goodFit = goodLaser . query ( <str> ) goodFit [ <str> ] = np . sqrt ( goodFit [ <str> ] * goodFit [ <str> ] ) goodFitToUse = goodFit . query ( <str> ) for indRow , dbRow in goodFitToUse . iterrows ( ) :      subject = dbRow [ <str> ] date = dbRow [ <str> ] depth = dbRow [ <str> ] tetrode = dbRow [ <str> ] cluster = int ( dbRow [ <str> ] ) brainArea = dbRow [ <str> ] cellName = <str> . format ( subject , date , depth , tetrode , cluster ) print <str> . format ( cellName ) plt . clf ( ) pinp_report . plot_pinp_report ( dbRow , useModifiedClusters = True ) figsize = ( 9 , 11 ) plt . gcf ( ) . set_size_inches ( figsize ) fullDir = os . path . join ( reportDirFreq , brainArea ) if not os . path . exists ( fullDir ) :          os . mkdir ( fullDir )  fullName = os . path . join ( fullDir , cellName ) plt . savefig ( fullName , format = <str> )   