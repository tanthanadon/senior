import os import numpy as np from matplotlib import pyplot as plt from jaratoolbox import colorpalette as cp from jaratoolbox import extraplots from jaratoolbox import settings import matplotlib . gridspec as gridspec import matplotlib import matplotlib . lines as mlines import figparams import matplotlib . patches as mpatches FIGNAME = <str> dataDir = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME , FIGNAME ) matplotlib . rcParams [ <str> ] = <str> matplotlib . rcParams [ <str> ] = <str> SAVE_FIGURE = 1 outputDir = <str> figFilename = <str> figFormat = <str> figSize = [ 8 , 6 ] fontSizeLabels = figparams . fontSizeLabels fontSizeTicks = figparams . fontSizeTicks fontSizePanel = figparams . fontSizePanel labelDis = 0.1 labelPosX = [ 0.07 , 0.45 ] labelPosY = [ 0.9 , 0.45 ] fig = plt . gcf ( ) fig . clf ( ) fig . set_facecolor ( <str> ) gs = gridspec . GridSpec ( 1 , 2 ) gs . update ( left = 0.15 , right = 0.85 , wspace = 0.5 , hspace = 0.5 ) alphaLevel = 0.05 numFreqs = 16 bonferroniCorrectedAlphaLevel = alphaLevel / numFreqs summaryFilename = <str> summaryFullPath = os . path . join ( dataDir , summaryFilename ) summary = np . load ( summaryFullPath ) cellSelectorBoolArray = summary [ <str> ] bestFreqEachCell = summary [ <str> ] [ cellSelectorBoolArray ] maxZscoreEachCell = summary [ <str> ] [ cellSelectorBoolArray ] responseIndEachCell = summary [ <str> ] [ cellSelectorBoolArray ] freqSelective = ( summary [ <str> ] [ cellSelectorBoolArray ] <= alphaLevel ) sigSoundResponse = ( summary [ <str> ] [ cellSelectorBoolArray ] <= bonferroniCorrectedAlphaLevel ) ax1 = plt . subplot ( gs [ 0 , 0 ] ) plt . hist ( ( responseIndEachCell [ sigSoundResponse ] , responseIndEachCell [ ~ sigSoundResponse ] ) , color = [ <str> , <str> ] , bins = 20 ) plt . xlabel ( <str> ) plt . ylabel ( <str> ) sig_patch = mpatches . Patch ( color = <str> , label = <str> ) nonsig_patch = mpatches . Patch ( color = <str> , label = <str> ) plt . legend ( handles = [ sig_patch , nonsig_patch ] , loc = <str> , fontsize = fontSizeTicks , frameon = False , labelspacing = 0.1 , handlelength = 0.2 ) ax2 = plt . subplot ( gs [ 0 , 1 ] ) plt . hist ( ( bestFreqEachCell [ freqSelective ] , bestFreqEachCell [ ~ freqSelective ] ) , color = [ <str> , <str> ] , bins = 20 ) plt . xlabel ( <str> ) plt . ylabel ( <str> ) sig_patch = mpatches . Patch ( color = <str> , label = <str> ) nonsig_patch = mpatches . Patch ( color = <str> , label = <str> ) plt . legend ( handles = [ sig_patch , nonsig_patch ] , loc = <str> , fontsize = fontSizeTicks , frameon = False , labelspacing = 0.1 , handlelength = 0.2 ) plt . show ( ) if SAVE_FIGURE :      extraplots . save_figure ( figFilename , figFormat , figSize , outputDir )  numCells = sum ( cellSelectorBoolArray ) numSoundResCells = sum ( sigSoundResponse . astype ( int ) ) print 100 * float ( numSoundResCells ) / numCells , <str> numFreqSelectiveCells = sum ( freqSelective . astype ( int ) ) print 100 * float ( numFreqSelectiveCells ) / numCells , <str>  