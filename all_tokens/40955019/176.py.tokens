import os import numpy as np from jaratoolbox import settings from jaratoolbox import celldatabase from scipy import stats import pandas as pd import re import ipdb import figparams from jaratoolbox import histologyanalysis as ha from allensdk . core . mouse_connectivity_cache import MouseConnectivityCache dbPath = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME , <str> ) db = celldatabase . load_hdf ( dbPath ) mcc = MouseConnectivityCache ( resolution = 25 ) rsp = mcc . get_reference_space ( ) rspAnnotationVolumeRotated = np . rot90 ( rsp . annotation , 1 , axes = ( 2 , 0 ) ) areas = [ ] goodISI = db . query ( <str> ) goodShape = goodISI . query ( <str> ) goodLaser = goodShape . query ( <str> ) goodPulseLatency = goodLaser . query ( <str> ) goodNSpikes = goodPulseLatency . query ( <str> ) goodSoundResponsiveBool = ( ~ pd . isnull ( goodNSpikes [ <str> ] ) ) | ( ~ pd . isnull ( goodNSpikes [ <str> ] ) ) | ( goodNSpikes [ <str> ] < 0.05 ) goodSoundResponsive = goodNSpikes [ goodSoundResponsiveBool ] ac = goodSoundResponsive . groupby ( <str> ) . get_group ( <str> ) thal = goodSoundResponsive . groupby ( <str> ) . get_group ( <str> ) dataframe = ac for indRow , dbRow in dataframe . iterrows ( ) :      if not pd . isnull ( dbRow [ <str> ] ) :          try :              thisCoordID = rspAnnotationVolumeRotated [ int ( dbRow [ <str> ] ) , int ( dbRow [ <str> ] ) , int ( dbRow [ <str> ] ) ]  except IndexError :              print <str> . format ( indRow )  if thisCoordID != 0 :              structDict = rsp . structure_tree . get_structures_by_id ( [ thisCoordID ] ) structName = [ d [ <str> ] for d in structDict ] [ 0 ]  else :              structName = <str>   else :          structName = <str>  areas . append ( structName )  from collections import Counter  