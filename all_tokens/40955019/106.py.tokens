import os import numpy as np import matplotlib . pyplot as plt import matplotlib . gridspec as gridspec import matplotlib . colors from jaratoolbox import settings from jaratoolbox import extraplots import figparams import studyparams import model_suppression as suppmodel reload ( suppmodel ) FIGNAME = <str> dataDir = os . path . join ( settings . FIGURES_DATA_PATH , figparams . STUDY_NAME , FIGNAME ) SAVE_FIGURE = 1 outputDir = <str> figFilename = <str> figFormat = <str> figSize = [ 9 , 6 ] fontSizeLabels = figparams . fontSizeLabels fontSizeTicks = figparams . fontSizeTicks fontSizePanel = figparams . fontSizePanel fontSizeLegend = figparams . fontSizeLegend labelPosX = [ 0.005 , 0.31 , 0.64 ] labelPosY = [ 0.96 , 0.49 ] ExcColor = figparams . colp [ <str> ] Exclight = matplotlib . colors . colorConverter . to_rgba ( ExcColor , alpha = 0.5 ) PVcolor = figparams . colp [ <str> ] PVlight = matplotlib . colors . colorConverter . to_rgba ( PVcolor , alpha = 0.5 ) SOMcolor = figparams . colp [ <str> ] SOMlight = matplotlib . colors . colorConverter . to_rgba ( SOMcolor , alpha = 0.5 ) nCells = 101 wParams = { <str> : - 25 , <str> : 10 , <str> : - 25 , <str> : 20 , <str> : 100 , <str> : 5 } rfWidths = None net = suppmodel . Network ( nCells , wParams , rfWidths ) centerCellOutput , bandwidths , condLabels = net . simulate_inactivation ( ) maxFiringRate = np . max ( centerCellOutput [ 0 , : ] ) bandwidthsNormed = bandwidths / float ( wParams [ <str> ] ) fig = plt . gcf ( ) fig . clf ( ) fig . set_facecolor ( <str> ) gs = gridspec . GridSpec ( 2 , 3 , width_ratios = [ 0.8 , 0.8 , 1.1 ] , height_ratios = [ 1 , 1 ] ) gs . update ( top = 0.96 , left = 0.06 , right = 0.995 , bottom = 0.11 , wspace = 0.4 , hspace = 0.3 ) axCartoon = plt . subplot ( gs [ 0 , 0 : 2 ] ) axCartoon . set_axis_off ( ) axCartoon . annotate ( <str> , xy = ( labelPosX [ 0 ] , labelPosY [ 0 ] ) , xycoords = <str> , fontsize = fontSizePanel , fontweight = <str> ) lineWidth = 3 xLims = [ 0.7 , 3.4 ] axNoPV = plt . subplot ( gs [ 1 , 0 ] ) axNoPV . annotate ( <str> , xy = ( labelPosX [ 0 ] , labelPosY [ 1 ] ) , xycoords = <str> , fontsize = fontSizePanel , fontweight = <str> ) plt . plot ( bandwidthsNormed , centerCellOutput [ 0 , : ] / maxFiringRate , <str> , lw = lineWidth , color = ExcColor ) plt . plot ( bandwidthsNormed , centerCellOutput [ 1 , : ] / maxFiringRate , <str> , lw = lineWidth , color = PVcolor ) plt . xlim ( xLims ) plt . ylim ( bottom = - 0.1 ) plt . ylabel ( <str> , fontsize = fontSizeLabels ) plt . xlabel ( <str> , fontsize = fontSizeLabels ) plt . legend ( [ <str> , <str> ] , frameon = False , fontsize = fontSizeLegend , handlelength = 2.4 ) extraplots . boxoff ( axNoPV ) axNoSOM = plt . subplot ( gs [ 1 , 1 ] ) axNoSOM . annotate ( <str> , xy = ( labelPosX [ 1 ] , labelPosY [ 1 ] ) , xycoords = <str> , fontsize = fontSizePanel , fontweight = <str> ) plt . plot ( bandwidthsNormed , centerCellOutput [ 0 , : ] / maxFiringRate , <str> , lw = lineWidth , color = ExcColor ) plt . plot ( bandwidthsNormed , centerCellOutput [ 2 , : ] / maxFiringRate , <str> , lw = lineWidth , color = SOMcolor ) plt . xlim ( xLims ) plt . ylim ( bottom = - 0.1 ) plt . ylabel ( <str> , fontsize = fontSizeLabels ) plt . xlabel ( <str> , fontsize = fontSizeLabels ) plt . legend ( [ <str> , <str> ] , frameon = False , fontsize = fontSizeLegend , handlelength = 2.4 , loc = <str> ) extraplots . boxoff ( axNoSOM ) responseChangeFile = os . path . join ( dataDir , <str> ) responseChangeData = np . load ( responseChangeFile ) suppIndexVec = responseChangeData [ <str> ] changeAtPeakVec = responseChangeData [ <str> ] changeAtWNVec = responseChangeData [ <str> ] condLabels = responseChangeData [ <str> ] markerSize = 3 cellLabels = [ <str> , <str> ] axSuppIndex = plt . subplot ( gs [ 0 , 2 : ] ) axSuppIndex . annotate ( <str> , xy = ( labelPosX [ 2 ] , labelPosY [ 0 ] ) , xycoords = <str> , fontsize = fontSizePanel , fontweight = <str> ) l1 , = plt . plot ( suppIndexVec [ 0 ] , suppIndexVec [ 1 ] , <str> , mec = <str> , mfc = PVcolor , ms = 4 ) l2 , = plt . plot ( suppIndexVec [ 0 ] , suppIndexVec [ 2 ] , <str> , mec = SOMcolor , mfc = <str> , ms = 3.2 , markeredgewidth = 1.2 , zorder = 2 ) plt . legend ( [ l1 , l2 ] , cellLabels , loc = <str> , fontsize = fontSizeLegend , numpoints = 1 , handlelength = 0.3 , markerscale = 1.7 , frameon = False , ) xLims = [ - 0.1 , 1.1 ] plt . plot ( xLims , xLims , <str> , zorder = 10 ) plt . xlim ( xLims ) plt . ylim ( xLims ) plt . xlabel ( <str> , fontsize = fontSizeLabels ) plt . ylabel ( <str> , fontsize = fontSizeLabels ) axSuppIndex . set ( adjustable = <str> , aspect = <str> ) extraplots . boxoff ( axSuppIndex ) axChange = plt . subplot ( gs [ 1 , 2 : ] ) axChange . annotate ( <str> , xy = ( labelPosX [ 2 ] , labelPosY [ 1 ] ) , xycoords = <str> , fontsize = fontSizePanel , fontweight = <str> ) l1 , = plt . plot ( changeAtPeakVec [ 0 , : ] , changeAtWNVec [ 0 , : ] , <str> , mec = <str> , mfc = PVcolor , ms = 4 , zorder = 10 ) l2 , = plt . plot ( changeAtPeakVec [ 1 , : ] , changeAtWNVec [ 1 , : ] , <str> , mec = SOMcolor , mfc = <str> , ms = 3.2 , markeredgewidth = 1.2 ) plt . legend ( [ l1 , l2 ] , cellLabels , loc = <str> , fontsize = fontSizeLegend , numpoints = 1 , handlelength = 0.3 , markerscale = 1.7 , frameon = False , ) xLims = [ - 50 , 1500 ] plt . plot ( xLims , xLims , <str> , zorder = 11 ) plt . xlabel ( <str> , fontsize = fontSizeLabels ) plt . ylabel ( <str> , fontsize = fontSizeLabels ) plt . locator_params ( axis = <str> , nbins = 5 ) plt . locator_params ( axis = <str> , nbins = 5 ) axChange . set ( adjustable = <str> , aspect = <str> ) plt . xlim ( xLims ) plt . ylim ( xLims ) extraplots . boxoff ( axChange ) if SAVE_FIGURE :      extraplots . save_figure ( figFilename , figFormat , figSize , outputDir )   