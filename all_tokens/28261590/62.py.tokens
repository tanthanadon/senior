import os . path from tempfile import NamedTemporaryFile , mkdtemp import shutil import logging log = logging . getLogger ( __name__ ) from hicexplorer import hicQuickQC ROOT = os . path . join ( os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ ) ) ) , <str> ) sam_R1 = ROOT + <str> sam_R2 = ROOT + <str> def are_files_equal ( file1 , file2 , delta = None ) :      equal = True if delta :          mismatches = 0  with open ( file1 ) as textfile1 , open ( file2 ) as textfile2 :          for x , y in zip ( textfile1 , textfile2 ) :              if x . startswith ( <str> ) :                  continue  if x != y :                  if delta :                      mismatches += 1 if mismatches > delta :                          equal = False break   else :                      equal = False break     return equal  def test_main ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , delete = False ) outfile . close ( ) qc_folder = mkdtemp ( prefix = <str> ) args = <str> . format ( sam_R1 , sam_R2 , qc_folder , <str> ) . split ( ) hicQuickQC . main ( args ) print ( set ( os . listdir ( ROOT + <str> ) ) ) assert are_files_equal ( ROOT + <str> , qc_folder + <str> ) assert set ( os . listdir ( ROOT + <str> ) ) == set ( os . listdir ( qc_folder ) ) shutil . rmtree ( qc_folder )   