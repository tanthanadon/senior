import warnings warnings . simplefilter ( action = <str> , category = RuntimeWarning ) warnings . simplefilter ( action = <str> , category = PendingDeprecationWarning ) from tempfile import NamedTemporaryFile import matplotlib as mpl mpl . use ( <str> ) from matplotlib . testing . compare import compare_images import os . path import pytest from psutil import virtual_memory mem = virtual_memory ( ) memory = mem . total / 2 ** 30 import hicexplorer . hicPlotMatrix tolerance = 60 ROOT = os . path . join ( os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ ) ) ) , <str> ) LOW_MEMORY = 2 MID_MEMORY = 7 HIGH_MEMORY = 200 REMOVE_OUTPUT = True @ pytest . mark . skipif ( MID_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_region_region2_log1p_clearMaskedBins_and_bigwig ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name , ROOT + <str> ) . split ( ) test_image_path = ROOT + <str> + <str> hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( test_image_path , outfile . name , tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( MID_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_region_region2_log1p_clearMaskedBins_and_bigwig_vmin_vmax ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name , ROOT + <str> , 0 , 1 ) . split ( ) test_image_path = ROOT + <str> + <str> hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( test_image_path , outfile . name , tolerance ) assert res is None , res  @ pytest . mark . skipif ( MID_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_region_region2_log1p_clearMaskedBins_and_bigwig_vmin_vmax_vertical ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name , ROOT + <str> , 0 , 1 ) . split ( ) test_image_path = ROOT + <str> + <str> hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( test_image_path , outfile . name , tolerance ) assert res is None , res  @ pytest . mark . skipif ( MID_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_region_region2_log_no_clearMaskedBins_and_bigwig ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name , ROOT + <str> ) . split ( ) test_image_path = ROOT + <str> + <str> hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( test_image_path , outfile . name , tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( MID_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_region_region2_no_clearMaskedBins ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) test_image_path = ROOT + <str> + <str> hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( test_image_path , outfile . name , tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( MID_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_region_region2_no_clearMaskedBins_title ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) title = <str> args = <str> <str> . format ( ROOT , outfile . name , title ) . split ( ) test_image_path = ROOT + <str> + <str> hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( test_image_path , outfile . name , tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( MID_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_cool_region1_region2 ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_cool_region1 ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_h5_region1 ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( HIGH_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_cool_log1p ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( HIGH_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_cool_log ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( HIGH_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_cool_full ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( HIGH_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_h5_log1p ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( HIGH_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_h5_log ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( HIGH_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_h5_full ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_cool_log_region1_region2 ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_cool_log_region1_region2_without_cool_suffix ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_cool_log1p_region1_region2 ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_perChr ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_cool_perChr_log1p ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_h5_perChr_log1p_chromosomeOrder ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_cool_perChr_log1p_chromosomeOrder ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_perChr_pca1_bigwig ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name , ROOT + <str> ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_perChr_pca1_bigwig_two_bigwig ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name , ROOT + <str> ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . xfail @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_perChr_pca1_bigwig_two_bigwig_fail ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name , ROOT + <str> ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_perChr_pca1_bigwig_vertical ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name , ROOT + <str> ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_region_pca1_colormap_bigwig ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name , ROOT + <str> ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )   @ pytest . mark . skipif ( LOW_MEMORY > memory , reason = <str> ) def test_hicPlotMatrix_region_start_end_pca1_colormap_bigwig ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) args = <str> <str> . format ( ROOT , outfile . name , ROOT + <str> ) . split ( ) hicexplorer . hicPlotMatrix . main ( args ) res = compare_images ( ROOT + <str> + <str> , outfile . name , tol = tolerance ) assert res is None , res if REMOVE_OUTPUT :          os . remove ( outfile . name )    