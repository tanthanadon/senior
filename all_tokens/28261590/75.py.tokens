import warnings warnings . simplefilter ( action = <str> , category = RuntimeWarning ) warnings . simplefilter ( action = <str> , category = PendingDeprecationWarning ) import pytest from tempfile import NamedTemporaryFile , mkdtemp import os import shutil from psutil import virtual_memory from hicexplorer import hicBuildMatrix as hicBuildMatrix mem = virtual_memory ( ) memory = mem . total / 2 ** 30 LOW_MEMORY = 2 MID_MEMORY = 7 HIGH_MEMORY = 200 REMOVE_OUTPUT = True ROOT = os . path . join ( os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ ) ) ) , <str> ) sam_R1 = ROOT + <str> sam_R2 = ROOT + <str> bam_R1 = ROOT + <str> bam_R2 = ROOT + <str> dpnii_file = ROOT + <str> outFile = NamedTemporaryFile ( suffix = <str> , delete = False ) qc_folder = mkdtemp ( prefix = <str> ) @ pytest . mark . parametrize ( <str> , [ bam_R1 ] ) @ pytest . mark . parametrize ( <str> , [ bam_R2 ] ) @ pytest . mark . parametrize ( <str> , [ outFile ] ) @ pytest . mark . parametrize ( <str> , [ qc_folder ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ 100000 ] ) @ pytest . mark . parametrize ( <str> , [ dpnii_file ] ) @ pytest . mark . parametrize ( <str> , [ 150 ] ) @ pytest . mark . parametrize ( <str> , [ 1500 ] ) @ pytest . mark . parametrize ( <str> , [ 1500 ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ True ] ) @ pytest . mark . parametrize ( <str> , [ 15 ] ) @ pytest . mark . parametrize ( <str> , [ 4 ] ) @ pytest . mark . parametrize ( <str> , [ 400000 ] ) def test_build_matrix_restrictionCutFile_five ( sam1 , sam2 , outFile , qcFolder , outBam , binSize , restrictionCutFile , minDistance , maxDistance , maxLibraryInsertSize , restrictionSequence , danglingSequence , region , removeSelfLigation , minMappingQuality , threads , inputBufferSize ) :      args = <str> <str> <str> <str> <str> <str> <str> . format ( bam_R1 , bam_R2 , restrictionCutFile , outFile . name , qcFolder , restrictionSequence , danglingSequence , minDistance , maxLibraryInsertSize , threads , removeSelfLigation , minMappingQuality ) . split ( ) hicBuildMatrix . main ( args ) os . unlink ( outFile . name ) shutil . rmtree ( qcFolder )  @ pytest . mark . parametrize ( <str> , [ bam_R1 ] ) @ pytest . mark . parametrize ( <str> , [ bam_R2 ] ) @ pytest . mark . parametrize ( <str> , [ outFile ] ) @ pytest . mark . parametrize ( <str> , [ qc_folder ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ 100000 ] ) @ pytest . mark . parametrize ( <str> , [ dpnii_file ] ) @ pytest . mark . parametrize ( <str> , [ 150 ] ) @ pytest . mark . parametrize ( <str> , [ 1500 ] ) @ pytest . mark . parametrize ( <str> , [ 1500 ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ True ] ) @ pytest . mark . parametrize ( <str> , [ 15 ] ) @ pytest . mark . parametrize ( <str> , [ 4 ] ) @ pytest . mark . parametrize ( <str> , [ 400000 ] ) def test_build_matrix_restrictionCutFile_six ( sam1 , sam2 , outFile , qcFolder , outBam , binSize , restrictionCutFile , minDistance , maxDistance , maxLibraryInsertSize , restrictionSequence , danglingSequence , region , removeSelfLigation , minMappingQuality , threads , inputBufferSize ) :      args = <str> <str> <str> <str> <str> <str> <str> . format ( bam_R1 , bam_R2 , restrictionCutFile , outFile . name , qcFolder , restrictionSequence , danglingSequence , minDistance , maxLibraryInsertSize , threads , removeSelfLigation , minMappingQuality , inputBufferSize ) . split ( ) hicBuildMatrix . main ( args ) os . unlink ( outFile . name ) shutil . rmtree ( qcFolder )  @ pytest . mark . parametrize ( <str> , [ bam_R1 ] ) @ pytest . mark . parametrize ( <str> , [ bam_R2 ] ) @ pytest . mark . parametrize ( <str> , [ outFile ] ) @ pytest . mark . parametrize ( <str> , [ qc_folder ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ 100000 ] ) @ pytest . mark . parametrize ( <str> , [ dpnii_file ] ) @ pytest . mark . parametrize ( <str> , [ 150 ] ) @ pytest . mark . parametrize ( <str> , [ 1500 ] ) @ pytest . mark . parametrize ( <str> , [ 1500 ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ True ] ) @ pytest . mark . parametrize ( <str> , [ 15 ] ) @ pytest . mark . parametrize ( <str> , [ 4 ] ) @ pytest . mark . parametrize ( <str> , [ 400000 ] ) def test_build_matrix_restrictionCutFile_seven ( sam1 , sam2 , outFile , qcFolder , outBam , binSize , restrictionCutFile , minDistance , maxDistance , maxLibraryInsertSize , restrictionSequence , danglingSequence , region , removeSelfLigation , minMappingQuality , threads , inputBufferSize ) :      args = <str> <str> <str> <str> <str> <str> <str> <str> . format ( bam_R1 , bam_R2 , restrictionCutFile , outFile . name , qcFolder , restrictionSequence , danglingSequence , minDistance , maxLibraryInsertSize , threads , removeSelfLigation , minMappingQuality , inputBufferSize ) . split ( ) hicBuildMatrix . main ( args ) shutil . rmtree ( qcFolder )  @ pytest . mark . parametrize ( <str> , [ bam_R1 ] ) @ pytest . mark . parametrize ( <str> , [ bam_R2 ] ) @ pytest . mark . parametrize ( <str> , [ outFile ] ) @ pytest . mark . parametrize ( <str> , [ qc_folder ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ 100000 ] ) @ pytest . mark . parametrize ( <str> , [ dpnii_file ] ) @ pytest . mark . parametrize ( <str> , [ 150 ] ) @ pytest . mark . parametrize ( <str> , [ 1500 ] ) @ pytest . mark . parametrize ( <str> , [ 1500 ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ <str> ] ) @ pytest . mark . parametrize ( <str> , [ True ] ) @ pytest . mark . parametrize ( <str> , [ 15 ] ) @ pytest . mark . parametrize ( <str> , [ 4 ] ) @ pytest . mark . parametrize ( <str> , [ 400000 ] ) def test_build_matrix_restrictionCutFile_eight ( sam1 , sam2 , outFile , qcFolder , outBam , binSize , restrictionCutFile , minDistance , maxDistance , maxLibraryInsertSize , restrictionSequence , danglingSequence , region , removeSelfLigation , minMappingQuality , threads , inputBufferSize ) :      args = <str> <str> <str> <str> <str> <str> <str> <str> . format ( bam_R1 , bam_R2 , restrictionCutFile , outFile . name , qcFolder , restrictionSequence , danglingSequence , minDistance , maxLibraryInsertSize , threads , removeSelfLigation , minMappingQuality , inputBufferSize ) . split ( ) hicBuildMatrix . main ( args ) shutil . rmtree ( qcFolder )   