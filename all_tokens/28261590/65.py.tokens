import warnings warnings . simplefilter ( action = <str> , category = RuntimeWarning ) warnings . simplefilter ( action = <str> , category = PendingDeprecationWarning ) import os from tempfile import NamedTemporaryFile from hicexplorer import hicAverageRegions import numpy . testing as nt from scipy . sparse import load_npz import logging log = logging . getLogger ( __name__ ) ROOT = os . path . join ( os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ ) ) ) , <str> ) def test_average_regions ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) matrix = ROOT + <str> bed_file = ROOT + <str> args = <str> . format ( matrix , bed_file , outfile . name ) . split ( ) log . debug ( <str> . format ( matrix ) ) hicAverageRegions . main ( args ) test_file = load_npz ( ROOT + <str> ) new_file = load_npz ( outfile . name ) nt . assert_almost_equal ( test_file . data , new_file . data , decimal = 0 ) os . remove ( outfile . name )  def test_average_regions_range_in_bins ( ) :      outfile = NamedTemporaryFile ( suffix = <str> , prefix = <str> , delete = False ) matrix = ROOT + <str> bed_file = ROOT + <str> args = <str> . format ( matrix , bed_file , outfile . name ) . split ( ) hicAverageRegions . main ( args ) test_file = load_npz ( ROOT + <str> ) new_file = load_npz ( outfile . name ) nt . assert_almost_equal ( test_file . data , new_file . data , decimal = 0 ) os . remove ( outfile . name )   