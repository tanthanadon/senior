from functools import partial import pytest import electrumx . lib . hash as lib_hash def test_sha256 ( ) :      assert lib_hash . sha256 ( <str> ) == <str> with pytest . raises ( TypeError ) :          lib_hash . sha256 ( <str> )   def ripemd160 ( x ) :      assert lib_hash . ripemd160 ( <str> ) == <str> with pytest . raises ( TypeError ) :          lib_hash . ripemd160 ( <str> )   def test_double_sha256 ( ) :      assert lib_hash . double_sha256 ( <str> ) == <str>  def test_hmac_sha512 ( ) :      assert lib_hash . hmac_sha512 ( <str> , <str> ) == <str>  def test_hash160 ( ) :      assert lib_hash . hash160 ( <str> ) == <str>  def test_hash_to_hex_str ( ) :      assert lib_hash . hash_to_hex_str ( <str> ) == <str>  def test_hex_str_to_hash ( ) :      assert lib_hash . hex_str_to_hash ( <str> ) == <str>  def test_Base58_char_value ( ) :      chars = <str> for value , c in enumerate ( chars ) :          assert lib_hash . Base58 . char_value ( c ) == value  for c in ( <str> , <str> , <str> , <str> , <str> ) :          with pytest . raises ( lib_hash . Base58Error ) :              lib_hash . Base58 . char_value ( c )    def test_Base58_decode ( ) :      with pytest . raises ( TypeError ) :          lib_hash . Base58 . decode ( <str> )  with pytest . raises ( lib_hash . Base58Error ) :          lib_hash . Base58 . decode ( <str> )  assert lib_hash . Base58 . decode ( <str> ) == <str> assert lib_hash . Base58 . decode ( <str> ) == <str>  def test_Base58_encode ( ) :      with pytest . raises ( TypeError ) :          lib_hash . Base58 . encode ( <str> )  assert lib_hash . Base58 . encode ( <str> ) == <str> assert lib_hash . Base58 . encode ( <str> ) == <str> assert lib_hash . Base58 . encode ( <str> ) == <str>  def test_Base58_decode_check ( ) :      with pytest . raises ( TypeError ) :          lib_hash . Base58 . decode_check ( <str> )  assert lib_hash . Base58 . decode_check ( <str> ) == <str> with pytest . raises ( lib_hash . Base58Error ) :          lib_hash . Base58 . decode_check ( <str> )   def test_Base58_encode_check ( ) :      with pytest . raises ( TypeError ) :          lib_hash . Base58 . encode_check ( <str> )  assert lib_hash . Base58 . encode_check ( <str> ) == <str>  def test_Base58_decode_check_custom ( ) :      decode_check_sha256 = partial ( lib_hash . Base58 . decode_check , hash_fn = lib_hash . sha256 ) with pytest . raises ( TypeError ) :          decode_check_sha256 ( <str> )  assert decode_check_sha256 ( <str> ) == <str> with pytest . raises ( lib_hash . Base58Error ) :          decode_check_sha256 ( <str> )   def test_Base58_encode_check_custom ( ) :      encode_check_sha256 = partial ( lib_hash . Base58 . encode_check , hash_fn = lib_hash . sha256 ) with pytest . raises ( TypeError ) :          encode_check_sha256 ( <str> )  assert encode_check_sha256 ( <str> ) == <str>   