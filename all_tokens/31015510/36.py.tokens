def patch_tender_question ( self ) :      response = self . app . post_json ( <str> . format ( self . tender_id ) , { <str> : { <str> : <str> , <str> : <str> , <str> : self . test_bids_data [ 0 ] [ <str> ] [ 0 ] } } ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) question = response . json [ <str> ] response = self . app . patch_json ( <str> . format ( self . tender_id , question [ <str> ] , self . tender_token ) , { <str> : { <str> : <str> } } ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( response . json [ <str> ] [ <str> ] , <str> ) response = self . app . patch_json ( <str> . format ( self . tender_id ) , { <str> : { <str> : <str> } } , status = 404 ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( response . json [ <str> ] , <str> ) self . assertEqual ( response . json [ <str> ] , [ { <str> : <str> , <str> : <str> , <str> : <str> } ] ) response = self . app . patch_json ( <str> , { <str> : { <str> : <str> } } , status = 404 ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( response . json [ <str> ] , <str> ) self . assertEqual ( response . json [ <str> ] , [ { <str> : <str> , <str> : <str> , <str> : <str> } ] ) response = self . app . get ( <str> . format ( self . tender_id , question [ <str> ] ) ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( response . json [ <str> ] [ <str> ] , <str> ) self . time_shift ( <str> ) self . check_chronograph ( ) response = self . app . patch_json ( <str> . format ( self . tender_id , question [ <str> ] , self . tender_token ) , { <str> : { <str> : <str> } } , status = 403 ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( response . json [ <str> ] [ 0 ] [ <str> ] , <str> )  def answering_question ( self ) :      response = self . app . post_json ( <str> . format ( self . tender_id ) , { <str> : { <str> : <str> , <str> : <str> , <str> : self . test_bids_data [ 0 ] [ <str> ] [ 0 ] } } ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) question = response . json [ <str> ] response = self . app . patch_json ( <str> . format ( self . tender_id , question [ <str> ] , self . tender_token ) , { <str> : { <str> : <str> } } ) self . assertEqual ( response . status , <str> ) self . assertEqual ( response . content_type , <str> ) self . assertEqual ( response . json [ <str> ] [ <str> ] , <str> ) self . assertIn ( <str> , response . json [ <str> ] ) question [ <str> ] = <str> question [ <str> ] = response . json [ <str> ] [ <str> ] self . time_shift ( <str> ) self . check_chronograph ( )   