import unittest from openprocurement . api . tests . base import snitch from openprocurement . tender . belowthreshold . tests . base import test_organization from openprocurement . tender . belowthreshold . tests . chronograph_blanks import ( switch_to_unsuccessful , ) from openprocurement . tender . openeu . tests . base import ( BaseTenderContentWebTest , test_bids , test_lots ) from openprocurement . tender . openeu . tests . chronograph_blanks import ( switch_to_complaint , switch_to_auction , pre_qual_switch_to_auction , pre_qual_switch_to_stand_still , active_tendering_to_pre_qual , ) from openprocurement . tender . openua . tests . chronograph_blanks import ( set_auction_period_0bid as set_auction_period , set_auction_period_lot_0bid as set_auction_period_lot , ) class TenderSwitchPreQualificationResourceTest ( BaseTenderContentWebTest ) :      initial_status = <str> initial_bids = test_bids test_switch_to_pre_qual = snitch ( active_tendering_to_pre_qual ) test_switch_to_auction = snitch ( pre_qual_switch_to_auction ) test_switch_to_stand_still = snitch ( pre_qual_switch_to_stand_still )  class TenderSwitchAuctionResourceTest ( BaseTenderContentWebTest ) :      initial_status = <str> initial_bids = test_bids test_switch_to_auction = snitch ( switch_to_auction )  class TenderSwitchUnsuccessfulResourceTest ( BaseTenderContentWebTest ) :      initial_status = <str> test_switch_to_unsuccessful = snitch ( switch_to_unsuccessful )  class TenderLotSwitchPreQualificationResourceTest ( TenderSwitchPreQualificationResourceTest ) :      initial_lots = test_lots  class TenderLotSwitchAuctionResourceTest ( TenderSwitchAuctionResourceTest ) :      initial_status = <str> initial_lots = test_lots initial_bids = test_bids  class TenderLotSwitchUnsuccessfulResourceTest ( TenderSwitchUnsuccessfulResourceTest ) :      initial_status = <str> initial_lots = test_lots  class TenderAuctionPeriodResourceTest ( BaseTenderContentWebTest ) :      initial_status = <str> test_set_auction_period = snitch ( set_auction_period )  class TenderLotAuctionPeriodResourceTest ( BaseTenderContentWebTest ) :      initial_status = <str> initial_lots = test_lots test_set_auction_period = snitch ( set_auction_period_lot )  class TenderComplaintSwitchResourceTest ( BaseTenderContentWebTest ) :      initial_status = <str> initial_bids = test_bids author_data = test_organization test_switch_to_complaint = snitch ( switch_to_complaint )  class TenderLotComplaintSwitchResourceTest ( TenderComplaintSwitchResourceTest ) :      initial_lots = test_lots  def suite ( ) :      suite = unittest . TestSuite ( ) suite . addTest ( unittest . makeSuite ( TenderComplaintSwitchResourceTest ) ) suite . addTest ( unittest . makeSuite ( TenderLotComplaintSwitchResourceTest ) ) suite . addTest ( unittest . makeSuite ( TenderLotSwitchAuctionResourceTest ) ) suite . addTest ( unittest . makeSuite ( TenderLotSwitchUnsuccessfulResourceTest ) ) suite . addTest ( unittest . makeSuite ( TenderSwitchAuctionResourceTest ) ) suite . addTest ( unittest . makeSuite ( TenderSwitchQualificationResourceTest ) ) suite . addTest ( unittest . makeSuite ( TenderSwitchUnsuccessfulResourceTest ) ) return suite  if __name__ == <str> :      unittest . main ( defaultTest = <str> )   