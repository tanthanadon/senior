from __future__ import print_function import csv from genestack_client import ( BioMetaKeys , DataImporter , GenestackException , Metainfo , get_connection , make_connection_parser , unaligned_reads ) MANDATORY_KEYS = [ <str> , <str> ] SPECIAL_KEYS = { <str> : Metainfo . NAME , <str> : BioMetaKeys . ORGANISM , <str> : BioMetaKeys . METHOD , <str> : BioMetaKeys . SEX , <str> : BioMetaKeys . CELL_LINE } parser = make_connection_parser ( ) parser . add_argument ( <str> , help = <str> ) parser . add_argument ( <str> , help = <str> ) parser . add_argument ( <str> , help = <str> ) args = parser . parse_args ( ) csv_input = args . csv_file print ( <str> ) connection = get_connection ( args ) importer = DataImporter ( connection ) file_format = unaligned_reads . compose_format_map ( unaligned_reads . Space . BASESPACE , unaligned_reads . Format . PHRED33 , unaligned_reads . Type . SINGLE ) experiment = importer . create_experiment ( name = args . name or <str> , description = args . description or <str> ) print ( <str> % experiment ) with open ( csv_input , <str> ) as the_file :      reader = csv . DictReader ( the_file , delimiter = <str> ) field_names = reader . fieldnames for mandatory_key in MANDATORY_KEYS :          if mandatory_key not in field_names :              raise GenestackException ( <str> % mandatory_key )   for file_data in reader :          metainfo = Metainfo ( ) for key in field_names :              if key == <str> :                  url = file_data [ key ] metainfo . add_external_link ( key = BioMetaKeys . READS_LINK , text = <str> , url = url , fmt = file_format )  elif key == <str> :                  metainfo . add_string ( BioMetaKeys . ORGANISM , file_data [ key ] )  else :                  metainfo_key = SPECIAL_KEYS . get ( key . lower ( ) , key ) metainfo . add_string ( metainfo_key , file_data [ key ] )   created_file = importer . create_sequencing_assay ( experiment , metainfo = metainfo ) print ( <str> % ( file_data [ <str> ] , created_file ) )   print ( <str> )  