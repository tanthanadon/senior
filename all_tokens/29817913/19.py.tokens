from odoo import _ from odoo . addons . connector . connector import ConnectorEnvironment from . unit . binder import CarepointBinder def unwrap_binding ( session , job , id_pos = 2 , binder_class = CarepointBinder ) :      binding_model = job . args [ 0 ] binding_id = job . args [ id_pos - 1 ] action = { <str> : _ ( <str> ) , <str> : <str> , <str> : <str> , <str> : <str> , } binding = session . env [ binding_model ] . browse ( binding_id ) if not binding . exists ( ) :          return None  env = ConnectorEnvironment ( binding . backend_id , session , binding_model ) binder = env . get_connector_unit ( binder_class ) try :          model = binder . unwrap_model ( ) record_id = binder . unwrap_binding ( binding_id )  except ValueError :          action . update ( { <str> : binding_model , <str> : binding_id , } )  else :          action . update ( { <str> : model , <str> : record_id , } )  return action   