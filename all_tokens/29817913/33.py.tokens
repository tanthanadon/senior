import mock from odoo . addons . connector_carepoint . unit import import_synchronizer from . common import SetUpCarepointBase model = <str> class EndTestException ( Exception ) :      pass  class TestBatchImporter ( SetUpCarepointBase ) :      def setUp ( self ) :          super ( TestBatchImporter , self ) . setUp ( ) self . Importer = import_synchronizer . BatchImporter self . model = <str> self . mock_env = self . get_carepoint_helper ( self . model )  def _new_importer ( self , carepoint_id = None , carepoint_record = None ) :          importer = self . Importer ( self . mock_env ) if carepoint_id is not None :              importer . carepoint_id = carepoint_id  if carepoint_record is not None :              importer . carepoint_record = carepoint_record  return importer  def test_run_search_no_filter ( self ) :          expect = { } importer = self . _new_importer ( ) with self . mock_adapter ( importer ) :              importer . backend_adapter . search . side_effect = EndTestException with self . assertRaises ( EndTestException ) :                  importer . run ( )  importer . backend_adapter . search . assert_called_once_with ( ** expect )   def test_run_search ( self ) :          expect = { <str> : 1234 , <str> : 45456 } importer = self . _new_importer ( ) with self . mock_adapter ( importer ) :              with mock . patch . object ( importer , <str> ) :                  importer . backend_adapter . search . side_effect = EndTestException with self . assertRaises ( EndTestException ) :                      importer . run ( expect )   importer . backend_adapter . search . assert_called_once_with ( ** expect )   def test_run_import ( self ) :          expect = [ <str> ] importer = self . _new_importer ( ) with self . mock_adapter ( importer ) :              with mock . patch . object ( importer , <str> ) :                  importer . backend_adapter . search . return_value = expect importer . _import_record . side_effect = EndTestException with self . assertRaises ( EndTestException ) :                      importer . run ( )  importer . _import_record . assert_called_once_with ( expect [ 0 ] )    def test_import_record ( self ) :          importer = self . _new_importer ( ) with self . assertRaises ( NotImplementedError ) :              importer . _import_record ( True )     