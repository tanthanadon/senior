from odoo . addons . connector_carepoint . unit import mapper from . common import SetUpCarepointBase class TestMapper ( SetUpCarepointBase ) :      def setUp ( self ) :          super ( TestMapper , self ) . setUp ( )  def _new_record ( self ) :          return { <str> : <str> , <str> : <str> , <str> : <str> , }  def test_trim ( self ) :          modifier = mapper . trim ( <str> ) rec = self . _new_record ( ) res = modifier ( False , rec , False ) self . assertEqual ( rec [ <str> ] . strip ( ) , res )  def test_trim_false ( self ) :          modifier = mapper . trim ( <str> ) rec = self . _new_record ( ) res = modifier ( False , rec , False ) self . assertFalse ( res )  def test_trim_and_titleize ( self ) :          modifier = mapper . trim_and_titleize ( <str> ) rec = self . _new_record ( ) res = modifier ( False , rec , False ) self . assertEqual ( rec [ <str> ] . strip ( ) . title ( ) , res )  def test_trim_and_titleize_false ( self ) :          modifier = mapper . trim_and_titleize ( <str> ) rec = self . _new_record ( ) res = modifier ( False , rec , False ) self . assertFalse ( res )  def test_to_float ( self ) :          modifier = mapper . to_float ( <str> ) rec = self . _new_record ( ) res = modifier ( False , rec , False ) self . assertEqual ( float ( rec [ <str> ] ) , res )  def test_to_float_false ( self ) :          modifier = mapper . to_float ( <str> ) rec = self . _new_record ( ) res = modifier ( False , rec , False ) self . assertFalse ( res )  def test_to_int ( self ) :          modifier = mapper . to_int ( <str> ) rec = self . _new_record ( ) res = modifier ( False , rec , False ) self . assertEqual ( int ( rec [ <str> ] ) , res )  def test_to_int_false ( self ) :          modifier = mapper . to_int ( <str> ) rec = self . _new_record ( ) res = modifier ( False , rec , False ) self . assertFalse ( res )  def test_add_to ( self ) :          modifier = mapper . add_to ( <str> , 1 ) rec = self . _new_record ( ) res = modifier ( False , rec , False ) self . assertEqual ( int ( rec [ <str> ] ) + 1 , res )    