from PyQt5 import QtWidgets from market . api . api import STATUS class BanksPortfolioController :      def __init__ ( self , mainwindow ) :          self . mainwindow = mainwindow self . table = self . mainwindow . fip_campaigns_table self . mainwindow . fip_search_lineedit . textChanged . connect ( self . set_filters ) self . mainwindow . fip_min_amount_lineedit . textChanged . connect ( self . set_filters ) self . mainwindow . fip_max_amount_lineedit . textChanged . connect ( self . set_filters ) self . mainwindow . fip_interest1_lineedit . textChanged . connect ( self . set_filters ) self . mainwindow . fip_interest2_lineedit . textChanged . connect ( self . set_filters ) self . mainwindow . fip_duration1_lineedit . textChanged . connect ( self . set_filters ) self . mainwindow . fip_duration2_lineedit . textChanged . connect ( self . set_filters )  def setup_view ( self ) :          self . table . setRowCount ( 0 ) mortgages = self . mainwindow . api . load_mortgages ( self . mainwindow . app . user ) if mortgages :              self . fill_table ( mortgages )   def fill_table ( self , mortgages ) :          for [ mortgage , house , campaign , profile ] in mortgages :              address = house . address + <str> + house . house_number + <str> + house . postal_code campaign_status = <str> mortgage_status = <str> if campaign :                  if campaign . completed :                      campaign_status = <str>  else :                      campaign_status = <str>   if mortgage . status == STATUS . PENDING :                  mortgage_status = <str>  elif mortgage . status == STATUS . ACCEPTED :                  mortgage_status = <str>  row_count = self . table . rowCount ( ) self . table . insertRow ( row_count ) self . table . setItem ( row_count , 0 , QtWidgets . QTableWidgetItem ( address ) ) self . table . setItem ( row_count , 1 , QtWidgets . QTableWidgetItem ( campaign_status ) ) self . table . setItem ( row_count , 2 , QtWidgets . QTableWidgetItem ( mortgage_status ) ) self . table . setItem ( row_count , 3 , QtWidgets . QTableWidgetItem ( str ( mortgage . amount ) ) ) self . table . setItem ( row_count , 4 , QtWidgets . QTableWidgetItem ( str ( mortgage . interest_rate ) ) ) self . table . setItem ( row_count , 5 , QtWidgets . QTableWidgetItem ( str ( mortgage . default_rate ) ) ) self . table . setItem ( row_count , 6 , QtWidgets . QTableWidgetItem ( str ( mortgage . duration ) ) ) self . table . setItem ( row_count , 7 , QtWidgets . QTableWidgetItem ( profile . first_name + <str> + profile . last_name ) ) self . table . setItem ( row_count , 8 , QtWidgets . QTableWidgetItem ( profile . iban ) )   def set_filters ( self ) :          self . mainwindow . filter_table ( self . table , self . mainwindow . fip_search_lineedit . text ( ) , 2 , self . mainwindow . fip_min_amount_lineedit . text ( ) , self . mainwindow . fip_max_amount_lineedit . text ( ) , 3 , self . mainwindow . fip_interest1_lineedit . text ( ) , self . mainwindow . fip_interest2_lineedit . text ( ) , 5 , self . mainwindow . fip_duration1_lineedit . text ( ) , self . mainwindow . fip_duration2_lineedit . text ( ) )    