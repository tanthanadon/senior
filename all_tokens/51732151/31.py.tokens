from market import Global from market . api . api import STATUS from market . models . loans import Mortgage , Investment , Campaign , LoanRequest class BorrowersPortfolioController :      def __init__ ( self , mainwindow ) :          self . mainwindow = mainwindow self . accepted_loans = None self . pending_loans = None self . accepted_table = self . mainwindow . bp_ongoing_loans_table self . pending_table = self . mainwindow . bp_open_offers_table self . mainwindow . bp_accept_pushbutton . clicked . connect ( self . accept_offer ) self . mainwindow . bp_reject_pushbutton . clicked . connect ( self . reject_offer )  def setup_view ( self ) :          self . accepted_table . setRowCount ( 0 ) self . pending_table . setRowCount ( 0 ) self . accepted_loans = self . mainwindow . api . load_borrowers_loans ( self . mainwindow . app . user ) self . pending_loans = self . mainwindow . api . load_borrowers_offers ( self . mainwindow . app . user ) self . add_accepted_loans ( ) self . add_pending_loans ( ) self . add_loan_status ( )  def add_loan_status ( self ) :          loan = self . mainwindow . api . load_borrowers_loan_status ( self . mainwindow . app . user ) if isinstance ( loan , Campaign ) :              if loan . completed :                  self . mainwindow . bp_status_label . setText ( <str> )  else :                  self . mainwindow . bp_status_label . setText ( <str> + str ( loan . amount ) + <str> )   elif isinstance ( loan , LoanRequest ) :              self . mainwindow . bp_status_label . setText ( <str> )  else :              self . mainwindow . bp_status_label . setText ( <str> )   def add_accepted_loans ( self ) :          for loan , profile in self . accepted_loans :              default_rate = <str> name = <str> iban = <str> if isinstance ( loan , Mortgage ) :                  default_rate = loan . default_rate for bank , bank_id in Global . BANKS . iteritems ( ) :                      if bank_id == loan . bank :                          name = bank    elif isinstance ( loan , Investment ) :                  name = profile . first_name + <str> + profile . last_name iban = profile . iban  self . mainwindow . insert_row ( self . accepted_table , [ loan . amount , loan . interest_rate , default_rate , loan . duration , loan . type , name , iban ] )   def add_pending_loans ( self ) :          for offer in self . pending_loans :              if isinstance ( offer , Mortgage ) :                  bank_name = <str> for bank , bank_id in Global . BANKS . iteritems ( ) :                      if bank_id == offer . bank :                          bank_name = bank   self . mainwindow . insert_row ( self . pending_table , [ offer . amount , offer . interest_rate , offer . default_rate , offer . duration , offer . type , bank_name ] )  elif isinstance ( offer , Investment ) :                  self . mainwindow . insert_row ( self . pending_table , [ offer . amount , offer . interest_rate , <str> , offer . duration , offer . type , <str> ] )    def accept_offer ( self ) :          try :              selected_row = self . pending_table . selectedIndexes ( ) [ 0 ] . row ( ) offer = self . pending_loans [ selected_row ] if offer . type == Investment . type :                  self . mainwindow . api . accept_investment_offer ( self . mainwindow . app . user , { <str> : offer . id } )  else :                  self . mainwindow . api . accept_mortgage_offer ( self . mainwindow . app . user , { <str> : offer . id } )  self . mainwindow . show_dialog ( <str> , <str> ) self . setup_view ( )  except IndexError :              self . mainwindow . show_dialog ( <str> , <str> )   def reject_offer ( self ) :          try :              selected_row = self . pending_table . selectedIndexes ( ) [ 0 ] . row ( ) offer = self . pending_loans [ selected_row ] if offer . type == Investment . type :                  self . mainwindow . api . reject_investment_offer ( self . mainwindow . app . user , { <str> : offer . id } )  else :                  self . mainwindow . api . reject_mortgage_offer ( self . mainwindow . app . user , { <str> : offer . id } )  self . mainwindow . show_dialog ( <str> , <str> ) self . setup_view ( )  except IndexError :              self . mainwindow . show_dialog ( <str> , <str> )     