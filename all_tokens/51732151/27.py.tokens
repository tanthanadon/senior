import ntpath import os import subprocess import sys from glob import glob from PyQt5 . QtWidgets import QPushButton from PyQt5 . QtWidgets import QTableWidgetItem class PendingLoanRequests2Controller :      def __init__ ( self , mainwindow ) :          self . mainwindow = mainwindow self . table = self . mainwindow . fiplr2_documents_table self . loan_request_id = None self . search = glob self . mainwindow . fiplr2_accept_pushbutton . clicked . connect ( self . accept_request ) self . mainwindow . fiplr2_reject_pushbutton . clicked . connect ( self . reject_request )  def setup_view ( self , loan_request_id ) :          self . loan_request_id = loan_request_id [ loan_request , borrower_profile , house ] = self . mainwindow . api . load_single_loan_request ( { <str> : loan_request_id } ) self . mainwindow . fiplr2_firstname_lineedit . setText ( str ( borrower_profile . first_name ) ) self . mainwindow . fiplr2_lastname_lineedit . setText ( str ( borrower_profile . last_name ) ) self . mainwindow . fiplr2_address_lineedit . setText ( str ( borrower_profile . current_address ) + <str> + str ( borrower_profile . current_house_number ) + <str> + str ( borrower_profile . current_postal_code ) ) self . mainwindow . fiplr2_phonenumber_lineedit . setText ( str ( borrower_profile . phone_number ) ) self . mainwindow . fiplr2_email_lineedit . setText ( str ( borrower_profile . email ) ) self . mainwindow . fiplr2_property_address_lineedit . setText ( str ( house . address ) + <str> + str ( house . house_number ) + <str> + str ( house . postal_code ) ) self . mainwindow . fiplr2_loan_amount_lineedit . setText ( str ( loan_request . amount_wanted ) ) mortgage_type = <str> if loan_request . mortgage_type == 1 :              mortgage_type = <str>  elif loan_request . mortgage_type == 2 :              mortgage_type = <str>  self . mainwindow . fiplr2_mortgage_type_lineedit . setText ( mortgage_type ) self . mainwindow . fiplr2_property_value_lineedit . setText ( str ( house . price ) ) self . mainwindow . fiplr2_description_textedit . setText ( str ( loan_request . description ) ) documents = self . search ( os . getcwd ( ) + <str> + str ( loan_request_id ) + <str> ) self . table . setRowCount ( 0 ) for i in range ( 0 , len ( documents ) ) :              self . table . insertRow ( i ) edit_button = QPushButton ( <str> ) edit_button . clicked . connect ( self . view_file ) edit_button . filepath = documents [ i ] self . table . setItem ( i , 0 , QTableWidgetItem ( str ( ntpath . basename ( documents [ i ] ) ) ) ) self . table . setCellWidget ( i , 1 , edit_button )   def view_file ( self ) :          filepath = self . mainwindow . sender ( ) . filepath if sys . platform . startswith ( <str> ) :              subprocess . call ( ( <str> , filepath ) )  elif os . name == <str> :              os . startfile ( filepath )  elif os . name == <str> :              subprocess . call ( ( <str> , filepath ) )   def reject_request ( self ) :          self . mainwindow . api . reject_loan_request ( self . mainwindow . app . user , { <str> : self . loan_request_id } ) self . mainwindow . show_dialog ( <str> , <str> ) self . mainwindow . navigation . switch_to_fiplr ( )  def accept_request ( self ) :          try :              payload = { <str> : self . loan_request_id , <str> : int ( self . mainwindow . fiplr2_offer_amount_lineedit . text ( ) ) , <str> : float ( self . mainwindow . fiplr2_offer_interest_lineedit . text ( ) ) , <str> : 0.0 , <str> : float ( self . mainwindow . fiplr2_default_rate_lineedit . text ( ) ) , <str> : int ( self . mainwindow . fiplr2_loan_duration_lineedit . text ( ) ) , <str> : <str> } for _ , value in payload . iteritems ( ) :                  if value == <str> :                      raise ValueError   self . mainwindow . api . accept_loan_request ( self . mainwindow . app . user , payload ) self . mainwindow . show_dialog ( <str> , <str> ) self . mainwindow . navigation . switch_to_fiplr ( )  except ValueError :              self . mainwindow . show_dialog ( <str> , <str> )     