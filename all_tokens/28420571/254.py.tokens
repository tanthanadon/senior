import numpy as np import odl space = odl . uniform_discr ( min_pt = [ - 20 , - 20 , - 20 ] , max_pt = [ 20 , 20 , 20 ] , shape = [ 200 , 200 , 200 ] , dtype = <str> ) geometry = odl . tomo . helical_geometry ( space , src_radius = 100 , det_radius = 100 , num_turns = 7.5 , num_angles = 1000 ) ray_trafo = odl . tomo . RayTransform ( space , geometry ) fbp = odl . tomo . fbp_op ( ray_trafo , filter_type = <str> , frequency_scaling = 0.8 ) windowed_fbp = fbp * odl . tomo . tam_danielson_window ( ray_trafo ) phantom = odl . phantom . shepp_logan ( space , modified = True ) proj_data = ray_trafo ( phantom ) fbp_reconstruction = fbp ( proj_data ) w_fbp_reconstruction = windowed_fbp ( proj_data ) phantom . show ( title = <str> , coords = [ 0 , None , None ] , clim = [ - 0.1 , 1.1 ] ) proj_data . show ( title = <str> ) fbp_reconstruction . show ( title = <str> , coords = [ 0 , None , None ] , clim = [ - 0.1 , 1.1 ] ) w_fbp_reconstruction . show ( title = <str> , coords = [ 0 , None , None ] , clim = [ - 0.1 , 1.1 ] , force_show = True )  