import numpy as np import odl from odl . contrib . datasets . util import get_data __all__ = ( <str> , <str> , <str> , <str> , <str> , <str> ) DATA_SUBSET = <str> def mri_head_data_4_channel ( ) :      url = <str> dct = get_data ( <str> , subset = DATA_SUBSET , url = url ) data = np . flip ( np . swapaxes ( dct [ <str> ] , 0 , - 1 ) * 4e4 , 2 ) return data  def mri_head_reco_op_4_channel ( ) :      space = odl . uniform_discr ( min_pt = [ - 115.2 , - 115.2 ] , max_pt = [ 115.2 , 115.2 ] , shape = [ 256 , 256 ] , dtype = complex ) trafo = odl . trafos . FourierTransform ( space ) return odl . ReductionOperator ( odl . ComplexModulus ( space ) * trafo . inverse , 4 )  def mri_head_data_32_channel ( ) :      url = <str> dct = get_data ( <str> , subset = DATA_SUBSET , url = url ) data = np . flip ( np . swapaxes ( dct [ <str> ] , 0 , - 1 ) * 7e3 , 2 ) return data  def mri_head_reco_op_32_channel ( ) :      space = odl . uniform_discr ( min_pt = [ - 115.2 , - 115.2 ] , max_pt = [ 115.2 , 115.2 ] , shape = [ 256 , 256 ] , dtype = complex ) trafo = odl . trafos . FourierTransform ( space ) return odl . ReductionOperator ( odl . ComplexModulus ( space ) * trafo . inverse , 32 )  def mri_knee_data_8_channel ( ) :      url = <str> dct = get_data ( <str> , subset = DATA_SUBSET , url = url ) data = np . flip ( np . swapaxes ( dct [ <str> ] , 0 , - 1 ) * 9e3 , 2 ) return data  def mri_knee_reco_op_8_channel ( ) :      space = odl . uniform_discr ( min_pt = [ - 74.88 , - 74.88 ] , max_pt = [ 74.88 , 74.88 ] , shape = [ 192 , 192 ] , dtype = complex ) trafo = odl . trafos . FourierTransform ( space ) return odl . ReductionOperator ( odl . ComplexModulus ( space ) * trafo . inverse , 8 )   