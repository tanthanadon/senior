import numpy as np import odl import timeit def performance_example ( ) :      fspace = odl . FunctionSpace ( odl . IntervalProd ( 0 , 1 ) ) f_vec = fspace . element ( lambda x : x ** 2 ) f_novec = fspace . element ( lambda x : x ** 2 , vectorized = False ) points = np . linspace ( 0 , 1 , 10000 ) print ( <str> <str> . format ( timeit . timeit ( lambda : f_vec ( points ) , number = 100 ) ) ) print ( <str> <str> . format ( timeit . timeit ( lambda : f_novec ( points ) , number = 100 ) ) )  def numba_example ( ) :      try :          import numba  except ImportError :          print ( <str> ) return  def myfunc ( x ) :          if x [ 0 ] > x [ 1 ] :              return x [ 0 ] - x [ 1 ]  else :              return x [ 0 ] + x [ 1 ]   vectorized = numba . vectorize ( lambda x , y : x - y if x > y else x + y ) def myfunc_vec ( x ) :          return vectorized ( x [ 0 ] , x [ 1 ] )  def myfunc_native_vec ( x ) :          return np . where ( x [ 0 ] > x [ 1 ] , x [ 0 ] - x [ 1 ] , x [ 0 ] + x [ 1 ] )  fspace = odl . FunctionSpace ( odl . IntervalProd ( [ 0 , 0 ] , [ 1 , 1 ] ) ) f_default = fspace . element ( myfunc , vectorized = False ) f_numba = fspace . element ( myfunc_vec ) f_native = fspace . element ( myfunc_native_vec , vectorized = True ) grid = odl . uniform_grid_fromintv ( fspace . domain , [ 2000 , 2000 ] ) points = grid . points ( ) . T mesh = grid . meshgrid print ( <str> <str> . format ( timeit . timeit ( lambda : f_default ( points ) , number = 1 ) ) ) print ( <str> <str> . format ( timeit . timeit ( lambda : f_default ( mesh ) , number = 1 ) ) ) print ( <str> <str> . format ( timeit . timeit ( lambda : f_numba ( points ) , number = 1 ) ) ) print ( <str> <str> . format ( timeit . timeit ( lambda : f_numba ( mesh ) , number = 1 ) ) ) print ( <str> <str> . format ( timeit . timeit ( lambda : f_native ( points ) , number = 1 ) ) ) print ( <str> <str> . format ( timeit . timeit ( lambda : f_native ( mesh ) , number = 1 ) ) )  if __name__ == <str> :      print ( <str> ) performance_example ( ) print ( <str> ) numba_example ( )   