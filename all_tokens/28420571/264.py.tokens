import numpy as np import odl reco_space = odl . uniform_discr ( min_pt = [ - 20 , - 20 , - 20 ] , max_pt = [ 20 , 20 , 20 ] , shape = [ 300 , 300 , 100 ] , dtype = <str> ) angle_partition = odl . uniform_partition ( 0 , np . pi , 180 ) detector_partition = odl . uniform_partition ( [ - 30 , - 30 ] , [ 30 , 30 ] , [ 500 , 500 ] ) geometry = odl . tomo . Parallel3dAxisGeometry ( angle_partition , detector_partition ) ray_trafo = odl . tomo . RayTransform ( reco_space , geometry ) phantom = odl . phantom . shepp_logan ( reco_space , modified = True ) proj_data = ray_trafo ( phantom ) backproj = ray_trafo . adjoint ( proj_data ) phantom . show ( coords = [ None , 0 , None ] , title = <str> ) backproj . show ( coords = [ None , 0 , None ] , title = <str> ) proj_data . show ( coords = [ 0 , None , None ] , title = <str> ) proj_data . show ( coords = [ None , None , 0 ] , title = <str> , force_show = True )  