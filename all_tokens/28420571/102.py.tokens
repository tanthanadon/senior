 from __future__ import print_function , division , absolute_import import numpy as np __all__ = ( <str> , <str> ) def moveaxis ( a , source , destination ) :      import numpy if hasattr ( numpy , <str> ) :          return numpy . moveaxis ( a , source , destination )  try :          source = list ( source )  except TypeError :          source = [ source ]  try :          destination = list ( destination )  except TypeError :          destination = [ destination ]  source = [ ax + a . ndim if ax < 0 else ax for ax in source ] destination = [ ax + a . ndim if ax < 0 else ax for ax in destination ] order = [ n for n in range ( a . ndim ) if n not in source ] for dest , src in sorted ( zip ( destination , source ) ) :          order . insert ( dest , src )  return a . transpose ( order )  def flip ( a , axis ) :      if not hasattr ( a , <str> ) :          a = np . asarray ( a )  indexer = [ slice ( None ) ] * a . ndim try :          indexer [ axis ] = slice ( None , None , - 1 )  except IndexError :          raise ValueError ( <str> <str> . format ( axis , a . ndim ) )  return a [ tuple ( indexer ) ]  if __name__ == <str> :      from odl . util . testutils import run_doctests run_doctests ( )   