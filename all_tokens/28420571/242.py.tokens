import odl . contrib . datasets . images as images import numpy as np import odl def convert_to_odl ( image ) :      shape = image . shape if len ( shape ) == 2 :          space = odl . uniform_discr ( [ 0 , 0 ] , shape , shape )  elif len ( shape ) == 3 :          d = shape [ 2 ] shape = shape [ : 2 ] image = np . transpose ( image , ( 2 , 0 , 1 ) ) space = odl . uniform_discr ( [ 0 , 0 ] , shape , shape ) ** d  image = space . element ( image ) return image  im = convert_to_odl ( images . brain_phantom ( shape = [ 200 , 200 ] ) ) im . show ( <str> ) im = convert_to_odl ( images . resolution_phantom ( shape = [ 100 , 123 ] ) ) im . show ( <str> ) im = convert_to_odl ( images . building ( ) ) im . show ( <str> ) im = convert_to_odl ( images . building ( gray = True ) ) im . show ( <str> ) im = convert_to_odl ( images . rings ( gray = True ) ) im . show ( <str> ) im = convert_to_odl ( images . rings ( shape = [ 100 , 100 ] ) ) im . show ( <str> ) im = convert_to_odl ( images . blurring_kernel ( shape = [ 9 , 9 ] ) ) im . show ( <str> )  