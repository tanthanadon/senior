from __future__ import division import numpy as np __all__ = ( <str> , ) def estimate_noise_std ( img , average = True ) :      import scipy . signal import functools img = np . asarray ( img , dtype = <str> ) M = functools . reduce ( np . add . outer , [ [ - 1 , 2 , - 1 ] ] * img . ndim ) convolved = scipy . signal . fftconvolve ( img , M , mode = <str> ) if average :          conv_var = np . sum ( convolved ** 2 ) / convolved . size  else :          conv_var = convolved ** 2 conv_var = np . pad ( conv_var , pad_width = 1 , mode = <str> )  scale = np . sum ( np . square ( M ) ) sigma = np . sqrt ( conv_var / scale ) return sigma  if __name__ == <str> :      from odl . util . testutils import run_doctests run_doctests ( )   