from __future__ import division from itertools import permutations import pytest import numpy as np import tensorflow as tf import odl import odl . contrib . tensorflow from odl . util import all_almost_equal def test_as_tensorflow_layer ( ) :      matrix = np . random . rand ( 3 , 2 ) odl_op = odl . MatrixOperator ( matrix ) x = np . random . rand ( 2 ) z = np . random . rand ( 3 ) x_tf = tf . constant ( x ) [ None , ... , None ] z_tf = tf . constant ( z ) [ None , ... , None ] odl_op_layer = odl . contrib . tensorflow . as_tensorflow_layer ( odl_op , <str> ) y_tf = odl_op_layer ( x_tf ) result = y_tf . eval ( ) . ravel ( ) expected = odl_op ( x ) assert all_almost_equal ( result , expected ) result = tf . gradients ( y_tf , [ x_tf ] , z_tf ) [ 0 ] . eval ( ) . ravel ( ) expected = odl_op . derivative ( x ) . adjoint ( z ) assert all_almost_equal ( result , expected )  if __name__ == <str> :      with tf . Session ( ) :          odl . util . test_file ( __file__ )    