import matplotlib . pyplot as plt import numpy as np import odl impl = None shift = np . array ( [ 0.0 , 25.0 ] ) img_shape = ( 100 , 150 ) img_max_pt = np . array ( img_shape , dtype = float ) / 2 img_min_pt = - img_max_pt reco_space = odl . uniform_discr ( img_min_pt + shift , img_max_pt + shift , img_shape , dtype = <str> ) phantom = odl . phantom . indicate_proj_axis ( reco_space ) assert np . allclose ( reco_space . cell_sides , 1 ) grid = odl . RectGrid ( [ 0 , np . pi / 2 , np . pi , 3 * np . pi / 2 ] ) angle_partition = odl . uniform_partition_fromgrid ( grid ) det_size = np . floor ( 1.1 * np . sqrt ( np . sum ( np . square ( img_shape ) ) ) ) det_shape = int ( det_size ) det_max_pt = det_size / 2 det_min_pt = - det_max_pt detector_partition = odl . uniform_partition ( det_min_pt , det_max_pt , det_shape ) assert np . allclose ( detector_partition . cell_sides , 1 ) sum_along_x = np . sum ( phantom , axis = 0 ) sum_along_y = np . sum ( phantom , axis = 1 ) geometry = odl . tomo . Parallel2dGeometry ( angle_partition , detector_partition ) assert np . allclose ( geometry . det_axis_init , [ 1 , 0 ] ) assert np . allclose ( geometry . det_pos_init , [ 0 , 1 ] ) ray_trafo = odl . tomo . RayTransform ( reco_space , geometry , impl = impl ) proj_data = ray_trafo ( phantom ) proj_data . show ( indices = [ 0 , None ] , title = <str> ) fig , ax = plt . subplots ( ) ax . plot ( sum_along_y ) ax . set_xlabel ( <str> ) plt . title ( <str> ) plt . show ( ) axis_sum_y = geometry . det_axis ( np . deg2rad ( 0 ) ) assert np . allclose ( axis_sum_y , [ 1 , 0 ] ) proj_data . show ( indices = [ 1 , None ] , title = <str> ) fig , ax = plt . subplots ( ) ax . plot ( sum_along_x ) ax . set_xlabel ( <str> ) plt . title ( <str> ) plt . show ( ) axis_sum_x = geometry . det_axis ( np . deg2rad ( 90 ) ) assert np . allclose ( axis_sum_x , [ 0 , 1 ] )  