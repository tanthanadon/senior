import numpy as np import odl from odl . contrib import tomo subsets = 20 geometry = tomo . elekta_icon_geometry ( ) space = tomo . elekta_icon_space ( shape = ( 112 , 112 , 112 ) ) step = int ( np . ceil ( geometry . angles . size / subsets ) ) geometries = [ geometry [ i * step : ( i + 1 ) * step ] for i in range ( subsets ) ] ray_transforms = [ odl . tomo . RayTransform ( space , geom , use_cache = False ) for geom in geometries ] phantom = odl . phantom . shepp_logan ( space , modified = True ) projections = [ rt ( phantom ) for rt in ray_transforms ] callback = odl . solvers . CallbackShow ( ) x = space . zero ( ) reconstruction = odl . solvers . kaczmarz ( ray_transforms , x , projections , 20 , omega = 0.01 , callback = callback , callback_loop = <str> )  