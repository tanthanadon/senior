from collections import OrderedDict import matplotlib . pyplot as plt import numpy as np import scipy . misc import tempfile from odl . contrib . mrc import ( FileReaderRawBinaryWithHeader , FileWriterRawBinaryWithHeader ) image = scipy . misc . ascent ( ) shape = np . array ( image . shape , dtype = <str> ) origin = np . array ( [ - 1.0 , 0.0 ] , dtype = <str> ) px_size = np . array ( [ 0.1 , 0.1 ] , dtype = <str> ) dtype = np . fromstring ( str ( image . dtype ) . ljust ( 10 ) , dtype = <str> ) header = OrderedDict ( ) header [ <str> ] = { <str> : 0 , <str> : shape } header [ <str> ] = { <str> : 8 , <str> : origin } header [ <str> ] = { <str> : 16 , <str> : px_size } header [ <str> ] = { <str> : 24 , <str> : dtype } tmp_file = tempfile . NamedTemporaryFile ( ) with FileWriterRawBinaryWithHeader ( tmp_file , header ) as writer :      writer . write ( image ) tmp_file . seek ( 0 , 2 ) file_size = tmp_file . tell ( ) print ( <str> <str> . format ( file_size , image . nbytes , writer . header_size ) )  header_fields = [ { <str> : <str> , <str> : 0 , <str> : 8 , <str> : <str> } , { <str> : <str> , <str> : 8 , <str> : 8 , <str> : <str> } , { <str> : <str> , <str> : 16 , <str> : 8 , <str> : <str> } , { <str> : <str> , <str> : 24 , <str> : 10 , <str> : <str> } ] with FileReaderRawBinaryWithHeader ( tmp_file , header_fields ) as reader :      header_file , image_file = reader . read ( )  shape_file = header_file [ <str> ] [ <str> ] origin_file = header_file [ <str> ] [ <str> ] px_size_file = header_file [ <str> ] [ <str> ] dtype_file = header_file [ <str> ] [ <str> ] print ( <str> . format ( shape , shape_file ) ) print ( <str> . format ( origin , origin_file ) ) print ( <str> . format ( px_size , px_size_file ) ) print ( <str> <str> . format ( str ( image . dtype ) , <str> . join ( dtype_file . astype ( str ) ) ) ) plt . figure ( ) plt . title ( <str> ) plt . imshow ( image , cmap = <str> ) plt . figure ( ) plt . title ( <str> ) plt . imshow ( image , cmap = <str> ) plt . show ( )  