import numpy as np import odl reco_space = odl . uniform_discr ( min_pt = [ - 20 , - 20 ] , max_pt = [ 20 , 20 ] , shape = [ 300 , 300 ] , dtype = <str> ) angle_partition = odl . uniform_partition ( 0 , np . pi + 0.7 , 360 ) detector_partition = odl . uniform_partition ( - 40 , 40 , 512 ) geometry = odl . tomo . FanBeamGeometry ( angle_partition , detector_partition , src_radius = 80 , det_radius = 40 ) ray_trafo = odl . tomo . RayTransform ( reco_space , geometry , impl = <str> ) fbp = odl . tomo . fbp_op ( ray_trafo , filter_type = <str> , frequency_scaling = 0.8 ) parker_weighting = odl . tomo . parker_weighting ( ray_trafo ) parker_weighting . show ( ) parker_weighted_fbp = fbp * parker_weighting phantom = odl . phantom . shepp_logan ( reco_space , modified = True ) proj_data = ray_trafo ( phantom ) fbp_reconstruction = fbp ( proj_data ) pw_fbp_reconstruction = parker_weighted_fbp ( proj_data ) phantom . show ( title = <str> ) proj_data . show ( title = <str> ) fbp_reconstruction . show ( title = <str> ) pw_fbp_reconstruction . show ( title = <str> , force_show = True )  