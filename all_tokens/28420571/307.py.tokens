import numpy as np import scipy . misc import odl import matplotlib . pyplot as plt image = scipy . misc . ascent ( ) [ : : 2 , : : 2 ] . astype ( <str> ) shape = image . shape image /= image . max ( ) space = odl . uniform_discr ( [ 0 , 0 ] , shape , shape ) orig = space . element ( image . copy ( ) ) noisy = orig + 0.1 * odl . phantom . white_noise ( space ) gradient = odl . Gradient ( space , method = <str> ) reg_param = 0.3 factr = 0.5 / reg_param l2_norm = factr * odl . solvers . L2NormSquared ( space ) . translated ( noisy ) l1_norm = odl . solvers . GroupL1Norm ( gradient . range , 2 ) char_fun = odl . solvers . IndicatorNonnegativity ( space ) obj = l2_norm + l1_norm * gradient + char_fun strong_convexity = 1 / reg_param class CallbackStore ( odl . solvers . util . callback . Callback ) :      def __init__ ( self ) :          self . iteration_count = 0 self . iteration_counts = [ ] self . ergodic_iterate = 0 self . obj_function_values = [ ] self . obj_function_values_ergodic = [ ]  def __call__ ( self , x ) :          self . iteration_count += 1 k = self . iteration_count self . iteration_counts . append ( self . iteration_count ) self . ergodic_iterate = ( k - 1 ) / k * self . ergodic_iterate + 1 / k * x self . obj_function_values . append ( obj ( x ) ) self . obj_function_values_ergodic . append ( obj ( self . ergodic_iterate ) )  def reset ( self ) :          self . iteration_count = 0 self . iteration_counts = [ ] self . ergodic_iterate = 0 self . obj_function_values = [ ] self . obj_function_values_ergodic = [ ]   callback = ( odl . solvers . CallbackPrintIteration ( ) & CallbackStore ( ) ) niter = 500 op = odl . BroadcastOperator ( odl . IdentityOperator ( space ) , gradient ) g = odl . solvers . SeparableSum ( l2_norm , l1_norm ) f = char_fun op_norm = 1.1 * odl . power_method_opnorm ( op , xstart = noisy ) tau = 1.0 / op_norm sigma = 1.0 / op_norm x_start = op . domain . zero ( ) x_alg1 = x_start . copy ( ) callback . reset ( ) odl . solvers . pdhg ( x_alg1 , f , g , op , niter = niter , tau = tau , sigma = sigma , callback = callback ) obj_alg1 = callback . callbacks [ 1 ] . obj_function_values obj_ergodic_alg1 = callback . callbacks [ 1 ] . obj_function_values_ergodic op = gradient g = l1_norm f = odl . solvers . FunctionalQuadraticPerturb ( char_fun , factr , - 2 * factr * noisy ) op_norm = np . sqrt ( 8 ) + 1e-4 tau = 1.0 / op_norm sigma = 1.0 / op_norm x_alg2 = x_start . copy ( ) callback . reset ( ) odl . solvers . pdhg ( x_alg2 , f , g , op , niter = niter , tau = tau , sigma = sigma , gamma_primal = 0 , callback = callback ) obj_alg2 = callback . callbacks [ 1 ] . obj_function_values obj_ergodic_alg2 = callback . callbacks [ 1 ] . obj_function_values_ergodic x_alg3 = x_start . copy ( ) callback . reset ( ) odl . solvers . pdhg ( x_alg3 , f , g , op , niter = niter , tau = tau , sigma = sigma , gamma_primal = strong_convexity , callback = callback ) obj_alg3 = callback . callbacks [ 1 ] . obj_function_values obj_ergodic_alg3 = callback . callbacks [ 1 ] . obj_function_values_ergodic plt . figure ( 0 ) ax1 = plt . subplot ( 231 ) ax1 . imshow ( orig , clim = [ 0 , 1 ] , cmap = <str> ) ax1 . title . set_text ( <str> ) ax2 = plt . subplot ( 232 ) ax2 . imshow ( noisy , clim = [ 0 , 1 ] , cmap = <str> ) ax2 . title . set_text ( <str> ) ax3 = plt . subplot ( 234 ) ax3 . imshow ( x_alg1 , clim = [ 0 , 1 ] , cmap = <str> ) ax3 . title . set_text ( <str> ) ax4 = plt . subplot ( 235 ) ax4 . imshow ( x_alg2 , clim = [ 0 , 1 ] , cmap = <str> ) ax4 . title . set_text ( <str> ) ax5 = plt . subplot ( 236 ) ax5 . imshow ( x_alg3 , clim = [ 0 , 1 ] , cmap = <str> ) ax5 . title . set_text ( <str> ) i = np . array ( callback . callbacks [ 1 ] . iteration_counts ) plt . figure ( 1 ) plt . clf ( ) plt . loglog ( i , obj_alg1 , label = <str> ) plt . loglog ( i , obj_alg2 , label = <str> ) plt . loglog ( i , obj_alg3 , label = <str> ) plt . title ( <str> ) plt . legend ( ) plt . figure ( 2 ) plt . clf ( ) obj_opt = min ( obj_alg1 + obj_alg2 + obj_alg3 ) def rel_fun ( x ) :      return ( np . array ( x ) - obj_opt ) / ( x [ 0 ] - obj_opt )  plt . loglog ( i , rel_fun ( obj_alg1 ) , label = <str> ) plt . loglog ( i , rel_fun ( obj_alg2 ) , label = <str> ) plt . loglog ( i , rel_fun ( obj_alg3 ) , label = <str> ) plt . loglog ( i [ 1 : ] , 1. / i [ 1 : ] , <str> , label = <str> ) plt . loglog ( i [ 1 : ] , 1. / i [ 1 : ] ** 2 , <str> , label = <str> ) plt . title ( <str> ) plt . legend ( ) plt . figure ( 3 ) plt . clf ( ) plt . loglog ( i , rel_fun ( obj_ergodic_alg1 ) , label = <str> ) plt . loglog ( i , rel_fun ( obj_ergodic_alg2 ) , label = <str> ) plt . loglog ( i [ 1 : ] , 4. / i [ 1 : ] , <str> , label = <str> ) plt . title ( <str> ) plt . legend ( )  