from __future__ import print_function import sys import time from genestack_client import Application , GenestackException class TaskLogViewer ( Application ) :      APPLICATION_ID = <str> STDERR = <str> STDOUT = <str> MAX_CHUNK_SIZE = 128000 def view_log ( self , accession , log_type = None , follow = True , offset = 0 ) :          sys . stderr . write ( <str> ) self . print_log ( accession , log_type = log_type , follow = follow , offset = offset )  def print_log ( self , accession , log_type = None , follow = True , offset = 0 ) :          if not log_type :              log_type = self . STDOUT  waiting_message_shown = True while True :              log_chunk = self . invoke ( <str> , accession , log_type , offset , self . MAX_CHUNK_SIZE ) if not log_chunk :                  raise GenestackException ( <str> % accession )  if log_chunk [ <str> ] is not None :                  sys . stdout . write ( log_chunk [ <str> ] ) sys . stdout . flush ( ) offset += len ( log_chunk [ <str> ] )  else :                  if offset == 0 :                      if log_chunk [ <str> ] :                          print ( <str> )  elif follow and not waiting_message_shown :                          print ( <str> ) waiting_message_shown = True   if log_chunk [ <str> ] or not follow :                      break  if follow :                      time . sleep ( 0.5 )       