import sys import os import argparse import topology def get_args ( ) : 	 parser = argparse . ArgumentParser ( description = <str> <str> <str> ) parser . add_argument ( <str> , type = str , help = <str> ) parser . add_argument ( <str> , type = str , help = <str> <str> ) parser . add_argument ( <str> , action = <str> , default = False , dest = <str> , help = <str> ) parser . add_argument ( <str> , action = <str> , default = False , dest = <str> , help = <str> ) parser . add_argument ( <str> , type = float , help = <str> ) parser . add_argument ( <str> , type = str , help = <str> ) parser . add_argument ( <str> , type = float , help = <str> <str> <str> ) parser . add_argument ( <str> , type = float , help = <str> <str> <str> ) parser . add_argument ( <str> , type = int , help = <str> ) return parser . parse_args ( )  def main ( ) : 	 args = get_args ( ) block_path = os . path . abspath ( args . block_path ) cluster_group = [ <str> ] segment_info = { <str> : args . period , <str> : args . segstart , <str> : args . segend } windt = args . windt analysis_id = args . analysis_id if args . avg : 		 topology . calc_CI_bettis_on_dataset_average_activity ( block_path , analysis_id , cluster_group = cluster_group , windt_ms = windt , n_subwin = args . n_subwin , segment_info = segment_info , persistence = args . persistence )  else : 		 topology . calc_CI_bettis_on_dataset ( block_path , analysis_id , cluster_group = cluster_group , windt_ms = windt , n_subwin = args . n_subwin , segment_info = segment_info , persistence = args . persistence )   if __name__ == <str> : 	 main ( )    