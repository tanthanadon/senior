import numpy as np import neuraltda . TopologicalLogisticClassPredictor as tplcp import glob import os import pickle blockPath = <str> stimclasses = { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> } Nlogistic = 30 accStore = np . zeros ( Nlogistic ) shuffaccStore = np . zeros ( Nlogistic ) masterResults = glob . glob ( os . path . join ( blockPath , <str> ) ) for resf in masterResults : 	 tmod = tplcp . TopologicalLogisticClassPredictor ( resf , stimclasses , predNTimes = 30 ) tmod . extractTrainedStims ( <str> ) tmod . buildPredictionDataMatrix ( ) for tr in range ( Nlogistic ) : 		 tmod . fitLogistic ( ) accStore [ tr ] = tmod . modelScore shuffaccStore [ tr ] = tmod . shuffmodelScore  savef = resf + <str> shuffsavef = resf + <str> with open ( savef , <str> ) as f : 		 pickle . dump ( accStore , f )  with open ( shuffsavef , <str> ) as f : 		 pickle . dump ( shuffaccStore , f )  print ( accStore ) print ( shuffaccStore )   