__author__ = <str> import os import math from scipy . stats import norm import numpy as np import matplotlib . pyplot as plt from scipy . stats import gaussian_kde def parent_dir ( directory ) :      pathlist = directory . split ( <str> ) newdir = <str> . join ( pathlist [ 0 : len ( pathlist ) - 1 ] ) return newdir  def plot_MA ( x , y , sig1 , sig2 , sig3 , sig4 , savedir , siglist1 , siglist2 , name1 , name2 , genelist ) :      F = plt . figure ( ) ax = F . add_subplot ( 111 ) plt . scatter ( x , y , edgecolor = <str> , s = 14 ) plt . scatter ( sig1 , sig2 , c = <str> , edgecolor = <str> , s = 14 ) plt . scatter ( sig3 , sig4 , c = <str> , edgecolor = <str> , s = 14 ) ax . set_title ( <str> + name1 + <str> + name2 ) ax . set_ylabel ( <str> + name1 + <str> + name2 + <str> ) ax . set_xlabel ( <str> ) ax . get_xaxis ( ) . tick_bottom ( ) ax . get_yaxis ( ) . tick_left ( ) ax . set_ylim ( [ - 0.25 , 0.25 ] ) plt . savefig ( savedir + <str> + name1 + <str> + name2 + <str> , dpi = 1200 )  def plot_MA_nosig ( x , y , name1 , name2 , savedir ) :      F = plt . figure ( ) ax = F . add_subplot ( 111 ) plt . scatter ( x , y , edgecolor = <str> , s = 14 ) ax . set_title ( <str> + name1 + <str> + name2 ) ax . set_ylabel ( <str> + name1 + <str> + name2 + <str> ) ax . set_xlabel ( <str> ) ax . get_xaxis ( ) . tick_bottom ( ) ax . get_yaxis ( ) . tick_left ( ) plt . savefig ( savedir + <str> + name1 + <str> + name2 + <str> , dpi = 1200 )  def compute_MDS ( histlist ) :      windowsize = 150 H = sum ( histlist ) middle = len ( histlist ) / 2 h = sum ( histlist [ middle - windowsize : middle ] ) + sum ( histlist [ middle : middle + windowsize ] ) if H != 0 :          return float ( h ) / float ( H ) , H  else :          return 0 , 0   def run ( count_file , savedir ) :      name1 = count_file . split ( <str> ) [ - 1 ] . split ( <str> ) [ 0 ] name2 = count_file . split ( <str> ) [ - 1 ] . split ( <str> ) [ 1 ] totals = [ 0 , 0 ] with open ( count_file ) as F :          F . readline ( ) for line in F :              line = line . strip ( ) . split ( ) totals [ 0 ] += float ( line [ - 2 ] ) totals [ 1 ] += float ( line [ - 1 ] )   norm = totals [ 0 ] / totals [ 1 ] x = list ( ) y = list ( ) with open ( count_file ) as F :          F . readline ( ) for line in F :              line = line . strip ( ) . split ( ) try :                  val1 = math . log ( ( float ( line [ - 2 ] ) + float ( line [ - 1 ] ) * norm ) / 2 , 2 ) val2 = math . log ( float ( line [ - 2 ] ) / ( float ( line [ - 1 ] ) * norm ) , 10 ) x . append ( val1 ) y . append ( val2 )  except :                  print <str>    plot_MA_nosig ( x , y , name1 , name2 , savedir )  if __name__ == <str> :      homedir = os . path . dirname ( os . path . realpath ( __file__ ) ) filedir = parent_dir ( homedir ) + <str> savedir = parent_dir ( homedir ) + <str> count_file = filedir + <str> run ( count_file , savedir )    