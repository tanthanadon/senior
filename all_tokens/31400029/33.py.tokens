from __future__ import absolute_import from django . utils import timezone from datetime import time , datetime , date from delft3dworker . utils import log_progress_parser from delft3dworker . utils import apply_default_tz , tz_midnight from delft3dworker . utils import merge_log_unique from django . test import TestCase class LogTests ( TestCase ) :      def test_progress_parser ( self ) :          log = progress = log_progress_parser ( log , <str> ) self . assertTrue ( progress == 100.0 ) log = progress = log_progress_parser ( log , <str> ) self . assertTrue ( progress == 55.5555555556 ) log = progress = log_progress_parser ( log , <str> ) self . assertTrue ( progress is None ) log = progress = log_progress_parser ( log , <str> ) self . assertTrue ( progress is None )   class DateTests ( TestCase ) :      def test_apply_default_tz ( self ) :          self . assertTrue ( apply_default_tz ( None ) is None ) dt = apply_default_tz ( datetime . now ( ) ) self . assertEqual ( dt . tzinfo , timezone . get_default_timezone ( ) )  def test_tz_midnight ( self ) :          dt = tz_midnight ( date . today ( ) ) self . assertEqual ( dt . hour , 0 ) self . assertEqual ( dt . minute , 0 ) self . assertEqual ( dt . second , 0 ) self . assertEqual ( dt . tzinfo , timezone . get_default_timezone ( ) )   class LogMergeTest ( TestCase ) :      def test_merge_log ( self ) :          a = b = expected = merged = merge_log_unique ( a , b ) self . assertEqual ( merged , expected )    