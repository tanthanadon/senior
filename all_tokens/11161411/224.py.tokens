from unittest import TestCase from scipy import exp from lib import unidades from lib . meos import MEoS class C2 ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 206.18 ) Tc = unidades . Temperature ( 305.322 ) Pc = unidades . Pressure ( 4872.2 , <str> ) M = 30.06904 Tt = unidades . Temperature ( 90.368 ) Tb = unidades . Temperature ( 184.569 ) f_acent = 0.0995 momentoDipolar = unidades . DipoleMoment ( 0.0 , <str> ) id = 3 _Tr = unidades . Temperature ( 295.159630 ) _rhor = unidades . Density ( 207.557649 ) _w = 0.095234716 Fi1 = { <str> : 8.314472 , <str> : [ 1 , 3.003039265 ] , <str> : [ 0 , 1 ] , <str> : [ 9.212802589 , - 4.68224855 ] , <str> : [ 1.117433359 , 3.467773215 , 6.941944640 , 5.970850948 ] , <str> : [ 1.4091052332 , 4.0099170712 , 6.5967098342 , 13.9798102659 ] } Fi2 = { <str> : 8.31451 , <str> : [ 1 , 3.00263 ] , <str> : [ 0 , 1 ] , <str> : [ 24.675437527 , - 77.42531376 ] , <str> : [ ] , <str> : [ ] , <str> : [ 4.33939 , 13.1974 ] , <str> : [ 559.314 / Tc , 1031.38 / Tc ] , <str> : [ 1.23722 , - 6.01989 ] , <str> : [ 223.284 / Tc , 1071.29 / Tc ] } Fi3 = { <str> : [ 1 , 3.8159476 ] , <str> : [ 0 , - 1. / 3 , - 2. / 3 , - 1 ] , <str> : [ - 23.446765 , 8.6021299 , - 3.3075735 , - 0.55956678 ] , <str> : [ 5.0722267 ] , <str> : [ 5.5074874 ] } CP5 = { <str> : 9.9507922459 , <str> : [ - 6.9341406909e5 , 3.1534834135e4 , - 6.103375287e2 , - 2.8657877948e-2 , 9.0922897821e-5 , - 5.2750109915e-8 ] , <str> : [ - 3 , - 2 , - 1 , 1 , 2 , 3 ] , <str> : [ - 1.4243593411e1 ] , <str> : [ 3000 ] } buecker = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 675.0 , <str> : 900000.0 , <str> : 22.419 , <str> : [ 0.83440745735241 , - 0.14287360607171e1 , 0.34430242210927 , - 0.42096677920265 , 0.12094500886549e-1 ] , <str> : [ 1 , 1 , 2 , 2 , 4 ] , <str> : [ 0.25 , 1.00 , 0.25 , 0.75 , 0.75 ] , <str> : [ - 0.57976201597341 , - 0.33127037870838e-1 , - 0.11751654894130 , - 0.11160957833067 , 0.62181592654406e-1 , 0.98481795434443e-1 , - 0.098268582682358 , - 0.23977831007049e-3 , 0.69885663328821e-3 , 0.19665987803305e-4 , - 0.014586152207928 , 0.46354100536781e-1 , 0.60764622180645e-2 , - 0.26447330147828e-2 , - 0.042931872689904 , 0.29987786517263e-2 , 0.52919335175010e-2 , - 0.10383897798198e-2 , - 0.54260348214694e-1 , - 0.21959362918493 , 0.35362456650354 , - 0.12477390173714 , 0.18425693591517 , - 0.16192256436754 , - 0.82770876149064e-1 , 0.50160758096437e-1 , 0.93614326336655e-2 , - 0.27839186242864e-3 , 0.23560274071481e-4 , 0.39238329738527e-2 , - 0.76488325813618e-3 , - 0.49944304440730e-2 , 0.18593386407186e-2 , - 0.61404353331199e-3 ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 6 , 6 , 7 , 9 , 10 , 2 , 4 , 4 , 5 , 5 , 6 , 8 , 9 , 2 , 3 , 3 , 3 , 4 , 4 , 5 , 5 , 6 , 11 , 14 , 3 , 3 , 4 , 8 , 10 ] , <str> : [ 2.00 , 4.25 , 0.75 , 2.25 , 3.00 , 1.00 , 1.25 , 2.75 , 1.00 , 2.00 , 2.50 , 5.50 , 7.00 , 0.50 , 5.50 , 2.50 , 4.00 , 2.00 , 10.00 , 16.00 , 18.00 , 20.00 , 14.00 , 18.00 , 12.00 , 19.00 , 7.00 , 15.00 , 9.00 , 26.00 , 28.00 , 28.00 , 22.00 , 13.00 ] , <str> : [ 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 4 , 4 , 4 , 4 , 4 ] , <str> : [ 1 ] * 34 , <str> : [ - 0.23312179367924e-2 , 0.29301047908760e-2 , - 0.26912472842883e-3 , 184.13834111814 , - 10.397127984854 ] , <str> : [ 1 , 1 , 3 , 3 , 2 ] , <str> : [ 0. , 3. , 3. , 0. , 3. ] , <str> : [ 15 , 15 , 15 , 20 , 20 ] , <str> : [ 150 , 150 , 150 , 275 , 400 ] , <str> : [ 1.05 , 1.05 , 1.05 , 1.22 , 1.16 ] , <str> : [ 1 ] * 5 } younglove = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.31434 , <str> : 30.07 , <str> : 90.348 , <str> : 305.34 , <str> : 4871.43 , <str> : 6.875 , <str> : CP5 , <str> : { <str> : 300 , <str> : 101.325 , <str> : 11913.6 , <str> : 229.35 } , <str> : 90.348 , <str> : 600.0 , <str> : 70000.0 , <str> : 21.68 , <str> : [ None , - 0.3204748852e-2 , 0.6529792241 , - 0.1669704591e2 , 0.1147983381e4 , - 0.1854721998e6 , 0.4994149431e-3 , - 0.4858871291 , 0.1225345776e3 , 0.8622615988e5 , - 0.1081290283e-4 , 0.06279096996 , - 17.16912675 , - 0.1640779401e-3 , - 0.4356516111e-1 , - 19.66649699 , 0.4026724698e-2 , - 0.6498241861e-4 , 0.05111594139 , - 0.1113010349e-2 , - 0.7157747547e4 , - 0.1848571024e8 , - 0.2137365569e4 , 0.6275079986e8 , - 0.9974911056e1 , 0.1129115014e4 , - 0.1026469558 , - 0.5660525915e4 , - 0.4209846430e-3 , 0.2374523553 , - 0.1289637823e-5 , - 0.5423801068e-3 , 0.2239717230e-1 ] } GERG = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi2 , <str> : <str> , <str> : Tt , <str> : 675.0 , <str> : 900000.0 , <str> : 22.419 , <str> : [ 0.63596780450714 , - 0.17377981785459e1 , 0.28914060926272 , - 0.33714276845694 , 0.22405964699561e-1 , 0.15715424886913e-1 ] , <str> : [ 1 , 1 , 2 , 2 , 4 , 4 ] , <str> : [ 0.125 , 1.125 , 0.375 , 1.125 , 0.625 , 1.5 ] , <str> : [ 0.11450634253745 , 0.10612049379745e1 , - 0.12855224439423e1 , 0.39414630777652 , 0.31390924682041 , - 0.21592277117247e-1 , - 0.21723666564905 , - 0.28999574439489 , 0.42321173025732 , 0.46434100259260e-1 , - 0.13138398329741 , 0.11492850364368e-1 , - 0.33387688429909e-1 , 0.015183171583644 , - 0.47610805647657e-2 , 0.46917166277885e-1 , - 0.039401755804649 , - 0.32569956247611e-2 ] , <str> : [ 1 , 1 , 1 , 2 , 3 , 6 , 2 , 3 , 3 , 4 , 4 , 2 , 3 , 4 , 5 , 6 , 6 , 7 ] , <str> : [ 0.625 , 2.625 , 2.75 , 2.125 , 2 , 1.75 , 4.5 , 4.75 , 5 , 4 , 4.5 , 7.5 , 14 , 11.5 , 26 , 28 , 30 , 16 ] , <str> : [ 1 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 3 , 3 , 3 , 6 , 6 , 6 , 6 ] , <str> : [ 1 ] * 18 } friend = { <str> : <str> , <str> : <str> , <str> : { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> } , <str> : 8.31451 , <str> : Fi3 , <str> : { <str> : 298.15 , <str> : 101.325 , <str> : 11874 , <str> : 229.12 } , <str> : 90.352 , <str> : 305.33 , <str> : 4871.8 , <str> : 6.87 , <str> : 30.07 , <str> : 90.352 , <str> : 625.0 , <str> : 70000.0 , <str> : 22.419 , <str> : [ 0.4621543056 , - 1.9236936387 , 0.39878604003 , 0.16054532372e-1 , 0.12895242219 , 0.35458320491e-1 , 0.34927844540e-1 , - 0.11306183380e-1 , - 0.39809032779e-1 , 0.83031936834e-3 , 0.45921575183e-3 , 0.17530287917e-6 , - 0.70919516126e-4 ] , <str> : [ 1 , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 3 , 6 , 7 , 7 , 8 ] , <str> : [ 0 , 1.5 , 2.5 , - 0.5 , 1.5 , 2 , 0 , 1 , 2.5 , 0 , 2 , 5 , 2 ] , <str> : [ - 0.23436162249 , 0.84574697645e-1 , 0.1486105201 , - 0.10016857867 , - 0.59264824388e-1 , - 0.41263514217e-1 , 0.21855161869e-1 , - 0.74552720958e-4 , - 0.98859085572e-2 , 0.10208416499e-2 , - 0.52189655847e-3 , 0.98592162030e-4 , 0.46865140856e-1 , - 0.19558011646e-1 , - 0.46557161651e-1 , 0.32877905376e-2 , 0.13572090185 , - 0.10846471455 , - 0.67502836903e-2 ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 , 5 , 6 , 7 , 8 , 10 , 2 , 3 , 3 , 4 , 4 , 5 , 5 , 5 ] , <str> : [ 5 , 6 , 3.5 , 5.5 , 3 , 7 , 6 , 8.5 , 4 , 6.5 , 5.5 , 22 , 11 , 18 , 11 , 23 , 17 , 18 , 23 ] , <str> : [ 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 ] , <str> : [ 1 ] * 19 } shortSpan = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.31451 , <str> : Fi2 , <str> : <str> , <str> : 30.07 , <str> : 305.322 , <str> : 4872.0 , <str> : 206.6 / 30.07 , <str> : 90.352 , <str> : 750.0 , <str> : 100000.0 , <str> : 22.419 , <str> : [ 0.97628068 , - 0.26905251e1 , 0.73498222 , - 0.35366206e-1 , 0.84692031e-1 , 0.24154594e-3 ] , <str> : [ 1 , 1 , 1 , 2 , 3 , 7 ] , <str> : [ 0.25 , 1.125 , 1.5 , 1.375 , 0.25 , 0.875 ] , <str> : [ 0.23964954 , - 0.42780093e-1 , - 0.22308832 , - 0.51799954e-1 , - 0.27178426e-1 , 0.11246305e-1 ] , <str> : [ 2 , 5 , 1 , 4 , 3 , 4 ] , <str> : [ 0.625 , 1.75 , 3.625 , 3.625 , 14.5 , 12. ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 ] , <str> : [ 1 ] * 6 } sun = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 675.0 , <str> : 900000.0 , <str> : 22.419 , <str> : [ 1.32031629 , 9.47177394e-1 , - 3.21919278 , 7.47287278e-2 , 2.74919584e-4 , - 6.33952115e-2 ] , <str> : [ 1 , 1 , 1 , 3 , 7 , 2 ] , <str> : [ 1.5 , 0.25 , 1.25 , 0.25 , 0.875 , 1.375 ] , <str> : [ - 5.17685674e-2 , 3.65838926e-2 , 2.57753669e-1 , - 1.34856586e-2 , - 0.221551776 , - 6.89219870e-4 , - 4.47904791e-2 , - 2.15665728e-2 ] , <str> : [ 1 , 1 , 2 , 5 , 1 , 1 , 4 , 2 ] , <str> : [ 0 , 2.375 , 2. , 2.125 , 3.5 , 6.5 , 4.75 , 12.5 ] , <str> : [ 1 , 1 , 1 , 1 , 2 , 2 , 2 , 3 ] , <str> : [ 1 ] * 8 } eq = buecker , younglove , GERG , friend , shortSpan , sun _surface = { <str> : [ 0.07602 , - 0.02912 ] , <str> : [ 1.32 , 1.676 ] } _dielectric = { <str> : 1 , <str> : [ 11.1552 , 0.0112 ] , <str> : [ 36.759 , 23.639 ] , <str> : [ - 808.03 , - 378.84 ] , <str> : 0 , <str> : 1.75 } _melting = { <str> : 1 , <str> : buecker [ <str> ] , <str> : Tt , <str> : 2000.0 , <str> : Tt , <str> : 1.14 , <str> : 1 , <str> : [ 1 , 2.23626315e8 , 1.05262374e8 ] , <str> : [ 0 , 1 , 2.55 ] } _vapor_Pressure = { <str> : 3 , <str> : [ - 6.48647577 , 1.47010078 , - 1.66261122 , 3.57898378 , - 4.79105705 ] , <str> : [ 1 , 1.5 , 2.5 , 3.5 , 4 ] } _liquid_Density = { <str> : 2 , <str> : [ 1.56138026 , - 0.381552776 , 0.078537204 , 0.0370315089 ] , <str> : [ 0.329 , 4 / 6 , 8 / 6 , 19 / 6 ] } _vapor_Density = { <str> : 3 , <str> : [ - 1.89879145 , - 3.65459262 , 0.850562745 , 0.363965487 , - 1.50005943 , - 2.26690389 ] , <str> : [ 0.346 , 5 / 6 , 1 , 2 , 3 , 5 ] } visco0 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 0 , <str> : <str> , <str> : 305.322 , <str> : 206.18 , <str> : [ 2.0101502550505e1 , - 5.3310495236264 , - 9.1932109313455e-3 , - 3.2692750337240e-1 , 2.8850975314454e-1 , 1.8714822381408e-4 , 6.5739794167039e-6 , - 1.3249185654669e1 , - 2.5958989867061e1 , 2.3489171321456e1 , 7.8770433769273 ] , <str> : [ 0 , 1 , 7 , 2 , 0 , 7 , 1 , 0 , 1 , 2 , 0 ] , <str> : [ 1 , 1 , 2 , 4 , 6 , 6 , 15 , 1 , 3 , 3 , 4 ] , <str> : [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 ] , <str> : [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 ] , <str> : [ 6.4266651197353e-1 , 7.0693316317088e-1 ] , <str> : [ 90 , 50 ] , <str> : [ 100 , 250 ] } def _mu0 ( self , T ) :          X = 0.79330 + 262.946 / exp ( T ** ( 1 / 3 ) ) + ( 13.8366 + 1339.77 / exp ( T ** ( 1 / 3 ) ) ) * ( 1 / T ) ** 0.5 + - 322.242 * T / exp ( 2 * T ** ( 1 / 3 ) ) muo = T ** 0.5 / X return muo  visco1 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 0 , <str> : 305.322 , <str> : [ 9.6634694892149 , - 2.2985582151676e-1 ] , <str> : [ 1 , 3 ] , <str> : 305.322 , <str> : 206.18 , <str> : [ 6.6687966976352 , - 4.6983342709702 , 1.9688847427047e1 , - 9.5399537393789 , 6.3640646131666e-2 , 7.9981217444542e-3 , 7.0489675750657e-8 , - 2.2734655865556e1 , 2.2124096051632e1 , - 3.0986358885564e-1 ] , <str> : [ 0 , 1 , 0 , 1 , 0 , 1 , 3 , 0 , 2 , 5 ] , <str> : [ 1 , 1 , 2 , 2 , 7 , 8 , 17 , 3 , 3 , 3 ] , <str> : [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 ] , <str> : [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 ] , <str> : [ 6.4034200732045e-1 , 7.0437620805249e-1 ] , <str> : [ 90 , 50 ] , <str> : [ 100 , 250 ] } visco2 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 2 , <str> : 245.0 , <str> : 0.43682 , <str> : 245.0 , <str> : 12.0085 / M ** 0.5 * 0.43682 ** 2 , <str> : 15.977 , <str> : [ 0.47177003 , - 0.23950311 , 0.39808301 , - 0.27343335 , 0.35192260 , - 0.21101308 , - 0.00478579 , 0.07378129 , - 0.030425255 ] , <str> : [ 0 , 1 , 0 , 1 , 1.5 , 0 , 2 , 0 , 1 ] , <str> : [ 1 , 1 , 2 , 2 , 2 , 3 , 3 , 4 , 4 ] , <str> : [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] , <str> : [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] , <str> : [ 1. , - 0.30435286 , 0.001215675 ] , <str> : [ 0 , 0 , 1 ] , <str> : [ 0 , 1 , 1 ] , <str> : [ 0 , 0 , 0 ] , <str> : [ 0 , 0 , 0 ] } visco3 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 2 , <str> : 2 , <str> : 240.0 , <str> : 0.440110 , <str> : [ 0.2102436247e1 , - 0.1065920192e1 , 1.4 , 305.33 ] , <str> : [ - 0.1903481042e2 , 0.1799260494e4 , 0.1561316986e2 , - 0.1497221136e5 , 0.1130374601 , - 0.2186440756e2 , 0.8235954037e4 ] , <str> : 6.875 } visco4 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 4 , <str> : 0 , <str> : 305.322 , <str> : [ 15.9252 , - 49.7734 , 43.4368 ] , <str> : [ 0 , 0.25 , 0.5 ] , <str> : [ - 7.50686e-6 , - 1.50327e-6 , 0 ] , <str> : [ 6.72862e-5 , - 4.36451e-5 , 0 ] , <str> : [ 3.88040e-5 , - 1.38524e-5 , 0 ] , <str> : [ 7.68043e-10 , - 1.32048e-10 , 0.0 ] , <str> : [ 9.15407e-9 , 4.13028e-10 , 0.0 ] , <str> : [ - 1.45842e-7 , 2.39764e-7 , 0.0 ] } _viscosity = visco0 , visco1 , visco2 , visco3 , visco4 thermo0 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 245.0 , <str> : 1e-3 , <str> : [ 1.7104147 , - 0.6936482 ] , <str> : [ 0 , - 1 ] , <str> : 305.33 , <str> : 6.87 * 30.07 , <str> : 4.41786e-3 , <str> : [ 0.96084322 , 2.7500235 , - 0.026609289 , - 0.078146729 , 0.21881339 , 2.3849563 , - 0.75113971 ] , <str> : [ 0 , 0 , 0 , 0 , 0 , 1.5 , 1 ] , <str> : [ 1 , 2 , 3 , 4 , 5 , 1 , 3 ] , <str> : 3 , <str> : 0.63 , <str> : 1.242 , <str> : 1.01 , <str> : 0.19e-9 , <str> : 0.0563 , <str> : 0.545e-9 , <str> : 610.66 } thermo1 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 3 , <str> : 240 , <str> : [ 1.545691277 , - 0.5086287855 ] , <str> : [ 0.2863803648e-2 , - 0.459858003 , 0.7772750057e2 , 0.138460594e-5 , 0.1874040714e-1 , - 0.3009947821e1 , - 0.4225741011e-1 , 0.1028764297e1 ] , <str> : 2 , <str> : 305.34 , <str> : 6.875 * 30.07 , <str> : [ 0.225388 , 10.51088 , 0.45 , 1 ] , <str> : 7.42399e-10 } _thermal = thermo0 , thermo1  class Test ( TestCase ) :      def test_buecker ( self ) :          st = C2 ( T = 90.368 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 7 ) , 0.0000011 ) self . assertEqual ( round ( st . Liquido . rho , 5 ) , 651.52948 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 888.90 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 5.058 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.605 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 2.326 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 2008.69 ) self . assertEqual ( round ( st . Gas . rho , 6 ) , 0.000046 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , - 294.12 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , 1.524 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 0.892 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 1.168 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 180.93 ) st = C2 ( T = 100 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0.000011 ) self . assertEqual ( round ( st . Liquido . rho , 5 ) , 640.94852 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 866.74 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 4.825 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.541 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 2.283 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 1938.44 ) self . assertEqual ( round ( st . Gas . rho , 5 ) , 0.00040 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , - 282.78 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , 1.015 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 0.911 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 1.187 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 189.86 ) st = C2 ( T = 130 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0.001284 ) self . assertEqual ( round ( st . Liquido . rho , 5 ) , 607.82999 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 798.36 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 4.227 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.462 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 2.293 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 1722.03 ) self . assertEqual ( round ( st . Gas . rho , 5 ) , 0.03576 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , - 246.43 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , 0.019 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 0.977 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 1.256 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 214.69 ) st = C2 ( T = 150 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0.009638 ) self . assertEqual ( round ( st . Liquido . rho , 5 ) , 585.16884 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 752.12 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 3.896 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.442 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 2.333 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 1575.53 ) self . assertEqual ( round ( st . Gas . rho , 5 ) , 0.23373 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , - 221.71 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , - 0.360 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 1.027 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 1.312 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 228.84 ) st = C2 ( T = 180 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0.078638 ) self . assertEqual ( round ( st . Liquido . rho , 5 ) , 549.50874 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 680.84 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 3.464 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.434 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 2.421 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 1350.47 ) self . assertEqual ( round ( st . Gas . rho , 5 ) , 1.62533 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , - 185.53 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , - 0.712 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 1.098 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 1.409 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 245.54 ) st = C2 ( T = 210 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0.333796 ) self . assertEqual ( round ( st . Liquido . rho , 5 ) , 510.45075 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 605.90 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 3.081 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.454 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 2.572 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 1117.27 ) self . assertEqual ( round ( st . Gas . rho , 5 ) , 6.23900 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , - 153.48 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , - 0.927 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 1.228 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 1.622 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 254.02 ) st = C2 ( T = 240 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0.966788 ) self . assertEqual ( round ( st . Liquido . rho , 5 ) , 465.30887 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 524.72 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 2.726 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.507 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 2.847 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 873.25 ) self . assertEqual ( round ( st . Gas . rho , 5 ) , 17.43487 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , - 128.82 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , - 1.077 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 1.388 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 1.976 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 252.14 ) st = C2 ( T = 270 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 2.209980 ) self . assertEqual ( round ( st . Liquido . rho , 5 ) , 407.71776 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 432.13 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 2.375 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.605 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 3.491 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 608.92 ) self . assertEqual ( round ( st . Gas . rho , 5 ) , 42.08922 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , - 118.38 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , - 1.212 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 1.595 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 2.815 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 237.02 ) st = C2 ( T = 300 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 4.357255 ) self . assertEqual ( round ( st . Liquido . rho , 5 ) , 303.50879 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 305.32 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 1.952 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.912 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 10.022 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 274.91 ) self . assertEqual ( round ( st . Gas . rho , 5 ) , 114.50091 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , - 155.61 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , - 1.453 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 2.089 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 13.299 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 200.51 ) st = C2 ( T = 305 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 4.839225 ) self . assertEqual ( round ( st . Liquido . rho , 5 ) , 241.96149 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 255.73 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 1.794 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 2.470 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 164.093 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 175.12 ) self . assertEqual ( round ( st . Gas . rho , 5 ) , 170.75482 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , - 202.19 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , - 1.619 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 2.623 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 247.460 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 178.83 ) st = C2 ( T = 90.384 , P = 1e5 ) self . assertEqual ( round ( st . rho , 2 ) , 651.55 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , - 888.88 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , - 888.73 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , - 5.0574 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 1.6051 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 2.3256 ) self . assertEqual ( round ( st . w , 2 ) , 2008.97 ) st = C2 ( T = 135 , P = 5e5 ) self . assertEqual ( round ( st . rho , 2 ) , 602.50 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , - 787.09 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , - 786.26 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , - 4.1415 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 1.4563 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 2.3009 ) self . assertEqual ( round ( st . w , 2 ) , 1688.21 ) st = C2 ( T = 220 , P = 1e6 ) self . assertEqual ( round ( st . rho , 2 ) , 497.12 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , - 581.36 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , - 579.35 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , - 2.9641 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 1.4681 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 2.6365 ) self . assertEqual ( round ( st . w , 2 ) , 1044.02 ) st = C2 ( T = 110 , P = 1.5e6 ) self . assertEqual ( round ( st . rho , 2 ) , 630.62 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , - 844.43 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , - 842.05 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , - 4.6118 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 1.5041 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 2.2713 ) self . assertEqual ( round ( st . w , 2 ) , 1872.62 ) st = C2 ( T = 675 , P = 2e6 ) self . assertEqual ( round ( st . rho , 3 ) , 10.756 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , 754.73 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 940.67 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 1.1385 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 2.9468 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 3.2442 ) self . assertEqual ( round ( st . w , 2 ) , 451.69 ) st = C2 ( T = 290 , P = 3e6 ) self . assertEqual ( round ( st . rho , 3 ) , 55.401 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , - 153.13 ) self . assertEqual ( round ( st . h . kJkg , 3 ) , - 98.979 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , - 1.2014 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 1.6618 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 3.0580 ) self . assertEqual ( round ( st . w , 2 ) , 239.18 ) st = C2 ( T = 160 , P = 1e7 ) self . assertEqual ( round ( st . rho , 2 ) , 580.45 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , - 734.04 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , - 716.81 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , - 3.7788 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 1.4493 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 2.3263 ) self . assertEqual ( round ( st . w , 2 ) , 1563.69 ) st = C2 ( T = 500 , P = 2e7 ) self . assertEqual ( round ( st . rho , 2 ) , 164.96 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , 184.25 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 305.49 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , - 0.56870 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 2.3996 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 3.2172 ) self . assertEqual ( round ( st . w , 2 ) , 416.34 ) st = C2 ( T = 100 , P = 5e7 ) self . assertEqual ( round ( st . rho , 2 ) , 658.54 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , - 877.76 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , - 801.84 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , - 4.9448 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 1.6011 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 2.2516 ) self . assertEqual ( round ( st . w , 2 ) , 2107.34 ) st = C2 ( T = 450 , P = 1e8 ) self . assertEqual ( round ( st . rho , 2 ) , 428.87 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , - 108.47 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 124.70 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , - 1.4710 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 2.2729 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 2.9465 ) self . assertEqual ( round ( st . w , 2 ) , 1075.84 ) st = C2 ( T = 675 , P = 9e8 ) self . assertEqual ( round ( st . rho , 2 ) , 632.88 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , 443.09 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 1865.16 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , - 0.95311 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 3.2264 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 3.6380 ) self . assertEqual ( round ( st . w , 2 ) , 2628.58 )  def test_younglove ( self ) :          kw = { <str> : <str> , <str> : 3 , <str> : 1 } st = C2 ( T = 100 , P = 1e4 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 641.1 ) self . assertEqual ( round ( st . rhoM , 2 ) , 21.32 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , - 14210 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , - 14210 ) self . assertEqual ( round ( st . sM . kJkmolK , 2 ) , 83.82 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 47.14 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 69.32 ) self . assertEqual ( round ( st . w , 0 ) , 1943 ) self . assertEqual ( round ( st . mu . muPas , 0 ) , 797 ) self . assertEqual ( round ( st . k , 3 ) , 0.248 ) st = C2 ( T = 175 , P = 5e4 , rho0 = 1 , ** kw ) self . assertEqual ( round ( st . rho , 3 ) , 1.054 ) self . assertEqual ( round ( st . rhoM , 5 ) , 0.03505 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , 4708 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , 6135 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 210.5 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 32.53 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 41.58 ) self . assertEqual ( round ( st . w , 1 ) , 243.8 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 5.58 ) self . assertEqual ( round ( st . k , 5 ) , 0.00890 ) st = C2 ( T = 600 , P = 1e5 , ** kw ) self . assertEqual ( round ( st . rho , 4 ) , 0.6031 ) self . assertEqual ( round ( st . rhoM , 5 ) , 0.02006 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 28430 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 33420 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 277.7 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 80.90 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 89.26 ) self . assertEqual ( round ( st . w , 1 ) , 427.6 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 17.0 ) self . assertEqual ( round ( st . k , 4 ) , 0.0695 ) st = C2 ( T = 240 , P = 101325 , rho0 = 1 , ** kw ) self . assertEqual ( round ( st . rho , 3 ) , 1.550 ) self . assertEqual ( round ( st . rhoM , 5 ) , 0.05155 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , 6962 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , 8928 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 218.3 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 37.90 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 46.74 ) self . assertEqual ( round ( st . w , 1 ) , 281.8 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 7.56 ) self . assertEqual ( round ( st . k , 4 ) , 0.0145 ) st = C2 ( T = 200 , P = 2e5 , rho0 = 1 , ** kw ) self . assertEqual ( round ( st . rho , 3 ) , 3.822 ) self . assertEqual ( round ( st . rhoM , 4 ) , 0.1271 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , 5407 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , 6981 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 203.9 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 35.19 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 45.65 ) self . assertEqual ( round ( st . w , 1 ) , 253.1 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 6.32 ) self . assertEqual ( round ( st . k , 4 ) , 0.0111 ) st = C2 ( T = 200 , P = 3e5 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 524.3 ) self . assertEqual ( round ( st . rhoM , 2 ) , 17.44 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , - 7107 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , - 7090 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 132.9 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 42.85 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 75.14 ) self . assertEqual ( round ( st . w , 0 ) , 1203 ) self . assertEqual ( round ( st . mu . muPas , 0 ) , 136 ) self . assertEqual ( round ( st . k , 3 ) , 0.152 ) st = C2 ( T = 420 , P = 4e5 , ** kw ) self . assertEqual ( round ( st . rho , 3 ) , 3.478 ) self . assertEqual ( round ( st . rhoM , 4 ) , 0.1157 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 15630 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 19090 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 238.0 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 59.86 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 68.61 ) self . assertEqual ( round ( st . w , 1 ) , 361.2 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 12.8 ) self . assertEqual ( round ( st . k , 4 ) , 0.0383 ) st = C2 ( T = 200 , P = 5e5 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 524.5 ) self . assertEqual ( round ( st . rhoM , 2 ) , 17.44 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , - 7113 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , - 7084 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 132.9 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 42.86 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 75.09 ) self . assertEqual ( round ( st . w , 0 ) , 1205 ) self . assertEqual ( round ( st . mu . muPas , 0 ) , 136 ) self . assertEqual ( round ( st . k , 3 ) , 0.152 ) st = C2 ( T = 230 , P = 6e5 , rho0 = 1 , ** kw ) self . assertEqual ( round ( st . rho , 2 ) , 10.61 ) self . assertEqual ( round ( st . rhoM , 4 ) , 0.3528 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , 6212 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , 7912 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 199.8 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 38.94 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 52.39 ) self . assertEqual ( round ( st . w , 1 ) , 258.2 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 7.25 ) self . assertEqual ( round ( st . k , 4 ) , 0.0143 ) st = C2 ( T = 360 , P = 8e5 , ** kw ) self . assertEqual ( round ( st . rho , 3 ) , 8.316 ) self . assertEqual ( round ( st . rhoM , 4 ) , 0.2766 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 12130 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 15030 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 221.9 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 52.39 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 62.08 ) self . assertEqual ( round ( st . w , 1 ) , 331.8 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 11.3 ) self . assertEqual ( round ( st . k , 4 ) , 0.0295 ) st = C2 ( T = 245 , P = 1e6 , rho0 = 1 , ** kw ) self . assertEqual ( round ( st . rho , 2 ) , 17.56 ) self . assertEqual ( round ( st . rhoM , 4 ) , 0.5838 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , 6532 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , 8245 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 197.6 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 41.37 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 58.26 ) self . assertEqual ( round ( st . w , 1 ) , 255.6 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 7.78 ) self . assertEqual ( round ( st . k , 4 ) , 0.0162 ) st = C2 ( T = 260 , P = 2e6 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 430.1 ) self . assertEqual ( round ( st . rhoM , 2 ) , 14.30 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , - 2248 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , - 2108 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 154.1 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 46.38 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 95.30 ) self . assertEqual ( round ( st . w , 1 ) , 713.4 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 68.7 ) self . assertEqual ( round ( st . k , 3 ) , 0.101 ) st = C2 ( T = 150 , P = 3e6 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 587.5 ) self . assertEqual ( round ( st . rhoM , 2 ) , 19.54 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , - 10760 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , - 10610 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 111.8 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 43.54 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 70.18 ) self . assertEqual ( round ( st . w , 0 ) , 1602 ) self . assertEqual ( round ( st . mu . muPas , 0 ) , 258 ) self . assertEqual ( round ( st . k , 3 ) , 0.204 ) st = C2 ( T = 300 , P = 4e6 , ** kw ) self . assertEqual ( round ( st . rho , 2 ) , 84.99 ) self . assertEqual ( round ( st . rhoM , 3 ) , 2.827 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , 6868 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , 8283 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 189.5 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 53.64 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 144.3 ) self . assertEqual ( round ( st . w , 1 ) , 222.9 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 11.8 ) self . assertEqual ( round ( st . k , 4 ) , 0.0308 ) st = C2 ( T = 150 , P = 5e6 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 588.7 ) self . assertEqual ( round ( st . rhoM , 2 ) , 19.58 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , - 10790 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , - 10530 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 111.6 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 43.66 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 70.02 ) self . assertEqual ( round ( st . w , 0 ) , 1612 ) self . assertEqual ( round ( st . mu . muPas , 0 ) , 262 ) self . assertEqual ( round ( st . k , 3 ) , 0.205 ) st = C2 ( T = 311 , P = 6e6 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 280.8 ) self . assertEqual ( round ( st . rhoM , 3 ) , 9.339 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , 3265 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , 3908 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 173.9 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 55.44 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 255.5 ) self . assertEqual ( round ( st . w , 1 ) , 280.7 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 30.4 ) self . assertEqual ( round ( st . k , 4 ) , 0.0699 ) st = C2 ( T = 580 , P = 7e6 , ** kw ) self . assertEqual ( round ( st . rho , 2 ) , 45.23 ) self . assertEqual ( round ( st . rhoM , 3 ) , 1.504 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 25890 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 30550 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 237.8 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 79.51 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 91.35 ) self . assertEqual ( round ( st . w , 1 ) , 416.2 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 19.2 ) self . assertEqual ( round ( st . k , 4 ) , 0.0696 ) st = C2 ( T = 350 , P = 8e6 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 149.3 ) self . assertEqual ( round ( st . rhoM , 3 ) , 4.966 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , 8078 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , 9689 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 190.6 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 58.59 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 138.3 ) self . assertEqual ( round ( st . w , 1 ) , 259.1 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 18.1 ) self . assertEqual ( round ( st . k , 4 ) , 0.0513 ) st = C2 ( T = 150 , P = 1e7 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 591.7 ) self . assertEqual ( round ( st . rhoM , 2 ) , 19.68 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , - 10860 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , - 10350 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 111.2 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 43.93 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 69.65 ) self . assertEqual ( round ( st . w , 0 ) , 1637 ) self . assertEqual ( round ( st . mu . muPas , 0 ) , 273 ) self . assertEqual ( round ( st . k , 3 ) , 0.208 ) st = C2 ( T = 530 , P = 2e7 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 149.4 ) self . assertEqual ( round ( st . rhoM , 3 ) , 4.970 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 19960 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 23980 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 217.7 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 75.23 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 96.67 ) self . assertEqual ( round ( st . w , 1 ) , 426.0 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 25.3 ) self . assertEqual ( round ( st . k , 4 ) , 0.0779 ) st = C2 ( T = 200 , P = 4e7 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 560.2 ) self . assertEqual ( round ( st . rhoM , 2 ) , 18.63 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , - 7940 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , - 5793 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 128.4 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 44.75 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 69.62 ) self . assertEqual ( round ( st . w , 0 ) , 1488 ) self . assertEqual ( round ( st . mu . muPas , 0 ) , 187 ) self . assertEqual ( round ( st . k , 3 ) , 0.184 ) st = C2 ( T = 600 , P = 6e7 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 281.9 ) self . assertEqual ( round ( st . rhoM , 3 ) , 9.374 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 22940 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 29340 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 217.5 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 83.63 ) self . assertEqual ( round ( st . cpM . kJkmolK , 0 ) , 103 ) self . assertEqual ( round ( st . w , 1 ) , 702.9 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 41.7 ) self . assertEqual ( round ( st . k , 3 ) , 0.115 )  def test_friend ( self ) :          st = C2 ( T = 100 , rho = 0 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . hM . kJmol , 3 ) , 3.384 ) self . assertEqual ( round ( st . cpM . JmolK , 3 ) , 35.698 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 3.32 ) self . assertEqual ( round ( st . k . mWmK , 2 ) , 3.46 ) st = C2 ( T = 500 , rho = 0 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . hM . kJmol , 3 ) , 25.059 ) self . assertEqual ( round ( st . cpM . JmolK , 3 ) , 77.987 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 14.76 ) self . assertEqual ( round ( st . k . mWmK , 2 ) , 53.78 ) st = C2 ( T = 100 , x = 0.5 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0.11e-4 ) self . assertEqual ( round ( st . Liquido . rhoM , 2 ) , 21.32 ) self . assertEqual ( round ( st . Gas . rhoM , 7 ) , 0.133e-4 ) self . assertEqual ( round ( st . Liquido . w , 1 ) , 1938.3 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 2 ) , 877.99 ) self . assertEqual ( round ( st . Liquido . k . mWmK , 1 ) , 248.2 ) st = C2 ( T = 200 , x = 0.5 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . P . MPa , 3 ) , 0.217 ) self . assertEqual ( round ( st . Liquido . rhoM , 2 ) , 17.42 ) self . assertEqual ( round ( st . Gas . rhoM , 3 ) , 0.139 ) self . assertEqual ( round ( st . Liquido . w , 1 ) , 1194.8 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 2 ) , 138.23 ) self . assertEqual ( round ( st . Liquido . k . mWmK , 1 ) , 152.6 ) st = C2 ( T = 300 , x = 0.5 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . P . MPa , 3 ) , 4.357 ) self . assertEqual ( round ( st . Liquido . rhoM , 2 ) , 10.08 ) self . assertEqual ( round ( st . Gas . rhoM , 3 ) , 3.808 ) self . assertEqual ( round ( st . Liquido . w , 1 ) , 276.8 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 2 ) , 34.92 ) self . assertEqual ( round ( st . Liquido . k . mWmK , 1 ) , 71.4 ) st = C2 ( T = 100 , P = 1e5 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . rhoM , 2 ) , 21.33 ) self . assertEqual ( round ( st . hM . kJmol , 3 ) , - 14.221 ) self . assertEqual ( round ( st . sM . JmolK , 2 ) , 83.60 ) self . assertEqual ( round ( st . cvM . JmolK , 2 ) , 48.15 ) self . assertEqual ( round ( st . cpM . JmolK , 2 ) , 70.11 ) self . assertEqual ( round ( st . w , 1 ) , 1938.7 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 878.69 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 248.2 ) st = C2 ( T = 130 , P = 1e6 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . rhoM , 2 ) , 20.24 ) self . assertEqual ( round ( st . hM . kJmol , 3 ) , - 12.071 ) self . assertEqual ( round ( st . sM . JmolK , 2 ) , 102.03 ) self . assertEqual ( round ( st . cvM . JmolK , 2 ) , 45.01 ) self . assertEqual ( round ( st . cpM . JmolK , 2 ) , 70.10 ) self . assertEqual ( round ( st . w , 1 ) , 1726.9 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 392.40 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 221.3 ) st = C2 ( T = 160 , P = 5e7 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . rhoM , 2 ) , 20.06 ) self . assertEqual ( round ( st . hM . kJmol , 3 ) , - 8.163 ) self . assertEqual ( round ( st . sM . JmolK , 2 ) , 112.25 ) self . assertEqual ( round ( st . cvM . JmolK , 2 ) , 44.94 ) self . assertEqual ( round ( st . cpM . JmolK , 2 ) , 67.54 ) self . assertEqual ( round ( st . w , 1 ) , 1763.8 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 323.48 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 223.9 ) st = C2 ( T = 200 , P = 1e7 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . rhoM , 2 ) , 17.79 ) self . assertEqual ( round ( st . hM . kJmol , 3 ) , - 6.804 ) self . assertEqual ( round ( st . sM . JmolK , 2 ) , 131.51 ) self . assertEqual ( round ( st . cvM . JmolK , 2 ) , 43.41 ) self . assertEqual ( round ( st . cpM . JmolK , 2 ) , 73.00 ) self . assertEqual ( round ( st . w , 1 ) , 1281.7 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 151.38 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 161.5 ) st = C2 ( T = 250 , P = 5e5 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . rhoM , 2 ) , 0.26 ) self . assertEqual ( round ( st . hM . kJmol , 3 ) , 9.048 ) self . assertEqual ( round ( st . sM . JmolK , 2 ) , 205.92 ) self . assertEqual ( round ( st . cvM . JmolK , 2 ) , 39.92 ) self . assertEqual ( round ( st . cpM . JmolK , 2 ) , 51.02 ) self . assertEqual ( round ( st . w , 1 ) , 276.3 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 8.01 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 16.0 ) st = C2 ( T = 300 , P = 3e7 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . rhoM , 2 ) , 14.78 ) self . assertEqual ( round ( st . hM . kJmol , 3 ) , 1.409 ) self . assertEqual ( round ( st . sM . JmolK , 2 ) , 159.75 ) self . assertEqual ( round ( st . cvM . JmolK , 2 ) , 50.85 ) self . assertEqual ( round ( st . cpM . JmolK , 2 ) , 81.83 ) self . assertEqual ( round ( st . w , 1 ) , 905.4 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 77.56 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 112.6 ) st = C2 ( T = 350 , P = 1e5 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . rhoM , 2 ) , 0.03 ) self . assertEqual ( round ( st . hM . kJmol , 3 ) , 14.720 ) self . assertEqual ( round ( st . sM . JmolK , 2 ) , 238.06 ) self . assertEqual ( round ( st . cvM . JmolK , 2 ) , 50.76 ) self . assertEqual ( round ( st . cpM . JmolK , 2 ) , 59.24 ) self . assertEqual ( round ( st . w , 1 ) , 334.6 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 10.84 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 28.1 ) st = C2 ( T = 400 , P = 5e6 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . rhoM , 2 ) , 1.77 ) self . assertEqual ( round ( st . hM . kJmol , 3 ) , 16.051 ) self . assertEqual ( round ( st . sM . JmolK , 2 ) , 210.58 ) self . assertEqual ( round ( st . cvM . JmolK , 2 ) , 59.05 ) self . assertEqual ( round ( st . cpM . JmolK , 2 ) , 76.57 ) self . assertEqual ( round ( st . w , 1 ) , 322.4 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 13.91 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 40.0 ) st = C2 ( T = 450 , P = 1e5 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . rhoM , 2 ) , 0.03 ) self . assertEqual ( round ( st . hM . kJmol , 3 ) , 21.285 ) self . assertEqual ( round ( st . sM . JmolK , 2 ) , 254.49 ) self . assertEqual ( round ( st . cvM . JmolK , 2 ) , 63.59 ) self . assertEqual ( round ( st . cpM . JmolK , 2 ) , 71.99 ) self . assertEqual ( round ( st . w , 1 ) , 374.6 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 13.52 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 44.6 ) st = C2 ( T = 500 , P = 1e7 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . rhoM , 2 ) , 2.68 ) self . assertEqual ( round ( st . hM . kJmol , 3 ) , 22.854 ) self . assertEqual ( round ( st . sM . JmolK , 2 ) , 220.68 ) self . assertEqual ( round ( st . cvM . JmolK , 2 ) , 71.12 ) self . assertEqual ( round ( st . cpM . JmolK , 2 ) , 88.12 ) self . assertEqual ( round ( st . w , 1 ) , 378.1 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 17.95 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 59.6 )  def test_shortSpan ( self ) :          st = C2 ( T = 700 , rho = 200 , eq = <str> ) self . assertEqual ( round ( st . cp0 . kJkgK , 3 ) , 3.299 ) self . assertEqual ( round ( st . P . MPa , 3 ) , 44.781 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 3.6276 ) st2 = C2 ( T = 750 , rho = 100 , eq = <str> ) self . assertEqual ( round ( st2 . h . kJkg - st . h . kJkg , 2 ) , 209.07 ) self . assertEqual ( round ( st2 . s . kJkgK - st . s . kJkgK , 5 ) , 0.50714 )  def test_Herrmann ( self ) :          self . assertEqual ( round ( C2 ( T = 100 , rho = 650 ) . mu . muPas , 3 ) , 1050.774 ) self . assertEqual ( round ( C2 ( T = 300 , rho = 0 ) . mu . muPas , 6 ) , 9.285785 ) self . assertEqual ( round ( C2 ( T = 300 , rho = 1 ) . mu . muPas , 6 ) , 9.293015 ) self . assertEqual ( round ( C2 ( T = 300 , rho = 100 ) . mu . muPas , 5 ) , 12.55151 ) self . assertEqual ( round ( C2 ( T = 300 , rho = 500 ) . mu . muPas , 4 ) , 114.3985 ) self . assertEqual ( round ( C2 ( T = C2 . Tc , rho = 206.18 ) . mu . muPas , 5 ) , 22.63285 ) self . assertEqual ( round ( C2 ( T = 310 , rho = 1 ) . mu . muPas , 6 ) , 9.592824 ) self . assertEqual ( round ( C2 ( T = 310 , rho = 100 ) . mu . muPas , 5 ) , 12.88843 ) self . assertEqual ( round ( C2 ( T = 310 , rho = 500 ) . mu . muPas , 4 ) , 114.8683 ) self . assertEqual ( round ( C2 ( T = 500 , rho = 1 ) . mu . muPas , 5 ) , 14.85686 ) self . assertEqual ( round ( C2 ( T = 500 , rho = 100 ) . mu . muPas , 5 ) , 18.82032 ) self . assertEqual ( round ( C2 ( T = 500 , rho = 400 ) . mu . muPas , 5 ) , 66.15890 ) self . assertEqual ( round ( C2 ( T = 675 , rho = 0 ) . mu . muPas , 5 ) , 18.97242 ) self . assertEqual ( round ( C2 ( T = 675 , rho = 1 ) . mu . muPas , 5 ) , 18.99427 ) self . assertEqual ( round ( C2 ( T = 675 , rho = 100 ) . mu . muPas , 5 ) , 23.37711 ) self . assertEqual ( round ( C2 ( T = 675 , rho = 300 ) . mu . muPas , 5 ) , 45.90524 )  def test_Vogel ( self ) :          self . assertEqual ( round ( C2 ( T = 100 , rho = 650 , visco = 1 ) . mu . muPas , 9 ) , 1058.240219296 ) self . assertEqual ( round ( C2 ( T = 300 , rho = 1 , visco = 1 ) . mu . muPas , 9 ) , 9.286370770 ) self . assertEqual ( round ( C2 ( T = 300 , rho = 100 , visco = 1 ) . mu . muPas , 9 ) , 12.529249197 ) self . assertEqual ( round ( C2 ( T = 300 , rho = 500 , visco = 1 ) . mu . muPas , 9 ) , 113.730164659 ) self . assertEqual ( round ( C2 ( T = 305.322 , rho = 206.18 , visco = 1 ) . mu . muPas , 9 ) , 22.630721989 ) self . assertEqual ( round ( C2 ( T = 310 , rho = 1 , visco = 1 ) . mu . muPas , 9 ) , 9.581087691 ) self . assertEqual ( round ( C2 ( T = 310 , rho = 100 , visco = 1 ) . mu . muPas , 9 ) , 12.873112150 ) self . assertEqual ( round ( C2 ( T = 310 , rho = 500 , visco = 1 ) . mu . muPas , 9 ) , 114.131039291 ) self . assertEqual ( round ( C2 ( T = 500 , rho = 1 , visco = 1 ) . mu . muPas , 9 ) , 14.834335193 ) self . assertEqual ( round ( C2 ( T = 500 , rho = 100 , visco = 1 ) . mu . muPas , 9 ) , 18.900768605 ) self . assertEqual ( round ( C2 ( T = 500 , rho = 400 , visco = 1 ) . mu . muPas , 9 ) , 66.704548052 ) self . assertEqual ( round ( C2 ( T = 675 , rho = 1 , visco = 1 ) . mu . muPas , 9 ) , 18.902546759 ) self . assertEqual ( round ( C2 ( T = 675 , rho = 100 , visco = 1 ) . mu . muPas , 9 ) , 23.421278317 ) self . assertEqual ( round ( C2 ( T = 675 , rho = 300 , visco = 1 ) . mu . muPas , 9 ) , 45.895671715 )  def test_friendThermo ( self ) :          st = C2 ( T = 100 , rho = 0 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 3.32 ) self . assertEqual ( round ( st . k . mWmK , 2 ) , 3.46 ) st = C2 ( T = 200 , rho = 0 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 6.35 ) self . assertEqual ( round ( st . k . mWmK , 2 ) , 10.49 ) st = C2 ( T = 300 , rho = 0 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 9.39 ) self . assertEqual ( round ( st . k . mWmK , 2 ) , 21.13 ) st = C2 ( T = 400 , rho = 0 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 12.19 ) self . assertEqual ( round ( st . k . mWmK , 2 ) , 35.95 ) st = C2 ( T = 500 , rho = 0 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 14.76 ) self . assertEqual ( round ( st . k . mWmK , 2 ) , 53.78 ) st = C2 ( T = 100 , P = 1e5 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 878.69 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 248.2 ) st = C2 ( T = 170 , P = 6e7 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 301.71 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 221.8 ) st = C2 ( T = 260 , P = 5e6 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 74.61 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 106.5 ) st = C2 ( T = 330 , P = 5e5 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 10.37 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 25.6 ) st = C2 ( T = 380 , P = 1e6 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 11.88 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 33.3 ) st = C2 ( T = 420 , P = 4e7 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 46.86 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 89.7 ) st = C2 ( T = 480 , P = 1e5 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 14.28 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 50.1 ) st = C2 ( T = 500 , P = 6e7 , eq = <str> , visco = 2 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 48.34 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 101.4 )    