from unittest import TestCase from lib import unidades from lib . meos import MEoS class iC6 ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 233.966 ) Tc = unidades . Temperature ( 497.7 ) Pc = unidades . Pressure ( 3040.0 , <str> ) M = 86.17536 Tt = unidades . Temperature ( 119.6 ) Tb = unidades . Temperature ( 333.36 ) f_acent = 0.2797 momentoDipolar = unidades . DipoleMoment ( 0.0 , <str> ) id = 52 Fi1 = { <str> : [ 1 , 3. ] , <str> : [ 0 , 1 ] , <str> : [ 6.9259123919 , - 0.3128629679 ] , <str> : [ 7.9127 , 16.871 , 19.257 , 14.075 ] , <str> : [ 325 / Tc , 1150 / Tc , 2397 / Tc , 5893 / Tc ] } lemmon = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 550.0 , <str> : 1000000.0 , <str> : 9.38 , <str> : [ 1.1027 , - 2.9699 , 1.0295 , - 0.21238 , 0.11897 , 0.00027738 ] , <str> : [ 1 , 1 , 1 , 2 , 3 , 7 ] , <str> : [ 0.25 , 1.125 , 1.5 , 1.375 , 0.25 , 0.875 ] , <str> : [ 0.40103 , - 0.034238 , - 0.43584 , - 0.11693 , - 0.019262 , 0.0080783 ] , <str> : [ 2 , 5 , 1 , 4 , 3 , 4 ] , <str> : [ 0.625 , 1.75 , 3.625 , 3.625 , 14.5 , 12. ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 ] , <str> : [ 1 ] * 6 } eq = lemmon , _surface = { <str> : [ 0.05024 ] , <str> : [ 1.194 ] } _vapor_Pressure = { <str> : 3 , <str> : [ - 0.74130e1 , 0.16267e1 , - 0.22311e1 , - 0.26040e1 , - 0.29490e1 ] , <str> : [ 1.0 , 1.5 , 2.62 , 4.56 , 16.3 ] } _liquid_Density = { <str> : 1 , <str> : [ 0.18489e2 , - 0.43541e2 , 0.43985e2 , - 0.16581e2 , 0.64563 ] , <str> : [ 0.59 , 0.77 , 0.96 , 1.15 , 3.2 ] } _vapor_Density = { <str> : 2 , <str> : [ - 0.41180e1 , - 0.61956e1 , - 0.21190e2 , - 0.58972e2 , - 0.15824e3 ] , <str> : [ 0.4824 , 1.418 , 3.32 , 7.1 , 16.1 ] }  class Test ( TestCase ) :      def test_shortLemmon ( self ) :          st = iC6 ( T = 499 , rho = 2 * iC6 . M ) self . assertEqual ( round ( st . P . kPa , 3 ) , 3058.917 ) self . assertEqual ( round ( st . hM . kJkmol , 3 ) , 48733.740 ) self . assertEqual ( round ( st . sM . kJkmolK , 3 ) , 113.316 ) self . assertEqual ( round ( st . cvM . kJkmolK , 3 ) , 233.627 ) self . assertEqual ( round ( st . cpM . kJkmolK , 3 ) , 1129.816 ) self . assertEqual ( round ( st . w , 3 ) , 90.210 )    