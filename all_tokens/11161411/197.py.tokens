from unittest import TestCase from lib import unidades from lib . meos import MEoS class N2O ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 452.011456 ) Tc = unidades . Temperature ( 309.52 ) Pc = unidades . Pressure ( 7245.0 , <str> ) M = 44.0128 Tt = unidades . Temperature ( 182.33 ) Tb = unidades . Temperature ( 184.68 ) f_acent = 0.1613 momentoDipolar = unidades . DipoleMoment ( 0.1608 , <str> ) id = 110 Fi1 = { <str> : [ 1 , 2.5 ] , <str> : [ 0 , 1 ] , <str> : [ - 4.4262736272 , 4.3120475243 ] , <str> : [ 2.1769 , 1.6145 , 0.48393 ] , <str> : [ 879 / Tc , 2372 / Tc , 5447 / Tc ] } lemmon = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 525.0 , <str> : 50000.0 , <str> : 28.12 , <str> : [ 0.88045 , - 2.4235 , 0.38237 , 0.068917 , 0.00020367 ] , <str> : [ 1 , 1 , 1 , 3 , 7 ] , <str> : [ 0.25 , 1.25 , 1.5 , 0.25 , 0.875 ] , <str> : [ 0.13122 , 0.46032 , - 0.0036985 , - 0.23263 , - 0.00042859 , - 0.042810 , - 0.023038 ] , <str> : [ 1 , 2 , 5 , 1 , 1 , 4 , 2 ] , <str> : [ 2.375 , 2. , 2.125 , 3.5 , 6.5 , 4.75 , 12.5 ] , <str> : [ 1 , 1 , 1 , 2 , 2 , 2 , 3 ] , <str> : [ 1 ] * 7 } eq = lemmon , _surface = { <str> : [ 0.07087 ] , <str> : [ 1.204 ] } _vapor_Pressure = { <str> : 3 , <str> : [ - 0.69078e1 , 0.26620e1 , - 0.22386e1 , - 0.38002e1 , 0.76922 ] , <str> : [ 1.0 , 1.5 , 1.9 , 4.8 , 5.8 ] } _liquid_Density = { <str> : 1 , <str> : [ 0.67919e1 , - 0.16069e2 , 0.25632e2 , - 0.20755e2 , 0.71963e1 ] , <str> : [ 0.47 , 0.72 , 1.0 , 1.3 , 1.6 ] } _vapor_Density = { <str> : 2 , <str> : [ - 3.1287 , - 77.651 , .21442e3 , - .47809e3 , .75185e3 , - .46279e3 ] , <str> : [ 0.409 , 1.91 , 2.33 , 3.0 , 3.6 , 4.0 ] }  class Test ( TestCase ) :      def test_shortLemmon ( self ) :          st = N2O ( T = 311 , rhom = 10 ) self . assertEqual ( round ( st . P . kPa , 3 ) , 7474.778 ) self . assertEqual ( round ( st . hM . kJkmol , 3 ) , 13676.531 ) self . assertEqual ( round ( st . sM . kJkmolK , 3 ) , 52.070 ) self . assertEqual ( round ( st . cvM . kJkmolK , 3 ) , 50.336 ) self . assertEqual ( round ( st . cpM . kJkmolK , 3 ) , 2997.404 ) self . assertEqual ( round ( st . w , 3 ) , 185.945 )    