from unittest import TestCase from lib import unidades from lib . meos import MEoS from lib . mEoS import C3 class Propylene ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 230.08 ) Tc = unidades . Temperature ( 364.211 ) Pc = unidades . Pressure ( 4555.0 , <str> ) M = 42.07974 Tt = unidades . Temperature ( 87.953 ) Tb = unidades . Temperature ( 225.531 ) f_acent = 0.146 momentoDipolar = unidades . DipoleMoment ( 0.366 , <str> ) id = 23 Fi1 = { <str> : [ 1 , 3 ] , <str> : [ 0 , 1 ] , <str> : [ - 5.1823279651 , 4.3639902765 ] , <str> : [ 1.544 , 4.013 , 8.923 , 6.020 ] , <str> : [ 324 / Tc , 973 / Tc , 1932 / Tc , 4317 / Tc ] } Fi2 = { <str> : [ 1 , 3.07317535 ] , <str> : [ 0 , 1 ] , <str> : [ 9.48120502357782 , - 4.47976952867319 ] , <str> : [ 1.7018443 , 3.61342025 , 8.83689058 , 6.27183616 ] , <str> : [ 1.01164134251849 , 2.75278088800174 , 5.16557061703243 , 11.68984352477 ] } CP1 = { <str> : 0.65591381 , <str> : [ 0.44359641e-1 , - .36650786e-4 , 0.16822223e-7 , - .32651013e-11 , 0.33747826e4 ] , <str> : [ 1 , 2 , 3 , 4 , - 2 ] , <str> : [ - 4.7032420 ] , <str> : [ 615.8 ] } lemmon = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 575.0 , <str> : 1000000.0 , <str> : 23.1 , <str> : [ 0.4341002e-1 , 0.1136592e1 , - 0.8528611 , 0.5216669 , - 0.1382953e1 , 0.1214347 ] , <str> : [ 4 , 1 , 1 , 2 , 2 , 3 ] , <str> : [ 1.0 , 0.205 , 0.56 , 0.676 , 1.0 , 0.5 ] , <str> : [ - 0.5984662 , - 0.1391883e1 , - 0.1008434e1 , 0.1961249 , - 0.3606930 , - 0.2407175e-2 ] , <str> : [ 1 , 1 , 3 , 2 , 2 , 8 ] , <str> : [ 1.0 , 1.94 , 2.0 , 1.0 , 2.66 , 0.83 ] , <str> : [ 1 , 2 , 2 , 1 , 2 , 1 ] , <str> : [ 1 ] * 6 , <str> : [ 0.7432121 , 0.1475162 , - 0.2503391e-1 , - 0.2734409 , 0.6378889e-2 , 0.1502940e-1 , - 0.3162971e-1 , - 0.4107194e-1 , - 0.1190241e1 ] , <str> : [ 1 , 1 , 2 , 3 , 3 , 2 , 1 , 2 , 3 ] , <str> : [ 1.6 , 2.5 , 3.0 , 2.5 , 2.72 , 4.0 , 4.0 , 1.0 , 4.0 ] , <str> : [ 1.07 , 0.66 , 1.2 , 1.12 , 1.47 , 1.93 , 3.3 , 15.4 , 6 ] , <str> : [ 0.77 , 0.83 , 0.607 , 0.4 , 0.66 , 0.07 , 3.1 , 387 , 41 ] , <str> : [ 1.21 , 1.08 , 0.83 , 0.56 , 1.22 , 1.81 , 1.54 , 1.12 , 1.4 ] , <str> : [ 0.78 , 0.82 , 1.94 , 0.69 , 1.96 , 1.3 , 0.38 , 0.91 , 0.7 ] } overhoff = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi2 , <str> : <str> , <str> : Tt , <str> : 575.0 , <str> : 1000000.0 , <str> : 23.4 , <str> : [ 0.11167427541961e1 , - 0.76114879497376 , - 0.18654354344883e1 , 0.41500701892893e-1 , 0.10706545719025e-1 , 0.17481482892991e-1 ] , <str> : [ 1 , 1 , 1 , 3 , 4 , 4 ] , <str> : [ 0.125 , 0.625 , 1.25 , 0 , 0.25 , 1.25 ] , <str> : [ 0.56509607629258 , 0.99156795771235 , - 0.16341922173416 , - 0.37037920319844e-1 , - 0.80058345775777e-1 , 0.17004662808796 , 0.81351262137108e-1 , - 0.23817885171378 , 0.12962562859214e-1 , 0.22577442976798e2 , - 0.43611886043491e2 , 0.21944325628071e2 , - 0.66234078215924 , - 0.22258580712469e1 , 0.29538388307646e1 , - 0.10257185828694e1 , 0.20521625234481e-1 , - 0.36462809205891e-1 , 0.17625833164005e-1 ] , <str> : [ 2 , 3 , 3 , 3 , 4 , 4 , 5 , 5 , 6 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 5 , 6 , 1 ] , <str> : [ 2.25 , 1.25 , 2.125 , 2.75 , 0.125 , 2 , 1.125 , 1.5 , 1.375 , 3.5 , 3.75 , 4 , 5 , 3 , 3.5 , 4.5 , 4.75 , 3.25 , 3 , ] , <str> : [ 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 3 ] , <str> : [ 1 ] * 19 , <str> : [ 0.31819374579431 , - 0.32648950998998 , - 0.37684374593786e2 , 0.72265437094447e2 , - 0.34814669335983e2 , - 0.39854778355193e1 , 0.37313453915501 ] , <str> : [ 2 , 2 , 1 , 1 , 1 , 2 , 2 ] , <str> : [ 3 , 4 , 2 , 3 , 4 , 1 , 1 ] , <str> : [ 10 , 10 , 11 , 11 , 11 , 25 , 30 ] , <str> : [ 150 , 150 , 225 , 225 , 225 , 300 , 350 ] , <str> : [ 1.13 , 1.13 , 1.19 , 1.19 , 1.19 , 1.19 , 1.19 ] , <str> : [ 0.85 , 0.85 , 1 , 1 , 1 , 1 , 1 ] } angus = { <str> : <str> , <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> <str> , <str> : <str> } , <str> : 8.31434 , <str> : CP1 , <str> : <str> , <str> : 42.0804 , <str> : 365.57 , <str> : 4664.6 , <str> : 5.3086 , <str> : 100.0 , <str> : 600.0 , <str> : 200000.0 , <str> : 9.73 , <str> : [ 0.631922681460 , 0.102655250604 , - 0.70798923e-2 , 0.18624829 , - 0.1292611017e1 , - 0.5410160974e-1 , 0.5069017035 , - 0.10606146125e1 , 0.763136083 , - 0.850733053e-1 , 0.438262575 , 0.2316495716e-1 , 0.25503741325e-1 , - 0.57327581 , - 0.1141334722e-1 , 0.2502895522 , - 0.468392547833e-1 , 0.325228355714e-2 ] , <str> : [ 0 , 0 , 0 , 1 , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 4 , 4 , 4 , 4 , 5 , 6 , 7 ] , <str> : [ 3 , 4 , 5 , 1 , 2 , 3 , 0 , 1 , 2 , 2 , 3 , 0 , 1 , 3 , - 1 , 3 , 3 , 3 ] , <str> : [ - 0.63192268146 , - 0.102655250604 , 0.70798923e-2 , - 0.63192268146 , - 0.102655250604 , - 0.11049992895 , - 0.31596134073 , - 0.51327625302e-1 , - 0.4918627871e-1 , - 0.17109208434e-1 , - 0.1492467645e-1 , - 0.42773021085e-2 , - 0.8554604217e-3 , - 0.14257673695e-3 ] , <str> : [ 0 , 0 , 0 , 2 , 2 , 2 , 4 , 4 , 6 , 6 , 8 , 8 , 10 , 12 ] , <str> : [ 3 , 4 , 5 , 3 , 4 , 5 , 3 , 4 , 3 , 4 , 3 , 4 , 4 , 4 ] , <str> : [ 2 ] * 14 , <str> : [ 1 ] * 14 } eq = lemmon , overhoff , angus _PR = [ - 0.1815 , - 16.3103 ] _surface = { <str> : [ 0.05268 ] , <str> : [ 1.186 ] } _melting = { <str> : 2 , <str> : { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> } , <str> : Tt , <str> : 2000.0 , <str> : Tt , <str> : 0.00074864 , <str> : [ 3196e5 ] , <str> : [ 2.821 ] } _vapor_Pressure = { <str> : 3 , <str> : [ - 6.75625 , 2.02700 , - 1.35883 , - 2.74671 , - 0.936445 ] , <str> : [ 1.0 , 1.5 , 1.9 , 4.3 , 15.0 ] } _liquid_Density = { <str> : 1 , <str> : [ 0.405430 , 2.02481 , 0.304022 , 0.179159 ] , <str> : [ 0.195 , 0.47 , 2.25 , 8.0 ] } _vapor_Density = { <str> : 2 , <str> : [ - 1.59841 , - 4.73840 , - 10.8886 , - 31.0312 , - 56.9431 , - 143.544 ] , <str> : [ 0.309 , 0.853 , 2.37 , 5.2 , 10. , 20. ] } trnECS = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : <str> , <str> : C3 , <str> : <str> , <str> : <str> , <str> : 298.9 , <str> : 0.4678 , <str> : 5 , <str> : [ 1.33962 , - 0.256307 , 4.68211e-2 ] , <str> : [ 0 , 1 , 2 ] , <str> : [ 1.09939e-3 , 3.72539e-7 ] , <str> : [ 0 , 1 ] , <str> : [ 1.3521 , - 0.123177 ] , <str> : [ 0 , 1 ] , <str> : 3 , <str> : 0.63 , <str> : 1.239 , <str> : 1.03 , <str> : 0.194e-9 , <str> : 0.0496 , <str> : 5e-10 , <str> : 1.5 * Tc } _viscosity = trnECS , thermo0 = { <str> : <str> , <str> : { <str> : <str> <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 364.211 , <str> : 1e-3 , <str> : [ - 1.37218 , 17.3386 , - 3.27682 , 9.34452 , 12.88 , - 1.5705 ] , <str> : [ 0 , 1 , 2 , 3 , 4 , 5 ] , <str> : [ 1.39367 , - 1.04648 , 1 ] , <str> : [ 0 , 1 , 2 ] , <str> : 364.211 , <str> : 229.63 , <str> : 1e-3 , <str> : [ 0.271511e1 , - 0.363839e2 , 0.106159e3 , - 0.616755e2 , 0.105424e2 , 0.994697e1 , 0.242705e2 , - 0.659429e2 , 0.379916e2 , - 0.569120e1 ] , <str> : [ 0 , 0 , 0 , 0 , 0 , - 1 , - 1 , - 1 , - 1 , - 1 ] , <str> : [ 1 , 2 , 3 , 4 , 5 , 1 , 2 , 3 , 4 , 5 ] , <str> : 3 , <str> : 0.63 , <str> : 1.239 , <str> : 1.02 , <str> : 0.198e-9 , <str> : 0.057 , <str> : 0.43e-9 , <str> : 546.32 } _thermal = thermo0 , trnECS  class Test ( TestCase ) :      def test_Assael ( self ) :          kw = { <str> : <str> } self . assertEqual ( round ( Propylene ( T = 200 , rho = 0 , ** kw ) . k . mWmK , 2 ) , 8.75 ) self . assertEqual ( round ( Propylene ( T = 300 , rho = 0 , ** kw ) . k . mWmK , 2 ) , 17.55 ) self . assertEqual ( round ( Propylene ( T = 400 , rho = 0 , ** kw ) . k . mWmK , 2 ) , 29.18 ) self . assertEqual ( round ( Propylene ( T = 500 , rho = 0 , ** kw ) . k . mWmK , 2 ) , 42.64 ) self . assertEqual ( round ( Propylene ( T = 200 , P = 1e5 , ** kw ) . k . mWmK , 1 ) , 152.3 ) self . assertEqual ( round ( Propylene ( T = 300 , P = 1e5 , ** kw ) . k . mWmK , 2 ) , 17.64 ) self . assertEqual ( round ( Propylene ( T = 400 , P = 1e5 , ** kw ) . k . mWmK , 2 ) , 29.26 ) self . assertEqual ( round ( Propylene ( T = 500 , P = 1e5 , ** kw ) . k . mWmK , 2 ) , 42.71 ) self . assertEqual ( round ( Propylene ( T = 200 , P = 2.5e7 , ** kw ) . k . mWmK , 1 ) , 171.9 ) self . assertEqual ( round ( Propylene ( T = 300 , P = 2.5e7 , ** kw ) . k . mWmK , 1 ) , 126.7 ) self . assertEqual ( round ( Propylene ( T = 400 , P = 2.5e7 , ** kw ) . k . mWmK , 2 ) , 98.92 ) self . assertEqual ( round ( Propylene ( T = 500 , P = 2.5e7 , ** kw ) . k . mWmK , 2 ) , 80.31 ) self . assertEqual ( round ( Propylene ( T = 200 , P = 5e7 , ** kw ) . k . mWmK , 1 ) , 190.9 ) self . assertEqual ( round ( Propylene ( T = 300 , P = 5e7 , ** kw ) . k . mWmK , 1 ) , 145.1 ) self . assertEqual ( round ( Propylene ( T = 400 , P = 5e7 , ** kw ) . k . mWmK , 1 ) , 122.2 ) self . assertEqual ( round ( Propylene ( T = 500 , P = 5e7 , ** kw ) . k . mWmK , 1 ) , 106.5 ) self . assertEqual ( round ( Propylene ( T = 350 , rho = 385 , ** kw ) . k . mWmK , 2 ) , 81.48 )    