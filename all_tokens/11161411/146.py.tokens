<str> from scipy . constants import R from lib . EoS . cubic import Cubic class SRK ( Cubic ) :      <str> __title__ = <str> __status__ = <str> __doi__ = ( { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> } ) def __init__ ( self , T , P , mezcla ) :          self . T = T self . P = P self . mezcla = mezcla ai = [ ] bi = [ ] for cmp in mezcla . componente :              a , b = self . _lib ( cmp , T ) ai . append ( a ) bi . append ( b )  am , bm = self . _mixture ( <str> , mezcla . ids , [ ai , bi ] ) self . ai = ai self . bi = bi self . b = bm self . tita = am self . delta = bm self . epsilon = 0 super ( SRK , self ) . __init__ ( T , P , mezcla )  def _lib ( self , cmp , T ) :          ao = 0.42747 * R ** 2 * cmp . Tc ** 2 / cmp . Pc b = 0.08664 * R * cmp . Tc / cmp . Pc alfa = self . _alfa ( cmp , T ) return ao * alfa , b  def _alfa ( self , cmp , T ) :          m = 0.48 + 1.574 * cmp . f_acent - 0.176 * cmp . f_acent ** 2 return ( 1 + m * ( 1 - ( T / cmp . Tc ) ** 0.5 ) ) ** 2    