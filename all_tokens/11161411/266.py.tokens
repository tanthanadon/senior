from unittest import TestCase from lib import unidades from lib . meos import MEoS class R1234ze ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> rhoc = unidades . Density ( 489.238464 ) Tc = unidades . Temperature ( 382.513 ) Pc = unidades . Pressure ( 3634.9 , <str> ) M = 114.0416 Tt = unidades . Temperature ( 168.62 ) Tb = unidades . Temperature ( 254.177 ) f_acent = 0.313 momentoDipolar = unidades . DipoleMoment ( 1.27 , <str> ) Fi1 = { <str> : [ 1 , 3 ] , <str> : [ 0 , 1 ] , <str> : [ - 12.558347537 , 8.7912297624 ] , <str> : [ 9.3575 , 10.717 ] , <str> : [ 513 / Tc , 1972 / Tc ] } Fi2 = { <str> : [ 1 , 5.8887 ] , <str> : [ ] , <str> : [ ] , <str> : [ 7.0804 , 9.3371 , 2.5577 ] , <str> : [ 620 / Tc , 1570 / Tc , 3953 / Tc ] } Fi3 = { <str> : [ 1 , 3 ] , <str> : [ 0 , 1 ] , <str> : [ - 10.8724711 , - 30.1326538 ] , <str> : [ 6.07536 , 9.95795 ] , <str> : [ 289 / Tc , 1303 / Tc ] } thol = { <str> : <str> , <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.3144621 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 420.0 , <str> : 20000.0 , <str> : 13.26 , <str> : [ 0.03982797 , 1.812227 , - 2.537512 , - 0.5333254 , 0.1677031 ] , <str> : [ 4 , 1 , 1 , 2 , 3 ] , <str> : [ 1.0 , 0.223 , 0.755 , 1.24 , 0.44 ] , <str> : [ - 1.323801 , - 0.6694654 , 0.8072718 , - 0.7740229 , - 0.01843846 ] , <str> : [ 1 , 3 , 2 , 2 , 7 ] , <str> : [ 2. , 2.2 , 1.2 , 1.5 , 0.9 ] , <str> : [ 2 , 2 , 1 , 2 , 1 ] , <str> : [ 1 ] * 5 , <str> : [ 1.407916 , - 0.4237082 , - 0.2270068 , - 0.805213 , 0.00994318 , - 0.008798793 ] , <str> : [ 1 , 1 , 3 , 3 , 2 , 1 ] , <str> : [ 1.33 , 1.75 , 2.11 , 1.0 , 1.5 , 1.0 ] , <str> : [ 1.0 , 1.61 , 1.24 , 9.34 , 5.78 , 3.08 ] , <str> : [ 1.21 , 1.37 , 0.98 , 171 , 47.4 , 15.4 ] , <str> : [ 0.943 , 0.642 , 0.59 , 1.2 , 1.33 , 0.64 ] , <str> : [ 0.728 , 0.87 , 0.855 , 0.79 , 1.3 , 0.71 ] , <str> : [ ] } mclinden = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> <str> , <str> : <str> <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi2 , <str> : <str> , <str> : 382.52 , <str> : 4.29 , <str> : 114.0415928 , <str> : Tt , <str> : 420.0 , <str> : 20000.0 , <str> : 13.20 , <str> : [ 0.055563 , 1.66927 , - 2.53408 , - 0.475075 , 0.190055 ] , <str> : [ 4 , 1 , 1 , 2 , 3 ] , <str> : [ 1.0 , 0.34 , 0.91 , 1.23 , 0.46 ] , <str> : [ - 1.25154 , - 0.742195 , 0.537902 , - 0.741246 , - 0.0355064 ] , <str> : [ 1 , 3 , 2 , 2 , 7 ] , <str> : [ 2.26 , 2.50 , 2.0 , 2.24 , 0.9 ] , <str> : [ 2 , 2 , 1 , 2 , 1 ] , <str> : [ 1 ] * 5 , <str> : [ 1.58506 , - 0.502086 , - 0.19136 , - 0.975576 ] , <str> : [ 1 , 1 , 3 , 3 ] , <str> : [ 1.06 , 1.79 , 3.75 , 0.92 ] , <str> : [ 1.02 , 1.34 , 1.08 , 6.41 ] , <str> : [ 1.19 , 2.29 , 1.15 , 131.8 ] , <str> : [ 1.14 , 0.667 , 0.505 , 1.22 ] , <str> : [ 0.711 , 0.914 , 0.694 , 0.731 ] } akasaka = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi3 , <str> : <str> , <str> : 240. , <str> : 420.0 , <str> : 15000.0 , <str> : 13.20 , <str> : [ 8.5579765 , - 9.4701332 , - 0.25013623 , 0.1378987 , 0.012177113 ] , <str> : [ 1 , 1 , 1 , 2 , 5 ] , <str> : [ 0.66886 , 0.83392 , 1.6982 , 1.8030 , 0.36657 ] , <str> : [ - 0.14227996 , 0.10096648 , 0.017504319 , - 0.017627303 , - 0.014705120 , 0.37202269 , - 0.30138266 , - 0.092927274 , 0.087051177 , 0.01811377 , - 0.016018424 , 0.005380986 ] , <str> : [ 1 , 3 , 5 , 7 , 1 , 2 , 2 , 3 , 4 , 2 , 3 , 5 ] , <str> : [ 3.8666 , 1.0194 , 0 , 1.1655 , 8.3101 , 6.1459 , 8.3495 , 6.0422 , 7.444 , 15.433 , 21.543 , 15.499 ] , <str> : [ 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 3 , 3 , 3 ] , <str> : [ 1 ] * 12 } eq = thol , mclinden , akasaka _surface = { <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : [ 0.05681 ] , <str> : [ 1.23 ] } _vapor_Pressure = { <str> : 3 , <str> : [ - 7.5888 , 1.9696 , - 2.0827 , - 4.1238 ] , <str> : [ 1.0 , 1.5 , 2.2 , 4.6 ] } _liquid_Density = { <str> : 1 , <str> : [ 1.1913 , 2.2456 , - 1.7747 , 1.3096 ] , <str> : [ 0.27 , 0.7 , 1.25 , 1.9 ] } _vapor_Density = { <str> : 2 , <str> : [ - 1.0308 , - 5.0422 , - 11.5 , - 37.499 , - 77.945 ] , <str> : [ 0.24 , 0.72 , 2.1 , 4.8 , 9.5 ] } thermo0 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 3.6363e6 , <str> : 382.52 , <str> : 1 , <str> : [ - 0.0103589 , 0.0308929 , 0.000230348 ] , <str> : [ 0 , 1 , 2 ] , <str> : 382.52 , <str> : 489.24 , <str> : 1. , <str> : [ - 0.0428296 , 0.0927099 , - 0.0702107 , 0.0249708 , - 0.00301838 , 0.0434288 , - 0.0605844 , 0.0440187 , - 0.0155082 , 0.0021019 ] , <str> : [ 0 , 0 , 0 , 0 , 0 , - 1 , - 1 , - 1 , - 1 , - 1 ] , <str> : [ 1 , 2 , 3 , 4 , 5 , 1 , 2 , 3 , 4 , 5 ] , <str> : 3 , <str> : 0.63 , <str> : 1.239 , <str> : 1.03 , <str> : 0.194e-9 , <str> : 0.0496 , <str> : 5.835e-10 , <str> : 573.78 } _thermal = thermo0 ,  class Test ( TestCase ) :      def test_thol ( self ) :          st = R1234ze ( T = 200 , rhom = 12.6 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 2.161400 ) self . assertEqual ( round ( st . cvM . JmolK , 4 ) , 94.9481 ) self . assertEqual ( round ( st . cpM . JmolK , 3 ) , 139.161 ) self . assertEqual ( round ( st . w , 3 ) , 982.461 ) st = R1234ze ( T = 350 , rhom = 11.4 ) self . assertEqual ( round ( st . P . MPa , 5 ) , 95.04156 ) self . assertEqual ( round ( st . cvM . JmolK , 3 ) , 112.495 ) self . assertEqual ( round ( st . cpM . JmolK , 3 ) , 144.400 ) self . assertEqual ( round ( st . w , 3 ) , 902.540 ) st = R1234ze ( T = 383 , rhom = 4.29 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 3.670105 ) self . assertEqual ( round ( st . cvM . JmolK , 3 ) , 151.107 ) self . assertEqual ( round ( st . cpM . JmolK , 1 ) , 17431.1 ) self . assertEqual ( round ( st . w , 4 ) , 79.9438 ) st = R1234ze ( T = 200 , rhom = 0 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0 ) self . assertEqual ( round ( st . cvM . JmolK , 4 ) , 71.6045 ) self . assertEqual ( round ( st . cpM . JmolK , 4 ) , 79.9190 ) self . assertEqual ( round ( st . w , 3 ) , 127.572 ) st = R1234ze ( T = 360 , rhom = 1 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 2.039103 ) self . assertEqual ( round ( st . cvM . JmolK , 3 ) , 113.342 ) self . assertEqual ( round ( st . cpM . JmolK , 3 ) , 161.395 ) self . assertEqual ( round ( st . w , 3 ) , 122.236 ) st = R1234ze ( T = 420 , rhom = 8 ) self . assertEqual ( round ( st . P . MPa , 5 ) , 19.95447 ) self . assertEqual ( round ( st . cvM . JmolK , 3 ) , 120.029 ) self . assertEqual ( round ( st . cpM . JmolK , 3 ) , 169.513 ) self . assertEqual ( round ( st . w , 3 ) , 371.320 )  def test_Perkins ( self ) :          st = R1234ze ( T = 250 , P = 5e4 , eq = <str> ) self . assertEqual ( round ( st . k , 7 ) , 0.0098506 ) st = R1234ze ( T = 300 , P = 1e5 , eq = <str> ) self . assertEqual ( round ( st . k , 6 ) , 0.013934 ) st = R1234ze ( T = 250 , P = 2e7 , eq = <str> ) self . assertEqual ( round ( st . k , 5 ) , 0.10068 ) st = R1234ze ( T = 300 , P = 2e7 , eq = <str> ) self . assertEqual ( round ( st . k , 6 ) , 0.085574 )    