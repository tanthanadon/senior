from unittest import TestCase from scipy import exp from lib import unidades from lib . meos import MEoS class EthylBenzene ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 291. ) Tc = unidades . Temperature ( 617.12 ) Pc = unidades . Pressure ( 3622.4 , <str> ) M = 106.165 Tt = unidades . Temperature ( 178.2 ) Tb = unidades . Temperature ( 409.314 ) f_acent = 0.305 momentoDipolar = unidades . DipoleMoment ( 0.6 , <str> ) id = 45 Fi1 = { <str> : [ 1 , 4.2557889 ] , <str> : [ 0 , 1 ] , <str> : [ 5.70409 , - 0.52414353 ] , <str> : [ 9.7329909 , 11.201832 , 25.440749 ] , <str> : [ 585 / Tc , 4420 / Tc , 1673 / Tc ] } zhou = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 700.0 , <str> : 60000.0 , <str> : 9.124 , <str> : [ 0.0018109418 , - 0.076824284 , 0.041823789 , 1.5059649 , - 2.4122441 , - 0.47788846 , 0.18814732 ] , <str> : [ 5 , 1 , 4 , 1 , 1 , 2 , 3 ] , <str> : [ 1 , 1 , 0.92 , 0.27 , 0.962 , 1.033 , 0.513 ] , <str> : [ - 1.0657412 , - 0.20797007 , 1.1222031 , - 0.99300799 , - 0.027300984 ] , <str> : [ 1 , 3 , 2 , 2 , 7 ] , <str> : [ 2.31 , 3.21 , 1.26 , 2.29 , 1.0 ] , <str> : [ 2 , 2 , 1 , 2 , 1 ] , <str> : [ 1 ] * 5 , <str> : [ 1.3757894 , - 0.44477155 , - 0.07769742 , - 2.16719 ] , <str> : [ 1 , 1 , 3 , 3 ] , <str> : [ 0.6 , 3.6 , 2.1 , 0.5 ] , <str> : [ 1.178 , 1.07 , 1.775 , 15.45 ] , <str> : [ 2.437 , 1.488 , 4 , 418.6 ] , <str> : [ 1.2667 , 0.4237 , 0.8573 , 1.15 ] , <str> : [ 0.5494 , 0.7235 , 0.493 , 0.8566 ] } eq = zhou , _vapor_Pressure = { <str> : 3 , <str> : [ - 7.8411 , 2.5921 , - 3.502 , - 2.7613 ] , <str> : [ 1.0 , 1.5 , 2.5 , 5.4 ] } _liquid_Density = { <str> : 1 , <str> : [ 3.5146 , - 3.7537 , 5.476 , - 3.4724 , 1.2141 ] , <str> : [ 0.43 , 0.83 , 1.3 , 1.9 , 3.1 ] } _vapor_Density = { <str> : 2 , <str> : [ - 3.2877 , - 3.6071 , - 15.878 , - 53.363 , - 128.57 ] , <str> : [ 0.42 , 0.98 , 2.48 , 5.9 , 13.4 ] } visco0 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 3 , <str> : [ - 1.4933 , 473.2 , - 57033 ] , <str> : 1 , <str> : 0.22115 / M ** 0.5 , <str> : 617.12 , <str> : 2.741016 * M , <str> : [ - 0.0376893 , 0.168877 , 17.9684 , 3.57702e-11 , 29.996 , - 8.00082 , - 25.7468 ] , <str> : [ 209 / 30 , 209 / 30 , 29 / 30 , 731 / 30 , 59 / 30 , 29 / 30 , 455 / 300 ] , <str> : [ - 0.5 , 0.6 , - 0.5 , 2.9 , - 0.5 , - 1.5 , - 0.5 ] , <str> : <str> } def _vir ( self , rho , T , fase ) :          muB = 0 if rho :              for i , n in enumerate ( [ 13.2814 , - 10862.4 , 1664060 ] ) :                  muB += n / T ** i   Ei = [ - 3.29316e-13 , - 2.92665e-13 , 2.97768e-13 , 1.76186e-18 ] ni = [ 4.6 , 11.1 , 5.6 , 12.4 ] ki = [ 20.8 , 10.6 , 19.7 , 21.9 ] Tr = T / 617.12 rhor = rho / self . M / 2.741016 g = 0 for E , n , k in zip ( Ei , ni , ki ) :              g += E * rhor ** n / Tr ** k  mur = g * exp ( rhor ** 2 ) return muB * rho / self . M + mur  _viscosity = visco0 , thermo0 = { <str> : <str> , <str> : { <str> : <str> <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 617.12 , <str> : 1e-3 , <str> : [ - 1.10708 , 10.8026 , - 28.9015 , 41.9227 , 20.9133 , - 4.01492 ] , <str> : [ 0 , 1 , 2 , 3 , 4 , 5 ] , <str> : [ 0.259475 , - 0.343879 , 1 ] , <str> : [ 0 , 1 , 2 ] , <str> : 617.12 , <str> : 291 , <str> : 1e-3 , <str> : [ - 4.97837e1 , 1.06739e2 , - 6.85137e1 , 2.26133e1 , - 2.79455 , 6.63073e1 , - 1.46279e2 , 1.21439e2 , - 4.62245e1 , 6.58554 ] , <str> : [ 0 , 0 , 0 , 0 , 0 , - 1 , - 1 , - 1 , - 1 , - 1 ] , <str> : [ 1 , 2 , 3 , 4 , 5 , 1 , 2 , 3 , 4 , 5 ] , <str> : 3 , <str> : 0.63 , <str> : 1.239 , <str> : 1.02 , <str> : 0.235e-9 , <str> : 0.056 , <str> : 0.706e-9 , <str> : 925.7 } _thermal = thermo0 ,  class Test ( TestCase ) :      def test_Meng ( self ) :          st = EthylBenzene ( T = 273.15 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 0.0003 ) self . assertEqual ( round ( st . Gas . rhoM , 4 ) , 0.0001 ) self . assertEqual ( round ( st . Liquido . rhoM , 4 ) , 8.3287 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 1 ) , 879.4 ) st = EthylBenzene ( T = 333.15 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 0.0074 ) self . assertEqual ( round ( st . Gas . rhoM , 4 ) , 0.0027 ) self . assertEqual ( round ( st . Liquido . rhoM , 4 ) , 7.8329 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 1 ) , 435.1 ) st = EthylBenzene ( T = 393.15 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 0.0643 ) self . assertEqual ( round ( st . Gas . rhoM , 4 ) , 0.0203 ) self . assertEqual ( round ( st . Gas . mu . muPas , 2 ) , 8.48 ) self . assertEqual ( round ( st . Liquido . rhoM , 4 ) , 7.3104 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 1 ) , 263.5 ) st = EthylBenzene ( T = 453.15 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 0.2884 ) self . assertEqual ( round ( st . Gas . rhoM , 4 ) , 0.0842 ) self . assertEqual ( round ( st . Gas . mu . muPas , 2 ) , 9.79 ) self . assertEqual ( round ( st . Liquido . rhoM , 4 ) , 6.7317 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 1 ) , 171.0 ) st = EthylBenzene ( T = 553.15 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 1.5899 ) self . assertEqual ( round ( st . Gas . rhoM , 4 ) , 0.4922 ) self . assertEqual ( round ( st . Gas . mu . muPas , 2 ) , 12.52 ) self . assertEqual ( round ( st . Liquido . rhoM , 4 ) , 5.4711 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 2 ) , 85.66 ) self . assertEqual ( round ( EthylBenzene ( T = 250 , rhom = 8.9814 ) . mu . muPas , 3 ) , 2948.109 ) self . assertEqual ( round ( EthylBenzene ( T = 300 , rhom = 8.1093 ) . mu . muPas , 3 ) , 616.814 ) self . assertEqual ( round ( EthylBenzene ( T = 300 , rhom = 8.4082 ) . mu . muPas , 3 ) , 875.361 ) self . assertEqual ( round ( EthylBenzene ( T = 300 , rhom = 8.6762 ) . mu . muPas , 3 ) , 1262.986 ) self . assertEqual ( round ( EthylBenzene ( T = 350 , rhom = 0 ) . mu . muPas , 3 ) , 7.591 ) self . assertEqual ( round ( EthylBenzene ( T = 400 , rhom = 0 ) . mu . muPas , 3 ) , 8.616 ) self . assertEqual ( round ( EthylBenzene ( T = 400 , rhom = 7.2481 ) . mu . muPas , 3 ) , 250.283 ) self . assertEqual ( round ( EthylBenzene ( T = 400 , rhom = 8.1196 ) . mu . muPas , 3 ) , 509.868 ) self . assertEqual ( round ( EthylBenzene ( T = 500 , rhom = 0 ) . mu . muPas , 3 ) , 10.734 ) self . assertEqual ( round ( EthylBenzene ( T = 500 , rhom = 0.02 ) . mu . muPas , 3 ) , 10.776 ) self . assertEqual ( round ( EthylBenzene ( T = 600 , rhom = 0 ) . mu . muPas , 3 ) , 12.841 ) self . assertEqual ( round ( EthylBenzene ( T = 600 , rhom = 6.4831 ) . mu . muPas , 3 ) , 155.940 ) self . assertEqual ( round ( EthylBenzene ( T = 600 , rhom = 7.1427 ) . mu . muPas , 3 ) , 229.686 )  def test_Mylona ( self ) :          self . assertEqual ( round ( EthylBenzene ( T = 200 , rho = 0 ) . k . mWmK , 2 ) , 3.96 ) self . assertEqual ( round ( EthylBenzene ( T = 300 , rho = 0 ) . k . mWmK , 2 ) , 9.71 ) self . assertEqual ( round ( EthylBenzene ( T = 400 , rho = 0 ) . k . mWmK , 2 ) , 18.39 ) self . assertEqual ( round ( EthylBenzene ( T = 500 , rho = 0 ) . k . mWmK , 2 ) , 29.15 ) self . assertEqual ( round ( EthylBenzene ( T = 600 , rho = 0 ) . k . mWmK , 2 ) , 41.13 ) self . assertEqual ( round ( EthylBenzene ( T = 700 , rho = 0 ) . k . mWmK , 2 ) , 53.83 ) self . assertEqual ( round ( EthylBenzene ( T = 200 , P = 1e5 ) . k . mWmK , 1 ) , 151.0 ) self . assertEqual ( round ( EthylBenzene ( T = 300 , P = 1e5 ) . k . mWmK , 1 ) , 127.3 ) self . assertEqual ( round ( EthylBenzene ( T = 400 , P = 1e5 ) . k . mWmK , 1 ) , 103.8 ) self . assertEqual ( round ( EthylBenzene ( T = 500 , P = 1e5 ) . k . mWmK , 2 ) , 29.19 ) self . assertEqual ( round ( EthylBenzene ( T = 600 , P = 1e5 ) . k . mWmK , 2 ) , 41.24 ) self . assertEqual ( round ( EthylBenzene ( T = 700 , P = 1e5 ) . k . mWmK , 2 ) , 53.98 ) self . assertEqual ( round ( EthylBenzene ( T = 200 , P = 2e7 ) . k . mWmK , 1 ) , 154.4 ) self . assertEqual ( round ( EthylBenzene ( T = 300 , P = 2e7 ) . k . mWmK , 1 ) , 133.0 ) self . assertEqual ( round ( EthylBenzene ( T = 400 , P = 2e7 ) . k . mWmK , 1 ) , 111.8 ) self . assertEqual ( round ( EthylBenzene ( T = 500 , P = 2e7 ) . k . mWmK , 2 ) , 96.94 ) self . assertEqual ( round ( EthylBenzene ( T = 300 , P = 6e7 ) . k . mWmK , 1 ) , 143.0 ) self . assertEqual ( round ( EthylBenzene ( T = 617 , rho = 316 ) . k . mWmK , 1 ) , 147.9 )    