from PyQt5 import QtWidgets from lib . petro import Petroleo class Widget ( QtWidgets . QWidget ) :      def __init__ ( self , config = None , parent = None ) :          super ( Widget , self ) . __init__ ( parent ) layout = QtWidgets . QGridLayout ( self ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 1 , 1 ) self . M = QtWidgets . QComboBox ( ) for p in Petroleo . METHODS_M :              self . M . addItem ( p )  layout . addWidget ( self . M , 1 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 2 , 1 ) self . critical = QtWidgets . QComboBox ( ) for c in Petroleo . METHODS_crit :              self . critical . addItem ( c )  layout . addWidget ( self . critical , 2 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 3 , 1 ) self . vc = QtWidgets . QComboBox ( ) for v in Petroleo . METHODS_Vc :              self . vc . addItem ( v )  layout . addWidget ( self . vc , 3 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 4 , 1 ) self . f_acent = QtWidgets . QComboBox ( ) for w in Petroleo . METHODS_w :              self . f_acent . addItem ( w )  layout . addWidget ( self . f_acent , 4 , 2 ) layout . addWidget ( QtWidgets . QLabel ( <str> ) , 5 , 1 ) self . Zc = QtWidgets . QComboBox ( ) for method in Petroleo . METHODS_Zc :              self . Zc . addItem ( method )  layout . addWidget ( self . Zc , 5 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 6 , 1 ) self . Tb = QtWidgets . QComboBox ( ) for tb in Petroleo . METHODS_Tb :              self . Tb . addItem ( tb )  layout . addWidget ( self . Tb , 6 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 7 , 1 ) self . SG = QtWidgets . QComboBox ( ) for sg in Petroleo . METHODS_SG :              self . SG . addItem ( sg )  layout . addWidget ( self . SG , 7 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 8 , 1 ) self . n = QtWidgets . QComboBox ( ) for n in Petroleo . METHODS_n :              self . n . addItem ( n )  layout . addWidget ( self . n , 8 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 9 , 1 ) self . PNA = QtWidgets . QComboBox ( ) for method in Petroleo . METHODS_PNA :              self . PNA . addItem ( method )  layout . addWidget ( self . PNA , 9 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 10 , 1 ) self . curves = QtWidgets . QComboBox ( ) self . curves . addItem ( <str> ) self . curves . addItem ( <str> ) layout . addWidget ( self . curves , 10 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 11 , 1 ) self . H = QtWidgets . QComboBox ( ) for method in Petroleo . METHODS_H :              self . H . addItem ( method )  layout . addWidget ( self . H , 11 , 2 ) layout . addItem ( QtWidgets . QSpacerItem ( 10 , 0 , QtWidgets . QSizePolicy . Expanding , QtWidgets . QSizePolicy . Expanding ) , 15 , 1 , 1 , 3 ) if config . has_section ( <str> ) :              self . M . setCurrentIndex ( config . getint ( <str> , <str> ) ) self . critical . setCurrentIndex ( config . getint ( <str> , <str> ) ) self . vc . setCurrentIndex ( config . getint ( <str> , <str> ) ) self . f_acent . setCurrentIndex ( config . getint ( <str> , <str> ) ) self . Tb . setCurrentIndex ( config . getint ( <str> , <str> ) ) self . SG . setCurrentIndex ( config . getint ( <str> , <str> ) ) self . n . setCurrentIndex ( config . getint ( <str> , <str> ) ) self . Zc . setCurrentIndex ( config . getint ( <str> , <str> ) ) self . PNA . setCurrentIndex ( config . getint ( <str> , <str> ) ) self . H . setCurrentIndex ( config . getint ( <str> , <str> ) ) self . curves . setCurrentIndex ( config . getint ( <str> , <str> ) )   def value ( self , config ) :          if not config . has_section ( <str> ) :              config . add_section ( <str> )  config . set ( <str> , <str> , str ( self . M . currentIndex ( ) ) ) config . set ( <str> , <str> , str ( self . critical . currentIndex ( ) ) ) config . set ( <str> , <str> , str ( self . vc . currentIndex ( ) ) ) config . set ( <str> , <str> , str ( self . f_acent . currentIndex ( ) ) ) config . set ( <str> , <str> , str ( self . Tb . currentIndex ( ) ) ) config . set ( <str> , <str> , str ( self . SG . currentIndex ( ) ) ) config . set ( <str> , <str> , str ( self . n . currentIndex ( ) ) ) config . set ( <str> , <str> , str ( self . Zc . currentIndex ( ) ) ) config . set ( <str> , <str> , str ( self . PNA . currentIndex ( ) ) ) config . set ( <str> , <str> , str ( self . H . currentIndex ( ) ) ) config . set ( <str> , <str> , str ( self . curves . currentIndex ( ) ) ) return config   class ConfigDialog ( QtWidgets . QDialog ) :      def __init__ ( self , config = None , parent = None ) :          super ( ConfigDialog , self ) . __init__ ( parent ) self . setWindowTitle ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout = QtWidgets . QVBoxLayout ( self ) self . widget = Widget ( config ) layout . addWidget ( self . widget ) self . buttonBox = QtWidgets . QDialogButtonBox ( QtWidgets . QDialogButtonBox . Cancel | QtWidgets . QDialogButtonBox . Ok ) self . buttonBox . accepted . connect ( self . accept ) self . buttonBox . rejected . connect ( self . reject ) layout . addWidget ( self . buttonBox )  def value ( self , config ) :          config = self . widget . value ( config ) return config   if __name__ == <str> :      import os import sys from configparser import ConfigParser app = QtWidgets . QApplication ( sys . argv ) conf_dir = os . path . expanduser ( <str> ) + <str> config = ConfigParser ( ) config . read ( conf_dir + <str> ) Dialog = ConfigDialog ( config ) Dialog . show ( ) sys . exit ( app . exec_ ( ) )   