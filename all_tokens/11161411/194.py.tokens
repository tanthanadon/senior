from unittest import TestCase from scipy import exp from scipy . constants import pi , Avogadro from lib import unidades from lib . meos import MEoS class Methanol ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 275.5626 ) Tc = unidades . Temperature ( 512.6 ) Pc = unidades . Pressure ( 8103.5 , <str> ) M = 32.04216 Tt = unidades . Temperature ( 175.61 ) Tb = unidades . Temperature ( 337.632 ) f_acent = 0.5625 momentoDipolar = unidades . DipoleMoment ( 1.7 , <str> ) id = 117 CP1 = { <str> : 3.9007912 , <str> : [ ] , <str> : [ ] , <str> : [ 0.10992677e2 , 0.18336830e2 , - 0.16366004e2 , - 0.62332348e1 , 0.28035363e1 , 0.10778099e1 , 0.96965697 ] , <str> : [ 2115.01542 , 1676.18569 , 1935.16717 , 1504.97016 , 4222.83691 , 5296.17127 , 273.36934 ] } CP2 = { <str> : 0.964220 / 8.3143 * 32. , <str> : [ 0.532325e-4 / 8.3143 * 32. , 0.672819e-5 / 8.3143 * 32. , - 0.768411e-8 / 8.3143 * 32. , 0.275220e-11 / 8.3143 * 32. ] , <str> : [ 1 , 2 , 3 , 4 ] , <str> : [ ] , <str> : [ ] } reuck = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.31448 , <str> : CP1 , <str> : <str> , <str> : 513.38 , <str> : 8.78517 , <str> : Tt , <str> : 620.0 , <str> : 800000.0 , <str> : 35.57 , <str> : [ - 0.280062505988e1 , 0.125636372418e2 , - 0.130310563173e2 , 0.326593134060e1 , - 0.411425343805e1 , 0.346397741254e1 , - 0.836443967590e-1 , - 0.369240098923 , 0.313180842152e-2 , 0.603201474111 , - 0.231158593638 , 0.106114844945 , - 0.792228164995e-1 , - 0.422419150975e-4 , 0.758196739214e-2 , - 0.244617434701e-4 , 0.115080328802e-5 ] , <str> : [ 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 3 , 3 , 3 , 4 , 4 , 5 , 6 , 7 ] , <str> : [ 0 , 1 , 2 , 3 , 1 , 2 , 3 , 4 , 6 , 0 , 3 , 4 , 0 , 7 , 1 , 6 , 7 ] , <str> : [ - 0.125099747447e2 , 0.270392835391e2 , - 0.212070717086e2 , 0.632799472270e1 , 0.143687921636e2 , - 0.287450766617e2 , 0.185397216068e2 , - 0.388720372879e1 , - 0.416602487963e1 , 0.529665875982e1 , 0.509360272812 , - 0.330257604839e1 , - 0.311045210826 , 0.273460830583 , 0.518916583979 , - 0.227570803104e-2 , 0.211658196182e-1 , - 0.114335123221e-1 , 0.249860798459e-2 ] , <str> : [ 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 3 , 4 , 5 , 5 , 5 , 5 , 6 , 9 , 6 , 6 , 4 ] , <str> : [ 1 , 2 , 3 , 4 , 1 , 2 , 3 , 5 , 1 , 2 , 1 , 2 , 4 , 5 , 2 , 5 , 9 , 14 , 19 ] , <str> : [ 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 4 , 4 , 6 ] , <str> : [ 1.01733510223052 ] * 16 + [ 1.03497071023039 ] * 2 + [ 1.05291203329783 ] , <str> : [ - 0.819291988442e1 , 0.478601004557 , - 0.444161392885 , 0.179621810410 , - 0.687602278259 , 0.240459848295e1 , - 0.688463987466e1 , 0.113992982501e1 ] , <str> : [ 1 , 1 , 1 , 1 , 1 , 3 , 3 , 3 ] , <str> : [ 0 ] * 8 , <str> : [ 4.06934040892209 , 8.20892015621185 , 9.15601592007471 , 83.8326275286616 , 16.2773616356884 , 27.705105527215 , 16.2773616356884 , 264.95250181898 ] , <str> : [ - 3.8940745646517 , - 3.8940745646517 , - 3.8940745646517 , - 3.8940745646517 , - 3.8940745646517 , - 23.0649031906293 , - 23.0649031906293 , - 23.0649031906293 ] , <str> : [ 1.54080254509371 , 1.54080254509371 , 1.54080254509371 , 1.54080254509371 , 1.54080254509371 , 1.08389789427588 , 1.08389789427588 , 1.08389789427588 ] , <str> : [ 0 ] * 8 , <str> : [ 2 , 3 , 2 , 4 , 2 , 3 , 2 , 4 ] , <str> : [ 1 ] * 8 } sun = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : CP1 , <str> : <str> , <str> : Tt , <str> : 620.0 , <str> : 800000.0 , <str> : 40. , <str> : [ - 5.24578394 , 1.39060027 , 8.56114069e-1 , - 4.20843418e-2 , 3.63682442e-5 , 7.05598662e-1 ] , <str> : [ 1 , 1 , 1 , 3 , 7 , 2 ] , <str> : [ 1.5 , 0.25 , 1.25 , 0.25 , 0.875 , 1.375 ] , <str> : [ 3.70573369e-1 , 2.46303468 , 1.50253790 , 7.47553687e-2 , - 3.06417876e-1 , - 7.48402758e-1 , - 1.01432849e-1 , 8.06830693e-2 ] , <str> : [ 1 , 1 , 2 , 5 , 1 , 1 , 4 , 2 ] , <str> : [ 0 , 2.375 , 2. , 2.125 , 3.5 , 6.5 , 4.75 , 12.5 ] , <str> : [ 1 , 1 , 1 , 1 , 2 , 2 , 2 , 3 ] , <str> : [ 1 ] * 8 } polt = { <str> : <str> , <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.3143 , <str> : CP2 , <str> : <str> , <str> : 298. , <str> : 703.0 , <str> : 63000.0 , <str> : 26.0625 , <str> : [ - 4.12043979985 , 5.41210456547 , - 0.974639417666 , - 0.909437999343 , - 0.143467597275 , 5.57052459597 , - 6.97445416557 , 0.860535902136 , 2.44117735035 , - 4.49073510921 , 2.23855290012 , - 0.71733653794 , 0.876135006507 , 0.151777405466 , - 0.233178058896 , 0.0140022534721 ] , <str> : [ 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 4 , 4 , 5 ] , <str> : [ 3 , 4 , 5 , 0 , 1 , 2 , 3 , 4 , 0 , 1 , 2 , 0 , 1 , 0 , 1 , 1 ] , <str> : [ 0.412043979985e1 , - 0.541210456547e1 , 0.974639417666 , - 0.4642672133 , 0.944015617353 , - 0.449348200461 ] , <str> : [ 0 , 0 , 0 , 2 , 2 , 2 ] , <str> : [ 3 , 4 , 5 , 3 , 4 , 5 ] , <str> : [ 2 ] * 6 , <str> : [ 0.591872 ] * 6 } eq = reuck , sun , polt _surface = { <str> : [ 0.22421 , - 0.21408 , 0.083233 ] , <str> : [ 1.3355 , 1.677 , 4.4402 ] } _melting = { <str> : 1 , <str> : reuck [ <str> ] , <str> : Tt , <str> : 650 , <str> : Tt , <str> : 0.187 , <str> : 1 , <str> : [ 5.320770e9 , 4.524780e9 , 3.888861e10 ] , <str> : [ 1 , 1.5 , 4 ] } _vapor_Pressure = { <str> : 3 , <str> : [ - 0.87414e1 , 0.15035e1 , - 0.28720e1 , - 0.51345 ] , <str> : [ 1. , 1.5 , 2.5 , 5. ] } _liquid_Density = { <str> : 1 , <str> : [ 0.60230e-1 , 0.18855e2 , - 0.27626e2 , 0.11213e2 , 0.69039 ] , <str> : [ 0.1 , 0.65 , 0.79 , 0.95 , 4.4 ] } _vapor_Density = { <str> : 2 , <str> : [ - 0.81104 , - 0.55661e1 , - 0.79326e3 , 0.19234e4 , - 0.29219e4 , 0.29660e4 , - 0.13210e4 ] , <str> : [ 0.25 , 0.6 , 3.5 , 4.0 , 5.0 , 6.0 , 7.0 ] } visco0 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 0 , <str> : 1 , <str> : 577.87 , <str> : 0.3408 , <str> : <str> } def _Omega ( self , T , coef = None ) :          delta = 0.4575 a = [ 1.16145 , - 0.14874 , 0.52487 , - 0.7732 , 2.16178 , - 2.43787 , 9.5976e-4 , 0.10225 , - 0.97346 , 0.10657 , - 0.34528 , - 0.44557 , - 2.58055 ] T = T / self . _viscosity [ <str> ] OmegaLJ = a [ 0 ] * T ** a [ 1 ] + a [ 2 ] * exp ( a [ 3 ] * T ) + a [ 4 ] * exp ( a [ 5 ] * T ) OmegaD = a [ 7 ] * T ** a [ 8 ] + a [ 9 ] * exp ( a [ 10 ] * T ) + a [ 11 ] * exp ( a [ 12 ] * T ) OmegaSM = OmegaLJ * ( 1 + delta ** 2 * OmegaD / ( 1 + a [ 6 ] * delta ** 6 ) ) return OmegaSM  def _visco0 ( self , rho , T , fase ) :          rhoc = 273. sigma0 = 0.3408e-9 sigmac = 0.7193422e-9 rhom = rho / self . M * 1000 T_ = T / self . _viscosity [ <str> ] Tr = T / self . Tc rhor = rho / rhoc muo = self . _Visco0 ( T ) bi = [ - 19.572881 , 219.73999 , - 1015.3226 , 2471.0125 , - 3375.1717 , 2491.6597 , - 787.26086 , 14.085455 , - 0.34664158 ] ti = [ 0 , 0.25 , 0.5 , 0.75 , 1 , 1.25 , 1.5 , 2.5 , 5.5 ] B_ = 0 for t , b in zip ( ti , bi ) :              B_ += b / T_ ** t  B = B_ * Avogadro * sigma0 ** 3 C = 1.86222085e-3 * T_ ** 3 * exp ( 9.990338 / T_ ** 0.5 ) * ( Avogadro * sigma0 ** 3 ) ** 2 mug = 1 + B * rhom + C * rhom ** 2 di = [ - 1.181909 , 0.5031030 , - 0.6268461 , 0.5169312 , - 0.2351349 , 0.053980235 , - 4.9069617e-3 ] ei = [ 0 , 4.018368 , - 4.239180 , 2.245110 , - 0.5750698 , 2.3021026e-2 , 2.5696775e-2 , - 6.8372749e-3 , 7.2707189e-4 , - 2.9255711e-5 ] suma = 0 for i , d in enumerate ( di ) :              suma += d / Tr ** i  for j , e in enumerate ( ei ) :              suma += e * rhor ** j  Shs = sigmac * suma b = 2 * pi * Avogadro * Shs ** 3 / 3 Xi = b * rhom / 4 g = ( 1 - 0.5 * Xi ) / ( 1 - Xi ) ** 3 mue = 1 / g + 0.8 * b * rhom + 0.761 * g * ( b * rhom ) ** 2 f = 1 / ( 1 + exp ( 5 * ( rhor - 1 ) ) ) mu = muo * 1e-6 * ( f * mug + ( 1 - f ) * mue ) return unidades . Viscosity ( mu , <str> )  _viscosity = visco0 , thermo0 = { <str> : <str> , <str> : { <str> : <str> <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : Tc , <str> : 1e-3 , <str> : [ - 3.57796 , 62.9638 , - 37.3047 , - 52.1182 , 231.607 , 44.1575 ] , <str> : [ 0 , 1 , 2 , 3 , 4 , 5 ] , <str> : [ 3.33313 , - 6.08398 , 8.18739 , - 0.261074 , 1 ] , <str> : [ 0 , 1 , 2 , 3 , 4 ] , <str> : Tc , <str> : 275.563 , <str> : 1 , <str> : [ 5.56918e-2 , 1.04771e-2 , 1.12174e-1 , - 7.45272e-2 , - 8.43893e-2 , 6.37569e-2 , 1.97525e-2 , - 2.46826e-2 , - 1.5253e-3 , 4.34656e-3 ] , <str> : [ 0 , - 1 , 0 , - 1 , 0 , - 1 , 0 , - 1 , 0 , - 1 ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 5 , 5 ] , <str> : 3 , <str> : 0.63 , <str> : 1.239 , <str> : 1.03 , <str> : 0.1487e-9 , <str> : 0.05283 , <str> : 7.2e-10 , <str> : 768.9 } _thermal = thermo0 ,  class Test ( TestCase ) :      def test_xiang ( self ) :          st = Methanol ( T = 175.63 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 9 ) , 1.87e-7 ) self . assertEqual ( round ( st . Gas . rho , 8 ) , 4.10e-6 ) self . assertEqual ( round ( st . Gas . mu . mPas , 6 ) , 0.005822 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 904.54 ) self . assertEqual ( round ( st . Liquido . mu . mPas , 2 ) , 12.91 ) st = Methanol ( T = 200 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 9 ) , 0.000006096 ) self . assertEqual ( round ( st . Gas . rho , 8 ) , 0.00011754 ) self . assertEqual ( round ( st . Gas . mu . mPas , 6 ) , 0.006563 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 880.28 ) self . assertEqual ( round ( st . Liquido . mu . mPas , 3 ) , 4.544 ) st = Methanol ( T = 300 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0.018682 ) self . assertEqual ( round ( st . Gas . rho , 5 ) , 0.24623 ) self . assertEqual ( round ( st . Gas . mu . mPas , 6 ) , 0.009678 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 784.51 ) self . assertEqual ( round ( st . Liquido . mu . mPas , 4 ) , 0.532 ) st = Methanol ( T = 400 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 5 ) , 0.77374 ) self . assertEqual ( round ( st . Gas . rho , 4 ) , 8.7343 ) self . assertEqual ( round ( st . Gas . mu . mPas , 5 ) , 0.01251 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 678.59 ) self . assertEqual ( round ( st . Liquido . mu . mPas , 4 ) , 0.1720 ) st = Methanol ( T = 500 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 6.5250 ) self . assertEqual ( round ( st . Gas . rho , 2 ) , 109.88 ) self . assertEqual ( round ( st . Gas . mu . mPas , 5 ) , 0.01891 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 451.53 ) self . assertEqual ( round ( st . Liquido . mu . mPas , 5 ) , 0.05757 ) st = Methanol ( T = 180 , P = 1e4 ) self . assertEqual ( round ( st . rho , 2 ) , 900.27 ) self . assertEqual ( round ( st . mu . mPas , 2 ) , 10.54 ) st = Methanol ( T = 200 , P = 1.5e8 ) self . assertEqual ( round ( st . rho , 2 ) , 944.08 ) self . assertEqual ( round ( st . mu . mPas , 2 ) , 11.57 ) st = Methanol ( T = 260 , P = 1e5 ) self . assertEqual ( round ( st . rho , 2 ) , 822.11 ) self . assertEqual ( round ( st . mu . mPas , 3 ) , 1.026 ) st = Methanol ( T = 300 , P = 1e6 ) self . assertEqual ( round ( st . rho , 2 ) , 785.49 ) self . assertEqual ( round ( st . mu . mPas , 4 ) , 0.5352 ) st = Methanol ( T = 400 , P = 1e5 ) self . assertEqual ( round ( st . rho , 5 ) , 0.97575 ) self . assertEqual ( round ( st . mu . mPas , 5 ) , 0.01297 ) st = Methanol ( T = 500 , P = 1e8 ) self . assertEqual ( round ( st . rho , 2 ) , 705.57 ) self . assertEqual ( round ( st . mu . mPas , 4 ) , 0.1548 ) st = Methanol ( T = 600 , P = 1e4 ) self . assertEqual ( round ( st . rho , 6 ) , 0.064244 ) self . assertEqual ( round ( st . mu . mPas , 5 ) , 0.01981 )  def test_Sykioti ( self ) :          self . assertEqual ( round ( Methanol ( T = 300 , rho = 850 ) . k . mWmK , 2 ) , 241.48 ) self . assertEqual ( round ( Methanol ( T = 400 , rho = 2 ) . k . mWmK , 3 ) , 25.803 ) self . assertEqual ( round ( Methanol ( T = 400 , rho = 690 ) . k . mWmK , 2 ) , 183.57 ) self . assertEqual ( round ( Methanol ( T = 500 , rho = 10 ) . k . mWmK , 3 ) , 40.495 )    