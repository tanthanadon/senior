from unittest import TestCase from scipy import exp from lib import unidades from lib . meos import MEoS class H2S ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 347.2841672 ) Tc = unidades . Temperature ( 373.1 ) Pc = unidades . Pressure ( 9000.0 , <str> ) M = 34.08088 Tt = unidades . Temperature ( 187.7 ) Tb = unidades . Temperature ( 212.85 ) f_acent = 0.1005 momentoDipolar = unidades . DipoleMoment ( 0.97 , <str> ) id = 50 Fi1 = { <str> : [ 1 , 3. ] , <str> : [ 0 , 1 , - 1.5 ] , <str> : [ - 4.0740770957 , 3.7632137341 , - 0.002753352822675789 ] , <str> : [ 1.1364 , 1.9721 ] , <str> : [ 1823 / Tc , 3965 / Tc ] } Fi2 = { <str> : [ 1 , 3 ] , <str> : [ 0 , 1 ] , <str> : [ 9.336197742 , - 16.266508995 ] , <str> : [ ] , <str> : [ ] , <str> : [ 3.11942 ] , <str> : [ 4.914580541 ] , <str> : [ 1.00243 ] , <str> : [ 2.27065398 ] } Fi3 = { <str> : [ 1 , 3. ] , <str> : [ 0 , 1 ] , <str> : [ 7.881037 , - 3.20986 ] , <str> : [ 0.9767422 , 2.151898 ] , <str> : [ 4.506266 , 10.15526 ] } CP3 = { <str> : 4.1012105 , <str> : [ - 1.6720073e-3 , 7.5303152e-6 , - 0.62421053e-8 , 0.18098453e-11 ] , <str> : [ 1 , 2 , 3 , 4 ] , <str> : [ ] , <str> : [ ] } f = 8.3159524 / 4.184 CP4 = { <str> : 7.9468 * f , <str> : [ ] , <str> : [ ] , <str> : [ ] , <str> : [ ] , <str> : [ - 1.5769761e4 * f , 1.3861204e7 * f ] , <str> : [ 4.33801e2 , 1.48143e3 ] , <str> : [ 2.0329947e6 * f , - 3.5044957e6 * f ] , <str> : [ 8.43792e2 , 1.10223e3 ] } lemmon = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 760.0 , <str> : 170000.0 , <str> : 29.12 , <str> : [ 0.87641 , - 2.0367 , 0.21634 , - 0.050199 , 0.066994 , 0.00019076 ] , <str> : [ 1 , 1 , 1 , 2 , 3 , 7 ] , <str> : [ 0.25 , 1.125 , 1.5 , 1.375 , 0.25 , 0.875 ] , <str> : [ 0.20227 , - 0.0045348 , - 0.22230 , - 0.034714 , - 0.014885 , .0074154 ] , <str> : [ 2 , 5 , 1 , 4 , 3 , 4 ] , <str> : [ 0.625 , 1.75 , 3.625 , 3.625 , 14.5 , 12. ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 ] , <str> : [ 1 ] * 6 } sakoda = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi3 , <str> : { <str> : 298.15 , <str> : 100. , <str> : 0 , <str> : 0 } , <str> : 187.67 , <str> : 760.0 , <str> : 170000.0 , <str> : 29.13 , <str> : [ 0.1545780 , - 0.1717693e1 , - 0.1595211e1 , 0.2046589e1 , - 0.1690358e1 , 0.9483623 , - 0.6800772e-1 , 0.4372273e-2 , 0.3788552e-4 , - 0.3680980e-4 , 0.8710726e-5 ] , <str> : [ 1 , 1 , 1 , 2 , 2 , 2 , 3 , 4 , 8 , 9 , 10 ] , <str> : [ .241 , .705 , 1 , .626 , 1.15 , 1.63 , 0.21 , 3.08 , 0.827 , 3.05 , 3.05 ] , <str> : [ 0.6886876 , 0.2751922e1 , - 0.1492558e1 , 0.9202832 , - 0.2103469 , 0.1084359e-2 , 0.3754723e-1 , - 0.5885793e-1 , - 0.2329265e-1 , - 0.1272600e-3 , - 0.1336824e-1 , 0.1053057e-1 ] , <str> : [ 1 , 1 , 1 , 2 , 5 , 1 , 4 , 4 , 3 , 8 , 2 , 3 ] , <str> : [ 0.11 , 1.07 , 1.95 , 0.142 , 2.13 , 4.92 , 1.75 , 3.97 , 11.8 , 10 , 9.83 , 14.2 ] , <str> : [ 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 4 , 4 ] , <str> : [ 1 ] * 12 } polt = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.3143 , <str> : CP3 , <str> : <str> , <str> : Tt , <str> : 760.0 , <str> : 142000.0 , <str> : 29.1 , <str> : [ 0.135782366339e1 , - 0.153224981014e1 , 0.329107661253 , 0.195802782279e1 , - 0.301125182071e1 , - 0.126614059078e1 , 0.129960331548e1 , - 0.185645977138 , - 0.160919744092e1 , 0.234395817019e1 , - 0.378573094883 , 0.758423219040 , - 0.973372615169 , - 0.120786235447 , 0.209004959689 , - 0.919656385346e-2 ] , <str> : [ 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 4 , 4 , 5 ] , <str> : [ 3 , 4 , 5 , 0 , 1 , 2 , 3 , 4 , 0 , 1 , 2 , 0 , 1 , 0 , 1 , 1 ] , <str> : [ - 0.135782366339e1 , 0.153224981014e1 , - 0.329107661253 , 0.891427552242 , - 0.204776100441e1 , 0.101366381241e1 ] , <str> : [ 0 , 0 , 0 , 2 , 2 , 2 ] , <str> : [ 3 , 4 , 5 , 3 , 4 , 5 ] , <str> : [ 2 ] * 6 , <str> : [ 0.9873538 ] * 6 } starling = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.3159524 , <str> : CP4 , <str> : <str> , <str> : Tt , <str> : 589.0 , <str> : 55000.0 , <str> : 29.578 , <str> : [ 0.110928333109e1 , 0.188834546108 , - 0.930906931583 , - 0.411249591635 , 0.140676923412e-1 , - 0.169077883177e-4 , 0.510265859853 , - 0.572402742986 , - 0.828859606622e-3 , 0.971664064871e-2 , 0.140700425434e-4 ] , <str> : [ 0 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 5 , 5 ] , <str> : [ 3 , 0 , 1 , 3 , 4 , 5 , 0 , 1 , 2 , 1 , 2 ] , <str> : [ - 0.110928333109e1 , - 0.26913741657 ] , <str> : [ 0 , 2 ] , <str> : [ 3 , 3 ] , <str> : [ 2 ] * 2 , <str> : [ 0.48524558 ] * 2 } GERG = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi2 , <str> : <str> , <str> : Tt , <str> : 760.0 , <str> : 170000.0 , <str> : 29.12 , <str> : [ 0.87641 , - 2.0367 , 0.21634 , - 0.050199 , 0.066994 , 0.19076e-3 ] , <str> : [ 1 , 1 , 1 , 2 , 3 , 7 ] , <str> : [ 0.25 , 1.125 , 1.5 , 1.375 , 0.25 , 0.875 ] , <str> : [ 0.20227 , - 0.45348e-2 , - 0.2223 , - 0.034714 , - .014885 , .74154e-2 ] , <str> : [ 2 , 5 , 1 , 4 , 3 , 4 ] , <str> : [ 0.625 , 1.75 , 3.625 , 3.625 , 14.5 , 12. ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 ] , <str> : [ 1 ] * 6 } eq = lemmon , sakoda , polt , starling , GERG _surface = { <str> : [ 0.078557 ] , <str> : [ 1.2074 ] } _vapor_Pressure = { <str> : 3 , <str> : [ - 6.5884 , 2.1582 , - 1.6054 , - 2.3870 ] , <str> : [ 1 , 1.5 , 2 , 4.8 ] } _liquid_Density = { <str> : 1 , <str> : [ 11.833 , - 17.019 , 7.8047 ] , <str> : [ 1.63 / 3 , 1.95 / 3 , 2.3 / 3 ] } _vapor_Density = { <str> : 2 , <str> : [ - 3.9156 , - 7.7093 , - 19.543 , - 49.418 ] , <str> : [ 0.49 , 1.69 , 4 , 8 ] } visco0 = { <str> : <str> , <str> : { <str> : <str> <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 4 , <str> : 276 , <str> : 0.3565 , <str> : 0.87721 / M ** 0.5 * 0.3565 ** 2 , <str> : [ 0.53242 , 0.93715 , - 0.69339 , 1.16432 , - 0.84306 , 0.20534 ] , <str> : 355.8 , <str> : [ - 19.572881 , 219.73999 , - 1015.3226 , 2471.01251 , - 3375.1717 , 2491.6597 , - 787.26086 , 14.085455 , - 0.34664158 ] , <str> : [ 0 , - 0.25 , - 0.5 , - 0.75 , - 1 , - 1.25 , - 1.5 , - 2.5 , - 5.5 ] , <str> : <str> } def _mur ( self , rho , T , fase ) :          Gamma = self . Tc / T psi1 = exp ( Gamma ) psi2 = exp ( Gamma ** 2 ) a = [ 68.9659e-6 , - 22.0494e-6 , - 42.6126e-6 ] b = [ 153.406e-6 , 8.45198e-6 , - 113.967e-6 ] A = [ 0.78238e-9 , - 0.64717e-9 , 1.39066e-9 ] B = [ - 9.75792e-9 , - 3.19303e-9 , 12.4263e-9 ] ka = ( a [ 0 ] + a [ 1 ] * psi1 + a [ 2 ] * psi2 ) * Gamma kr = ( b [ 0 ] + b [ 1 ] * psi1 + b [ 2 ] * psi2 ) * Gamma kaa = ( A [ 0 ] + A [ 1 ] * psi1 + A [ 2 ] * psi2 ) * Gamma krr = ( B [ 0 ] + B [ 1 ] * psi1 + B [ 2 ] * psi2 ) * Gamma Patt = - fase . IntP . bar Prep = T * fase . dpdT_rho . barK Pid = rho * self . R * self . T / 1e5 delPr = Prep - Pid mur = kr * delPr + ka * Patt + krr * Prep ** 2 + kaa * Patt ** 2 return mur * 1e3  visco1 = { <str> : <str> , <str> : { <str> : <str> <str> , <str> : <str> , <str> : <str> , <str> : <str> } , <str> : 4 , <str> : 0 , <str> : 373.1 , <str> : [ 43.6694 , - 121.530 , 93.5279 ] , <str> : [ 0 , 0.25 , 0.5 ] , <str> : [ 5.46919e-5 , - 7.32295e-6 , - 7.35622e-6 ] , <str> : [ 4.56159e-5 , - 1.82572e-5 , - 6.59654e-6 ] , <str> : [ - 4.33882e-6 , 6.13716e-6 , 0.0 ] , <str> : [ 6.67324e-9 , - 2.16365e-9 , 0.0 ] , <str> : [ - 1.53973e-9 , 2.17652e-9 , 0.0 ] , <str> : [ 3.54228e-7 , - 4.76258e-8 , 0.0 ] } _viscosity = visco0 , visco1  class Test ( TestCase ) :      def test_shortLemmon ( self ) :          st = H2S ( T = 375 , rhom = 10 ) self . assertEqual ( round ( st . P . kPa , 3 ) , 9289.914 ) self . assertEqual ( round ( st . hM . kJkmol , 3 ) , 15571.227 ) self . assertEqual ( round ( st . sM . kJkmolK , 3 ) , 49.880 ) self . assertEqual ( round ( st . cvM . kJkmolK , 3 ) , 42.574 ) self . assertEqual ( round ( st . cpM . kJkmolK , 3 ) , 2645.392 ) self . assertEqual ( round ( st . w , 3 ) , 248.512 )    