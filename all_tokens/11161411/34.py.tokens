import os from functools import partial from PyQt5 import QtCore , QtGui , QtWidgets from lib import sql from lib . config import IMAGE_PATH from lib . newComponent import _methods from lib . unidades import ( Temperature , Pressure , SpecificVolume , Enthalpy , SolubilityParameter ) from UI . delegate import SpinEditor from UI . viewComponents import View_Component from UI . widgets import Entrada_con_unidades , Status class newComponent ( QtWidgets . QDialog ) :      def loadUI ( self ) :          layoutBottom = QtWidgets . QHBoxLayout ( ) self . status = Status ( ) layoutBottom . addWidget ( self . status ) self . buttonShowDetails = QtWidgets . QPushButton ( QtWidgets . QApplication . translate ( <str> , <str> ) ) self . buttonShowDetails . clicked . connect ( self . showDetails ) self . buttonShowDetails . setEnabled ( False ) layoutBottom . addWidget ( self . buttonShowDetails ) self . btonBox = QtWidgets . QDialogButtonBox ( QtWidgets . QDialogButtonBox . Cancel | QtWidgets . QDialogButtonBox . Save ) self . btonBox . button ( QtWidgets . QDialogButtonBox . Save ) . setEnabled ( False ) self . btonBox . accepted . connect ( self . save ) self . btonBox . rejected . connect ( self . reject ) layoutBottom . addWidget ( self . btonBox ) self . layout ( ) . addLayout ( layoutBottom )  def save ( self ) :          elemento = self . unknown . export2Component ( ) sql . inserElementsFromArray ( sql . databank_Custom_name , [ elemento ] ) Dialog = View_Component ( 1001 + sql . N_comp_Custom ) Dialog . show ( ) QtWidgets . QDialog . accept ( self )  def changeParams ( self , parametro , valor ) :          self . calculo ( ** { parametro : valor } )  def calculo ( self , ** kwargs ) :          self . status . setState ( 4 ) self . unknown ( ** kwargs ) self . status . setState ( self . unknown . status , self . unknown . msg ) self . buttonShowDetails . setEnabled ( self . unknown . status ) self . btonBox . button ( QtWidgets . QDialogButtonBox . Save ) . setEnabled ( self . unknown . status )  def showDetails ( self ) :          dialog = self . ViewDetails ( self . unknown ) dialog . exec_ ( )   class View_Contribution ( QtWidgets . QDialog ) :      def __init__ ( self , cmp = None , parent = None ) :          super ( View_Contribution , self ) . __init__ ( parent ) self . setWindowTitle ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout = QtWidgets . QGridLayout ( self ) self . nombre = QtWidgets . QLabel ( ) layout . addWidget ( self . nombre , 1 , 1 , 1 , 5 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 2 , 1 ) self . M = Entrada_con_unidades ( float , textounidad = <str> ) layout . addWidget ( self . M , 2 , 2 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 3 , 1 ) self . Tb = Entrada_con_unidades ( Temperature ) layout . addWidget ( self . Tb , 3 , 2 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 4 , 1 ) self . Tf = Entrada_con_unidades ( Temperature ) layout . addWidget ( self . Tf , 4 , 2 ) layout . addWidget ( QtWidgets . QLabel ( <str> ) , 5 , 1 ) self . Tc = Entrada_con_unidades ( Temperature ) layout . addWidget ( self . Tc , 5 , 2 ) layout . addWidget ( QtWidgets . QLabel ( <str> ) , 6 , 1 ) self . Pc = Entrada_con_unidades ( Pressure ) layout . addWidget ( self . Pc , 6 , 2 ) layout . addWidget ( QtWidgets . QLabel ( <str> ) , 7 , 1 ) self . Vc = Entrada_con_unidades ( SpecificVolume ) layout . addWidget ( self . Vc , 7 , 2 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 8 , 1 ) self . Hf = Entrada_con_unidades ( Enthalpy ) layout . addWidget ( self . Hf , 8 , 2 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 9 , 1 ) self . Gf = Entrada_con_unidades ( Enthalpy ) layout . addWidget ( self . Gf , 9 , 2 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 2 , 4 ) self . Hm = Entrada_con_unidades ( Enthalpy ) layout . addWidget ( self . Hm , 2 , 5 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 3 , 4 ) self . Hv = Entrada_con_unidades ( Enthalpy ) layout . addWidget ( self . Hv , 3 , 5 ) layout . addWidget ( QtWidgets . QLabel ( <str> ) , 4 , 4 ) self . cpa = Entrada_con_unidades ( float ) layout . addWidget ( self . cpa , 4 , 5 ) layout . addWidget ( QtWidgets . QLabel ( <str> ) , 5 , 4 ) self . cpb = Entrada_con_unidades ( float ) layout . addWidget ( self . cpb , 5 , 5 ) layout . addWidget ( QtWidgets . QLabel ( <str> ) , 6 , 4 ) self . cpc = Entrada_con_unidades ( float ) layout . addWidget ( self . cpc , 6 , 5 ) layout . addWidget ( QtWidgets . QLabel ( <str> ) , 7 , 4 ) self . cpd = Entrada_con_unidades ( float ) layout . addWidget ( self . cpd , 7 , 5 ) layout . addWidget ( QtWidgets . QLabel ( <str> ) , 8 , 4 ) self . mua = Entrada_con_unidades ( float ) layout . addWidget ( self . mua , 8 , 5 ) layout . addWidget ( QtWidgets . QLabel ( <str> ) , 9 , 4 ) self . mub = Entrada_con_unidades ( float ) layout . addWidget ( self . mub , 9 , 5 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 2 , 7 ) self . gravity = Entrada_con_unidades ( float ) layout . addWidget ( self . gravity , 2 , 8 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 3 , 7 ) self . API = Entrada_con_unidades ( float ) layout . addWidget ( self . API , 3 , 8 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 4 , 7 ) self . watson = Entrada_con_unidades ( float ) layout . addWidget ( self . watson , 4 , 8 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 5 , 7 ) self . f_acent = Entrada_con_unidades ( float ) layout . addWidget ( self . f_acent , 5 , 8 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 6 , 7 ) self . rackett = Entrada_con_unidades ( float ) layout . addWidget ( self . rackett , 6 , 8 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 7 , 7 ) self . Vliq = Entrada_con_unidades ( float ) layout . addWidget ( self . Vliq , 7 , 8 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 8 , 7 ) self . Parametro_solubilidad = Entrada_con_unidades ( SolubilityParameter ) layout . addWidget ( self . Parametro_solubilidad , 8 , 8 ) layout . addItem ( QtWidgets . QSpacerItem ( 20 , 20 , QtWidgets . QSizePolicy . Expanding , QtWidgets . QSizePolicy . Expanding ) , 15 , 8 ) btn = QtWidgets . QDialogButtonBox ( QtWidgets . QDialogButtonBox . Close ) btn . rejected . connect ( self . accept ) layout . addWidget ( btn , 16 , 1 , 1 , 8 ) self . setReadOnly ( True ) if cmp :              self . rellenar ( cmp )   def setReadOnly ( self , bool ) :          self . M . setReadOnly ( bool ) self . Tb . setReadOnly ( bool ) self . Tf . setReadOnly ( bool ) self . Tc . setReadOnly ( bool ) self . Pc . setReadOnly ( bool ) self . Vc . setReadOnly ( bool ) self . Hf . setReadOnly ( bool ) self . Gf . setReadOnly ( bool ) self . Hm . setReadOnly ( bool ) self . Hv . setReadOnly ( bool ) self . cpa . setReadOnly ( bool ) self . cpb . setReadOnly ( bool ) self . cpc . setReadOnly ( bool ) self . cpd . setReadOnly ( bool ) self . mua . setReadOnly ( bool ) self . mub . setReadOnly ( bool ) self . gravity . setReadOnly ( bool ) self . API . setReadOnly ( bool ) self . watson . setReadOnly ( bool ) self . f_acent . setReadOnly ( bool ) self . rackett . setReadOnly ( bool ) self . Vliq . setReadOnly ( bool ) self . Parametro_solubilidad . setReadOnly ( bool )  def rellenar ( self , cmp ) :          self . nombre . setText ( cmp . name ) self . M . setValue ( cmp . M ) self . Tb . setValue ( cmp . Tb ) self . Tf . setValue ( cmp . Tf ) self . Tc . setValue ( cmp . Tc ) self . Pc . setValue ( cmp . Pc ) self . Vc . setValue ( cmp . Vc ) self . Hf . setValue ( cmp . Hf ) self . Gf . setValue ( cmp . Gf ) self . Hm . setValue ( cmp . Hm ) self . Hv . setValue ( cmp . Hv ) self . cpa . setValue ( cmp . cp [ 0 ] ) self . cpb . setValue ( cmp . cp [ 1 ] ) self . cpc . setValue ( cmp . cp [ 2 ] ) self . cpd . setValue ( cmp . cp [ 3 ] ) self . gravity . setValue ( cmp . SG ) self . API . setValue ( cmp . API ) self . watson . setValue ( cmp . Kw ) self . f_acent . setValue ( cmp . f_acent ) self . rackett . setValue ( cmp . rackett ) self . Vliq . setValue ( cmp . Vliq ) self . Parametro_solubilidad . setValue ( cmp . Parametro_solubilidad )   class Ui_Contribution ( newComponent ) :      ViewDetails = View_Contribution def __init__ ( self , metodo , parent = None ) :          super ( Ui_Contribution , self ) . __init__ ( parent ) self . grupo = [ ] self . indices = [ ] self . contribucion = [ ] func = { } for f in _methods :              func [ f . __name__ ] = f  self . unknown = func [ metodo ] ( ) title = self . unknown . __title__ title += <str> + QtWidgets . QApplication . translate ( <str> , <str> ) self . setWindowTitle ( title ) lyt = QtWidgets . QVBoxLayout ( self ) widget = QtWidgets . QWidget ( ) layout = QtWidgets . QGridLayout ( widget ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 1 , 0 ) self . nombre = QtWidgets . QLineEdit ( ) self . nombre . textChanged . connect ( partial ( self . changeParams , <str> ) ) layout . addWidget ( self . nombre , 1 , 1 , 1 , 3 ) self . Group = QtWidgets . QTableWidget ( ) self . Group . verticalHeader ( ) . hide ( ) self . Group . setRowCount ( 0 ) self . Group . setColumnCount ( 2 ) self . Group . setHorizontalHeaderItem ( 0 , QtWidgets . QTableWidgetItem ( <str> ) ) self . Group . setHorizontalHeaderItem ( 1 , QtWidgets . QTableWidgetItem ( QtWidgets . QApplication . translate ( <str> , <str> ) ) ) self . Group . setSelectionBehavior ( QtWidgets . QAbstractItemView . SelectRows ) self . Group . setSortingEnabled ( True ) self . Group . horizontalHeader ( ) . setStretchLastSection ( True ) self . Group . setColumnWidth ( 0 , 50 ) self . Group . setItemDelegateForColumn ( 0 , SpinEditor ( self ) ) self . Group . cellChanged . connect ( self . cellChanged ) self . Group . setEditTriggers ( QtWidgets . QAbstractItemView . AllEditTriggers ) layout . addWidget ( self . Group , 2 , 0 , 3 , 3 ) self . Formula = QtWidgets . QLabel ( ) font = QtGui . QFont ( ) font . setPointSize ( 12 ) self . Formula . setFont ( font ) self . Formula . setAlignment ( QtCore . Qt . AlignCenter | QtCore . Qt . AlignVCenter ) self . Formula . setFixedHeight ( 50 ) layout . addWidget ( self . Formula , 2 , 3 ) self . btnDelete = QtWidgets . QPushButton ( QtGui . QIcon ( QtGui . QPixmap ( os . path . join ( IMAGE_PATH , <str> , <str> ) ) ) , QtWidgets . QApplication . translate ( <str> , <str> ) ) self . btnDelete . clicked . connect ( self . borrar ) layout . addWidget ( self . btnDelete , 3 , 3 ) self . btnClear = QtWidgets . QPushButton ( QtGui . QIcon ( QtGui . QPixmap ( os . path . join ( IMAGE_PATH , <str> , <str> ) ) ) , QtWidgets . QApplication . translate ( <str> , <str> ) ) self . btnClear . clicked . connect ( self . clear ) layout . addWidget ( self . btnClear , 4 , 3 ) self . line = QtWidgets . QFrame ( ) self . line . setFrameShape ( QtWidgets . QFrame . HLine ) self . line . setFrameShadow ( QtWidgets . QFrame . Sunken ) layout . addWidget ( self . line , 5 , 0 , 1 , 4 ) self . groupContributions = QtWidgets . QListWidget ( ) self . groupContributions . currentItemChanged . connect ( self . selectChanged ) self . groupContributions . itemDoubleClicked . connect ( self . add ) layout . addWidget ( self . groupContributions , 6 , 0 , 6 , 3 ) self . btnAdd = QtWidgets . QPushButton ( QtGui . QIcon ( QtGui . QPixmap ( os . path . join ( IMAGE_PATH , <str> , <str> ) ) ) , QtWidgets . QApplication . translate ( <str> , <str> ) ) self . btnAdd . setDisabled ( True ) self . btnAdd . clicked . connect ( self . add ) layout . addWidget ( self . btnAdd , 6 , 3 ) layout . addItem ( QtWidgets . QSpacerItem ( 20 , 20 , QtWidgets . QSizePolicy . Expanding , QtWidgets . QSizePolicy . Expanding ) , 7 , 1 ) if self . unknown . SecondOrder :              self . Order1 = QtWidgets . QRadioButton ( QtWidgets . QApplication . translate ( <str> , <str> ) ) self . Order1 . setChecked ( True ) self . Order1 . toggled . connect ( self . Order ) layout . addWidget ( self . Order1 , 9 , 3 ) self . Order2 = QtWidgets . QRadioButton ( QtWidgets . QApplication . translate ( <str> , <str> ) ) self . Order2 . toggled . connect ( self . Order ) layout . addWidget ( self . Order2 , 10 , 3 ) if self . unknown . ThirdOrder :                  self . Order3 = QtWidgets . QRadioButton ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( self . Order3 , 11 , 3 ) self . Order3 . toggled . connect ( self . Order )   layout . addItem ( QtWidgets . QSpacerItem ( 10 , 10 , QtWidgets . QSizePolicy . Fixed , QtWidgets . QSizePolicy . Fixed ) , 12 , 1 ) labelTb = QtWidgets . QLabel ( <str> ) labelTb . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( labelTb , 13 , 0 ) self . Tb = Entrada_con_unidades ( Temperature ) self . Tb . valueChanged . connect ( partial ( self . changeParams , <str> ) ) layout . addWidget ( self . Tb , 13 , 1 ) labelM = QtWidgets . QLabel ( <str> ) labelM . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( labelM , 14 , 0 ) self . M = Entrada_con_unidades ( float , textounidad = <str> ) self . M . valueChanged . connect ( partial ( self . changeParams , <str> ) ) layout . addWidget ( self . M , 14 , 1 ) label = QtWidgets . QLabel ( <str> ) label . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( label , 15 , 0 ) self . SG = Entrada_con_unidades ( float ) self . SG . valueChanged . connect ( partial ( self . changeParams , <str> ) ) layout . addWidget ( self . SG , 15 , 1 ) lyt . addWidget ( widget ) if metodo == <str> :              labelTb . setEnabled ( False ) self . Tb . setEnabled ( False )  elif metodo == <str> :              self . Tb . setResaltado ( True ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 16 , 0 ) self . ring = QtWidgets . QSpinBox ( ) self . ring . setFixedWidth ( 80 ) self . ring . valueChanged . connect ( partial ( self . changeParams , <str> ) ) layout . addWidget ( self . ring , 16 , 1 )  elif metodo == <str> :              self . M . setResaltado ( True )  elif metodo == <str> :              self . Tb . setResaltado ( True ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 16 , 0 ) self . plat = QtWidgets . QSpinBox ( ) self . plat . setFixedWidth ( 80 ) tr = <str> tr += <str> tr += <str> tr += <str> tr += <str> self . plat . setToolTip ( QtWidgets . QApplication . translate ( <str> , tr ) ) self . plat . valueChanged . connect ( partial ( self . changeParams , <str> ) ) layout . addWidget ( self . plat , 16 , 1 )  elif metodo == <str> :              self . Tb . setResaltado ( True ) self . nogroupKlincewicz = QtWidgets . QCheckBox ( QtWidgets . QApplication . translate ( <str> , <str> ) ) self . nogroupKlincewicz . toggled . connect ( self . nogroupCheckToggled ) layout . addWidget ( self . nogroupKlincewicz , 16 , 0 , 1 , 4 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 17 , 0 ) self . atoms = QtWidgets . QSpinBox ( ) self . atoms . setFixedWidth ( 80 ) self . atoms . valueChanged . connect ( partial ( self . changeParams , <str> ) ) layout . addWidget ( self . atoms , 17 , 1 )  newComponent . loadUI ( self ) for i , nombre in enumerate ( self . unknown . coeff [ <str> ] ) :              self . groupContributions . addItem ( nombre [ 0 ] )  if self . unknown . SecondOrder :              self . Order ( )  if metodo == <str> :              self . nogroupCheckToggled ( False )   def Order ( self ) :          for i in range ( self . unknown . FirstOrder ) :              item = self . groupContributions . item ( i ) item . setHidden ( not self . Order1 . isChecked ( ) )  for i in range ( self . unknown . FirstOrder , self . unknown . SecondOrder ) :              item = self . groupContributions . item ( i ) item . setHidden ( not self . Order2 . isChecked ( ) )  if self . unknown . ThirdOrder :              for i in range ( self . unknown . SecondOrder , self . unknown . ThirdOrder ) :                  item = self . groupContributions . item ( i ) item . setHidden ( not self . Order3 . isChecked ( ) )    def nogroupCheckToggled ( self , boolean ) :          self . changeParams ( <str> , boolean ) self . M . setResaltado ( boolean ) self . atoms . setEnabled ( boolean ) self . Group . setDisabled ( boolean ) self . Formula . setDisabled ( boolean ) self . btnDelete . setDisabled ( boolean ) self . btnClear . setDisabled ( boolean ) self . btnAdd . setDisabled ( boolean ) self . groupContributions . setDisabled ( boolean )  def borrar ( self , indice = None ) :          if not indice :              indice = self . Group . currentRow ( )  if indice != - 1 :              self . Group . removeRow ( indice ) del self . grupo [ indice ] del self . indices [ indice ] del self . contribucion [ indice ] self . calculo ( ** { <str> : self . indices , <str> : self . contribucion } )   def clear ( self ) :          self . Group . clearContents ( ) self . Group . setRowCount ( 0 ) self . grupo = [ ] self . indices = [ ] self . contribucion = [ ] self . Formula . clear ( ) self . M . clear ( ) self . nombre . clear ( ) self . Tb . clear ( ) self . SG . clear ( ) self . unknown . clear ( ) self . status . setState ( self . unknown . status , self . unknown . msg )  def cellChanged ( self , i , j ) :          if j == 0 :              valor = int ( self . Group . item ( i , j ) . text ( ) ) if valor <= 0 :                  self . borrar ( i )  else :                  self . contribucion [ i ] = int ( valor )   kw = { <str> : self . indices , <str> : self . contribucion } self . calculo ( ** kw )  def selectChanged ( self , i ) :          self . btnAdd . setEnabled ( i != - 1 )  def add ( self ) :          indice = self . Group . rowCount ( ) grupo = self . groupContributions . currentItem ( ) . text ( ) if grupo not in self . grupo :              self . grupo . append ( grupo ) self . indices . append ( self . groupContributions . currentRow ( ) ) self . contribucion . append ( 1 ) self . Group . setRowCount ( indice + 1 ) self . Group . setItem ( indice , 0 , QtWidgets . QTableWidgetItem ( <str> ) ) self . Group . item ( indice , 0 ) . setTextAlignment ( QtCore . Qt . AlignRight | QtCore . Qt . AlignVCenter ) self . Group . setItem ( indice , 1 , QtWidgets . QTableWidgetItem ( grupo ) ) self . Group . item ( indice , 1 ) . setFlags ( QtCore . Qt . ItemIsSelectable | QtCore . Qt . ItemIsEnabled ) self . Group . setRowHeight ( indice , 20 )  else :              indice = self . grupo . index ( grupo ) self . contribucion [ indice ] += 1 self . Group . item ( indice , 0 ) . setText ( str ( int ( self . Group . item ( indice , 0 ) . text ( ) ) + 1 ) )  kw = { <str> : self . indices , <str> : self . contribucion } self . calculo ( ** kw )  def calculo ( self , ** kwargs ) :          newComponent . calculo ( self , ** kwargs ) if self . unknown . status in ( 1 , 3 ) :              self . Formula . setText ( self . unknown . formula )    if __name__ == <str> :      import sys app = QtWidgets . QApplication ( sys . argv ) Dialog = Ui_Contribution ( <str> ) Dialog . show ( ) sys . exit ( app . exec_ ( ) )   