from PyQt5 import QtCore , QtWidgets from lib . unidades import Fouling , Length , ThermalConductivity from lib . pipeDatabase import finnedTube_database from UI . widgets import Entrada_con_unidades class FoulingWidget ( QtWidgets . QWidget ) :      valueChanged = QtCore . pyqtSignal ( float ) Fouling_Factor = { <str> : { <str> : 0.000352 , <str> : 0.000881 , <str> : 0.000173 , <str> : 0.000173 , <str> : 0.000705 , <str> : 0.001761 , <str> : 0.001761 , <str> : 0.000088 , <str> : 0.0003 , <str> : 0.000352 , <str> : 0.000176 , <str> : 0.000176 , <str> : 0.000176 , <str> : 0.000352 , <str> : 0.001761 , <str> : 0.000881 , <str> : 0.000088 , <str> : 0.000176 , <str> : 0.000176 , <str> : 0.000352 , <str> : 0.000176 , <str> : 0.000528 , <str> : 0.000528 , <str> : 0.000528 , <str> : 0.000176 , <str> : 0.000352 , <str> : 0.000352 , <str> : 0.000352 , <str> : 0.000352 } , <str> : { <str> : 0.00044 , <str> : 0.000176 , <str> : 0.000176 , <str> : 0.000352 , <str> : 0.000352 , <str> : 0.00026 , <str> : 0.000352 , <str> : 0.000528 } , <str> : { <str> : 0.00026 , <str> : 0.00026 , <str> : 0.000352 , <str> : 0.00026 , <str> : 0.00026 , <str> : 0.00026 } , <str> : { <str> : 0.000088 , <str> : 0.000352 , <str> : 0.000176 , <str> : 0.000528 , <str> : 0.000176 , <str> : 0.000352 , <str> : 0.000528 , <str> : 0.000528 , <str> : 0.000528 , <str> : 0.000176 , <str> : 0.000088 , <str> : 0.000352 , <str> : 0.000176 } , <str> : { <str> : 0.000088 , <str> : 0.000176 , <str> : 0.000176 , <str> : 0.000528 , <str> : 0.000176 , <str> : 0.000176 , <str> : 0.000352 , <str> : 0.000352 , <str> : 0.000528 , <str> : 0.000176 , <str> : 0.000088 , <str> : 0.000352 , <str> : 0.000088 } , <str> : { <str> : 0.000176 , <str> : 0.000528 , <str> : 0.000352 , <str> : 0.000881 , <str> : 0.000352 , <str> : 0.000528 , <str> : 0.000705 , <str> : 0.000705 , <str> : 0.000881 , <str> : 0.000176 , <str> : 0.000088 , <str> : 0.000352 , <str> : 0.000176 } , <str> : { <str> : 0.000176 , <str> : 0.000352 , <str> : 0.000352 , <str> : 0.000705 , <str> : 0.000352 , <str> : 0.000352 , <str> : 0.000528 , <str> : 0.000528 , <str> : 0.000881 , <str> : 0.000176 , <str> : 0.000088 , <str> : 0.000352 , <str> : 0.000176 } , <str> : { <str> : 0.000176 , <str> : 0.000176 , <str> : 0.000352 } , <str> : { <str> : 0.000528 , <str> : 0.000528 , <str> : 0.000352 , <str> : 0.000352 , <str> : 0.000352 , <str> : 0.000352 , <str> : 0.000528 , <str> : 0.000881 , <str> : 0.000352 , <str> : 0.000705 , <str> : 0.000352 , <str> : 0.000705 , <str> : 0.000705 , <str> : 0.001057 , <str> : 0.000528 , <str> : 0.000881 , <str> : 0.000528 , <str> : 0.000881 , <str> : 0.000881 , <str> : 0.001233 , <str> : 0.000705 , <str> : 0.001057 , <str> : 0.000705 , <str> : 0.001057 , <str> : 0.000352 , <str> : 0.00044 , <str> : 0.00044 , <str> : 0.00044 , <str> : 0.00067 , <str> : 0.00105 } , <str> : { <str> : 0.001761 , <str> : 0.001233 } , <str> : { <str> : 0.000352 , <str> : 0.00044 , <str> : 0.00061 , <str> : 0.00061 , <str> : 0.00079 , <str> : 0.000528 , <str> : 0.000176 } , <str> : { <str> : 0.000264 , <str> : 0.000264 , <str> : 0.000352 , <str> : 0.000176 , <str> : 0.000176 , <str> : 0.000176 , <str> : 0.000352 } , <str> : { <str> : 0.000176 , <str> : 0.000176 , <str> : 0.00044 , <str> : 0.000352 , <str> : 0.00044 } , <str> : { <str> : 0.000352 , <str> : 0.000352 , <str> : 0.000176 , <str> : 0.000528 , <str> : 0.000176 , <str> : 0.000881 , <str> : 0.000528 , <str> : 0.000176 } , <str> : { <str> : 0.000528 , <str> : 0.001761 } , <str> : { <str> : 0.000528 , <str> : 0.000352 , <str> : 0.000352 , <str> : 0.000264 } , <str> : { <str> : 0.00079 , <str> : 0.000352 , <str> : 0.000352 , <str> : 0.000528 , <str> : 0.000352 } , <str> : { <str> : 0.000528 , <str> : 0.000352 } } def __init__ ( self , parent = None ) :          super ( FoulingWidget , self ) . __init__ ( parent ) layout = QtWidgets . QHBoxLayout ( self ) layout . setContentsMargins ( 0 , 0 , 0 , 0 ) self . list = QtWidgets . QComboBox ( ) self . list . addItem ( <str> ) layout . addWidget ( self . list ) self . value = Entrada_con_unidades ( Fouling , decimales = 6 ) self . value . valueChanged . connect ( self . valueChanged . emit ) layout . addWidget ( self . value ) for tipo in sorted ( self . Fouling_Factor ) :              self . list . insertSeparator ( self . list . count ( ) + 1 ) for componente in sorted ( self . Fouling_Factor [ tipo ] ) :                  self . list . addItem ( <str> . join ( [ tipo , componente ] ) )   self . list . currentIndexChanged [ <str> ] . connect ( self . rellenar )  def setValue ( self , value ) :          self . value . setValue ( value )  def rellenar ( self , txt ) :          if txt :              tipo , componente = txt . split ( <str> ) value = self . Fouling_Factor [ str ( tipo ) ] [ str ( componente ) ] self . value . setReadOnly ( True ) self . value . setValue ( value ) self . valueChanged . emit ( value )  else :              self . value . setReadOnly ( False )    class Dialog_Finned ( QtWidgets . QDialog ) :      def __init__ ( self , kwarg = None , parent = None ) :          super ( Dialog_Finned , self ) . __init__ ( parent = parent ) self . setWindowTitle ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout = QtWidgets . QGridLayout ( self ) self . listTube = QtWidgets . QComboBox ( ) self . listTube . addItem ( <str> ) layout . addWidget ( self . listTube , 0 , 1 , 1 , 2 ) layout . addItem ( QtWidgets . QSpacerItem ( 10 , 10 , QtWidgets . QSizePolicy . Fixed , QtWidgets . QSizePolicy . Fixed ) , 1 , 1 , 1 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 2 , 1 ) self . listMaterial = QtWidgets . QComboBox ( ) self . listMaterial . addItem ( <str> ) self . listMaterial . addItem ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( self . listMaterial , 2 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 3 , 1 ) self . kFin = Entrada_con_unidades ( ThermalConductivity ) layout . addWidget ( self . kFin , 3 , 2 ) layout . addItem ( QtWidgets . QSpacerItem ( 10 , 10 , QtWidgets . QSizePolicy . Fixed , QtWidgets . QSizePolicy . Fixed ) , 4 , 1 , 1 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 5 , 1 ) self . RootD = Entrada_con_unidades ( Length , <str> ) layout . addWidget ( self . RootD , 5 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 6 , 1 ) self . hFin = Entrada_con_unidades ( Length , <str> ) layout . addWidget ( self . hFin , 6 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 7 , 1 ) self . BaseThickness = Entrada_con_unidades ( Length , <str> ) layout . addWidget ( self . BaseThickness , 7 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 8 , 1 ) self . TopThickness = Entrada_con_unidades ( Length , <str> ) layout . addWidget ( self . TopThickness , 8 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 9 , 1 ) self . Nfin = Entrada_con_unidades ( float , textounidad = <str> ) layout . addWidget ( self . Nfin , 9 , 2 ) self . buttonBox = QtWidgets . QDialogButtonBox ( QtWidgets . QDialogButtonBox . Cancel | QtWidgets . QDialogButtonBox . Ok ) self . buttonBox . accepted . connect ( self . accept ) self . buttonBox . rejected . connect ( self . reject ) layout . addWidget ( self . buttonBox , 10 , 1 , 1 , 2 ) for tuberia in finnedTube_database :              self . listTube . addItem ( <str> % ( tuberia [ 0 ] , tuberia [ 1 ] ) )  self . listTube . currentIndexChanged . connect ( self . rellenarData ) self . listTube . currentIndexChanged . connect ( self . setDisabled ) if kwarg :              self . hFin . setValue ( kwarg [ <str> ] ) self . BaseThickness . setValue ( kwarg [ <str> ] ) self . TopThickness . setValue ( kwarg [ <str> ] ) self . kFin . setValue ( kwarg [ <str> ] ) self . Nfin . setValue ( kwarg [ <str> ] ) self . RootD . setValue ( kwarg [ <str> ] )   def rellenarData ( self , ind ) :          tuberia = finnedTube_database [ ind - 1 ] if tuberia [ 0 ] == <str> :              self . Nfin . setValue ( int ( tuberia [ 1 ] [ : 2 ] ) ) self . BaseThickness . setValue ( tuberia [ 12 ] / 1000. ) self . TopThickness . setValue ( tuberia [ 12 ] / 1000. ) self . RootD . setValue ( tuberia [ 6 ] / 1000. ) self . hFin . setValue ( tuberia [ 13 ] / 1000. )   def setDisabled ( self , bool ) :          self . RootD . setReadOnly ( bool ) self . BaseThickness . setReadOnly ( bool ) self . TopThickness . setReadOnly ( bool ) self . Nfin . setReadOnly ( bool ) self . hFin . setReadOnly ( bool )  def kwarg ( self ) :          kwarg = { <str> : self . hFin . value , <str> : self . BaseThickness . value , <str> : self . TopThickness . value , <str> : self . kFin . value , <str> : self . Nfin . value , <str> : self . RootD . value } return kwarg   if __name__ == <str> :      import sys app = QtWidgets . QApplication ( sys . argv ) dialogo = FoulingWidget ( ) dialogo . show ( ) sys . exit ( app . exec_ ( ) )   