from PyQt5 import QtCore , QtGui , QtWidgets class CellEditor ( QtWidgets . QItemDelegate ) :      def __init__ ( self , parent = None ) :          super ( CellEditor , self ) . __init__ ( parent )  def createEditor ( self , parent , option , index ) :          widget = QtWidgets . QLineEdit ( parent ) widget . setAlignment ( QtCore . Qt . AlignRight ) validator = QtGui . QDoubleValidator ( self ) locale = QtCore . QLocale ( <str> ) validator . setLocale ( locale ) widget . setValidator ( validator ) return widget   class SpinEditor ( QtWidgets . QItemDelegate ) :      def __init__ ( self , parent = None ) :          super ( SpinEditor , self ) . __init__ ( parent )  def createEditor ( self , parent , option , index ) :          widget = QtWidgets . QSpinBox ( parent ) widget . setAlignment ( QtCore . Qt . AlignRight ) widget . setMinimum ( 1 ) return widget   class CheckEditor ( QtWidgets . QItemDelegate ) :      def __init__ ( self , parent = None ) :          super ( CheckEditor , self ) . __init__ ( parent )  def createEditor ( self , parent , option , index ) :          widget = QtWidgets . QCheckBox ( parent ) return widget  def setEditorData ( self , editor , index ) :          value = bool ( index . data ( QtCore . Qt . DisplayRole ) ) editor . setChecked ( value )  def setModelData ( self , editor , model , index ) :          value = editor . isChecked ( ) model . setData ( index , QtCore . QVariant ( value ) , QtCore . Qt . DisplayRole )   class ComboEditor ( QtWidgets . QItemDelegate ) :      def __init__ ( self , owner , items = None ) :          super ( ComboEditor , self ) . __init__ ( owner ) self . setItems ( items )  def setItems ( self , items ) :          self . items = items  def createEditor ( self , parent , option , index ) :          self . editor = QtWidgets . QComboBox ( parent ) self . editor . addItems ( self . items ) return self . editor  def setEditorData ( self , editor , index ) :          value = str ( index . data ( QtCore . Qt . DisplayRole ) . toString ( ) ) try :              num = self . items . index ( value )  except ValueError :              num = - 1  editor . setCurrentIndex ( num )  def setModelData ( self , editor , model , index ) :          value = editor . currentText ( ) model . setData ( index , QtCore . QVariant ( value ) , QtCore . Qt . DisplayRole )    