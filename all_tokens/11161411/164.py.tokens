from scipy . constants import R from lib . EoS . cubic import Cubic class vdW ( Cubic ) :      <str> __title__ = <str> __status__ = <str> __doi__ = { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> } , def __init__ ( self , T , P , mezcla ) :          self . T = T self . P = P self . mezcla = mezcla ai = [ ] bi = [ ] for cmp in mezcla . componente :              a , b = self . __lib ( cmp ) ai . append ( a ) bi . append ( b )  am , bm = self . _mixture ( None , mezcla . ids , [ ai , bi ] ) self . ai = ai self . bi = bi self . b = bm self . tita = am self . delta = 0 self . epsilon = 0 super ( vdW , self ) . __init__ ( T , P , mezcla )  def __lib ( self , cmp ) :          a = 0.421875 * R ** 2 * cmp . Tc ** 2 / cmp . Pc b = 0.125 * R * cmp . Tc / cmp . Pc return a , b   if __name__ == <str> :      from lib . mezcla import Mezcla mix = Mezcla ( 5 , ids = [ 4 ] , caudalMolar = 1 , fraccionMolar = [ 1 ] ) eq = vdW ( 300 , 9.9742e5 , mix ) print ( <str> % ( eq . Vg . ccmol , eq . Vl . ccmol ) ) eq = vdW ( 300 , 42.477e5 , mix ) print ( <str> % ( eq . Vl . ccmol ) )   