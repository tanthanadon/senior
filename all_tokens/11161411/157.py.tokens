<str> from scipy . constants import R from lib . bip import Kij , Mixing_Rule from lib . EoS . cubic import Cubic class RK ( Cubic ) :      <str> __title__ = <str> __status__ = <str> __doi__ = { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , def __init__ ( self , T , P , mezcla ) :          ai = [ ] bi = [ ] for componente in mezcla . componente :              a , b = self . _lib ( componente , T ) ai . append ( a ) bi . append ( b )  self . kij = Kij ( mezcla . ids ) a , b = Mixing_Rule ( mezcla . fraccion , [ ai , bi ] , self . kij ) self . ai = ai self . bi = bi self . b = b self . tita = a self . delta = b self . epsilon = 0 super ( RK , self ) . __init__ ( T , P , mezcla )  def _lib ( self , cmp , T ) :          a = 0.42747 * R ** 2 * cmp . Tc ** 2 / cmp . Pc alfa = ( T / cmp . Tc ) ** - 0.5 b = 0.08664 * R * cmp . Tc / cmp . Pc return a * alfa , b   if __name__ == <str> :      from lib . mezcla import Mezcla mix = Mezcla ( 5 , ids = [ 4 ] , caudalMolar = 1 , fraccionMolar = [ 1 ] ) eq = RK ( 300 , 9.9742e5 , mix ) print ( <str> % ( eq . Vg . ccmol , eq . Vl . ccmol ) ) eq = RK ( 300 , 42.477e5 , mix ) print ( <str> % ( eq . Vl . ccmol ) )   