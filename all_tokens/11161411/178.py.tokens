from unittest import TestCase from lib import unidades from lib . meos import MEoS class SO2 ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 525.002841 ) Tc = unidades . Temperature ( 430.64 ) Pc = unidades . Pressure ( 7886.6 , <str> ) M = 64.0638 Tt = unidades . Temperature ( 197.7 ) Tb = unidades . Temperature ( 263.13 ) f_acent = 0.256 momentoDipolar = unidades . DipoleMoment ( 1.6 , <str> ) id = 51 Fi1 = { <str> : [ 1 , 3. ] , <str> : [ 0 , 1 , - 1 ] , <str> : [ - 4.5414235721 , 4.4732289572 , - 0.0159272204 ] , <str> : [ 1.0875 , 1.916 ] , <str> : [ 783 / Tc , 1864 / Tc ] } Fi2 = { <str> : [ 1 , 3. ] , <str> : [ 0 , 1 , - 1 ] , <str> : [ - 4.5328346436 , 4.4777967379 , - 0.01560057996 ] , <str> : [ 1.062 , 1.9401 ] , <str> : [ 775 / Tc , 1851 / Tc ] } CP2 = { <str> : 0.4021066 / 8.3143 * 64.066 , <str> : [ 0.87348570e-3 / 8.3143 * 64.066 , - 0.45968820e-6 / 8.3143 * 64.066 , - 0.13328400e-11 / 8.3143 * 64.066 , 0.23785000e-13 / 8.3143 * 64.066 ] , <str> : [ 1 , 2 , 3 , 4 ] , <str> : [ ] , <str> : [ ] } gao = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> } , <str> : 8.3144621 , <str> : Fi1 , <str> : <str> , <str> : 8.078 , <str> : Tt , <str> : 525.0 , <str> : 35000.0 , <str> : 25.40 , <str> : [ 0.01744413 , 1.814878 , - 2.246338 , - 0.4602906 , 0.1097049 ] , <str> : [ 4 , 1 , 1 , 2 , 3 ] , <str> : [ 1 , 0.45 , 0.9994 , 1 , 0.45 ] , <str> : [ - 0.9485769 , - 0.8751541 , 0.4228777 , - 0.4174962 , - 0.002903451 ] , <str> : [ 1 , 3 , 2 , 2 , 7 ] , <str> : [ 2.907 , 2.992 , 0.87 , 3.302 , 1.002 ] , <str> : [ 2 , 2 , 1 , 2 , 1 ] , <str> : [ 1 ] * 5 , <str> : [ 1.64041 , - 0.4103535 , - 0.08316597 , - 0.2728126 , - 0.1075782 , - 0.4348434 ] , <str> : [ 1 , 1 , 3 , 2 , 2 , 1 ] , <str> : [ 1.15 , 0.997 , 1.36 , 2.086 , 0.855 , 0.785 ] , <str> : [ 1.061 , 0.945 , 1.741 , 1.139 , 1.644 , 0.647 ] , <str> : [ 0.967 , 2.538 , 2.758 , 1.062 , 1.039 , 0.41 ] , <str> : [ 1.276 , 0.738 , 0.71 , 0.997 , 1.35 , 0.919 ] , <str> : [ 0.832 , 0.69 , 0.35 , 0.961 , 0.981 , 0.333 ] } lemmon = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi2 , <str> : <str> , <str> : Tt , <str> : 525.0 , <str> : 35000.0 , <str> : 25.30 , <str> : [ 0.93061 , - 1.9528 , - 0.17467 , 0.061524 , 0.00017711 ] , <str> : [ 1 , 1 , 1 , 3 , 7 , ] , <str> : [ 0.25 , 1.25 , 1.5 , 0.25 , 0.875 ] , <str> : [ 0.21615 , 0.51353 , 0.010419 , - 0.25286 , - 0.054720 , - 0.059856 , - 0.016523 ] , <str> : [ 1 , 2 , 5 , 1 , 1 , 4 , 2 ] , <str> : [ 2.375 , 2. , 2.125 , 3.5 , 6.5 , 4.75 , 12.5 ] , <str> : [ 1 , 1 , 1 , 2 , 2 , 2 , 3 ] , <str> : [ 1 ] * 7 } polt = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.3143 , <str> : CP2 , <str> : <str> , <str> : Tt , <str> : 523.0 , <str> : 32000.0 , <str> : 22.91 , <str> : [ 0.789407019882 , - 0.170449580056e1 , 0.115984637964e1 , - 0.576307837294 , 0.249237283833e1 , - 0.518115678632e1 , 0.320766081899e1 , - 0.123636065893e1 , 0.144419600938e-1 , - .15380705504 , 0.386324300525 , 0.292550313202 , - 0.372445361392 , - 0.636924333910e-1 , 0.986166451596e-1 , - 0.216993783055e-2 ] , <str> : [ 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 4 , 4 , 5 ] , <str> : [ 3 , 4 , 5 , 0 , 1 , 2 , 3 , 4 , 0 , 1 , 2 , 0 , 1 , 0 , 1 , 1 ] , <str> : [ - 0.789407019882 , 0.170449580056e1 , - 0.115984637964e1 , - 0.480876182378 , 0.164910076886e1 , - 0.133861069604e1 ] , <str> : [ 0 , 0 , 0 , 2 , 2 , 2 ] , <str> : [ 3 , 4 , 5 , 3 , 4 , 5 ] , <str> : [ 2 ] * 6 , <str> : [ 1 ] * 6 } eq = gao , lemmon , polt _surface = { <str> : [ 0.0803 , 0.0139 , - 0.0114 ] , <str> : [ 0.928 , 1.57 , 0.364 ] } _vapor_Pressure = { <str> : 3 , <str> : [ - 7.303 , 1.9794 , - 2.078 , - 3.5446 , 0.51776 ] , <str> : [ 1 , 1.5 , 2.2 , 4.7 , 6 ] } _liquid_Density = { <str> : 1 , <str> : [ 7.2296 , - 16.928 , 29.832 , - 27.901 , 11.085 ] , <str> : [ 0.54 , 0.88 , 1.23 , 1.6 , 2 ] } _vapor_Density = { <str> : 2 , <str> : [ - 7.487 , 10.118 , - 13.608 , - 25.408 , - 42.04 , - 38.668 ] , <str> : [ 0.545 , 0.85 , 1.2 , 3.7 , 7.5 , 10 ] }  class Test ( TestCase ) :      def test_gao ( self ) :          st = SO2 ( T = 250 , rhom = 23.6 ) self . assertEqual ( round ( st . P . MPa , 7 ) , 12.2955804 ) self . assertEqual ( round ( st . cvM . kJkmolK , 4 ) , 53.1514 ) self . assertEqual ( round ( st . cpM . kJkmolK , 4 ) , 86.0982 ) self . assertEqual ( round ( st . w , 2 ) , 1130.24 ) st = SO2 ( T = 400 , rhom = 16 ) self . assertEqual ( round ( st . P . MPa , 7 ) , 8.0793790 ) self . assertEqual ( round ( st . cvM . kJkmolK , 4 ) , 51.8705 ) self . assertEqual ( round ( st . cpM . kJkmolK , 3 ) , 117.691 ) self . assertEqual ( round ( st . w , 3 ) , 449.618 ) st = SO2 ( T = 431 , rhom = 8.078 ) self . assertEqual ( round ( st . P . MPa , 7 ) , 7.9343772 ) self . assertEqual ( round ( st . cvM . kJkmolK , 4 ) , 64.5073 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 19127.4 ) self . assertEqual ( round ( st . w , 3 ) , 168.147 ) st = SO2 ( T = 250 , rhom = 0 ) self . assertEqual ( round ( st . P . MPa , 7 ) , 0 ) self . assertEqual ( round ( st . cvM . kJkmolK , 4 ) , 29.8406 ) self . assertEqual ( round ( st . cpM . kJkmolK , 4 ) , 38.1551 ) self . assertEqual ( round ( st . w , 3 ) , 203.682 ) st = SO2 ( T = 420 , rhom = 1 ) self . assertEqual ( round ( st . P . MPa , 7 ) , 2.9365903 ) self . assertEqual ( round ( st . cvM . kJkmolK , 4 ) , 40.8928 ) self . assertEqual ( round ( st . cpM . kJkmolK , 4 ) , 59.5297 ) self . assertEqual ( round ( st . w , 3 ) , 234.103 ) st = SO2 ( T = 450 , rhom = 11 ) self . assertEqual ( round ( st . P . MPa , 7 ) , 12.1084452 ) self . assertEqual ( round ( st . cvM . kJkmolK , 4 ) , 54.7870 ) self . assertEqual ( round ( st . cpM . kJkmolK , 3 ) , 222.083 ) self . assertEqual ( round ( st . w , 3 ) , 250.095 )  def test_shortLemmon ( self ) :          st = SO2 ( T = 432 , rhom = 8 , eq = <str> ) self . assertEqual ( round ( st . P . kPa , 3 ) , 8052.256 ) self . assertEqual ( round ( st . hM . kJkmol , 3 ) , 20821.200 ) self . assertEqual ( round ( st . sM . kJkmolK , 3 ) , 56.819 ) self . assertEqual ( round ( st . cvM . kJkmolK , 3 ) , 61.478 ) self . assertEqual ( round ( st . cpM . kJkmolK , 3 ) , 4877.456 ) self . assertEqual ( round ( st . w , 3 ) , 171.538 )    