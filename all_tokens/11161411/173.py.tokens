from unittest import TestCase from lib import unidades from lib . meos import MEoS class Cyclopentane ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 274.920968 ) Tc = unidades . Temperature ( 511.72 ) Pc = unidades . Pressure ( 4571.2 , <str> ) M = 70.1329 Tt = unidades . Temperature ( 179.7 ) Tb = unidades . Temperature ( 322.405 ) f_acent = 0.201 momentoDipolar = unidades . DipoleMoment ( 0.0 , <str> ) id = 36 Fi1 = { <str> : [ 1 , 3 ] , <str> : [ 0 , 1 ] , <str> : [ - 0.3946233253 , 2.4918910143 ] , <str> : [ 1.34 , 13.4 , 17.4 , 6.65 ] , <str> : [ 230 / Tc , 1180 / Tc , 2200 / Tc , 5200 / Tc ] } gedanitz = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.3144621 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 550.0 , <str> : 250000.0 , <str> : 12.11 , <str> : [ 0.0630928 , 1.50365 , - 2.37099 , - 0.484886 , 0.191843 ] , <str> : [ 4 , 1 , 1 , 2 , 3 ] , <str> : [ 1 , 0.29 , 0.85 , 1.185 , 0.45 ] , <str> : [ - 0.835582 , - 0.435929 , 0.545607 , - 0.209741 , - 0.0387635 ] , <str> : [ 1 , 3 , 2 , 2 , 7 ] , <str> : [ 2.28 , 1.8 , 1.5 , 2.9 , 0.93 ] , <str> : [ 2 , 2 , 1 , 2 , 1 ] , <str> : [ 1 ] * 5 , <str> : [ 0.677674 , - 0.137043 , - 0.0852862 , - 0.128085 , - 0.00389381 ] , <str> : [ 1 , 1 , 3 , 3 , 2 ] , <str> : [ 1.05 , 4.0 , 2.33 , 1.5 , 1.0 ] , <str> : [ 0.86 , 0.85 , 0.86 , 1.53 , 5.13 ] , <str> : [ 0.63 , 2.8 , 0.5 , 0.95 , 0.23 ] , <str> : [ 1.22 , 0.32 , 0.22 , 1.94 , 1.21 ] , <str> : [ 0.684 , 0.7 , 0.77 , 0.625 , 0.42 ] } eq = gedanitz , _PR = [ - 0.1387 , - 16.9135 ] _vapor_Pressure = { <str> : 3 , <str> : [ - 7.1905 , 1.8637 , - 1.6442 , - 2.72 ] , <str> : [ 1.0 , 1.5 , 5.5 , 2.9 ] } _liquid_Density = { <str> : 1 , <str> : [ 0.0741 , 81.968 , 173.88 , - 68.519 , - 184.74 ] , <str> : [ 0.1 , 0.9 , 1.25 , 1.4 , 1.05 ] } _vapor_Density = { <str> : 2 , <str> : [ - 0.0559 , - 6.4211 , - 46.926 , 28.082 , - 70.838 ] , <str> : [ 0.1 , 0.65 , 3.2 , 3.55 , 7.5 ] } thermo0 = { <str> : <str> , <str> : { <str> : <str> <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 511.72 , <str> : 1e-3 , <str> : [ - 8.2523346 , 76.33654 , - 217.6154 , 312.29877 ] , <str> : [ 0 , 1 , 2 , 3 ] , <str> : [ 1 , 0.28341478 , 2.7890541 , 0.32645005 ] , <str> : [ 0 , 1 , 2 , 3 ] , <str> : 511.72 , <str> : 274.921 , <str> : 1 , <str> : [ 0.0920536 , - 0.172699 , 0.126557 , - 0.0362296 , 0.00388718 , - 0.0435129 , 0.112636 , - 0.0908663 , 0.028095 , - 0.00280368 ] , <str> : [ 0 , 0 , 0 , 0 , 0 , - 1 , - 1 , - 1 , - 1 , - 1 ] , <str> : [ 1 , 2 , 3 , 4 , 5 , 1 , 2 , 3 , 4 , 5 ] , <str> : 3 , <str> : 0.63 , <str> : 1.239 , <str> : 1.02 , <str> : 0.216e-9 , <str> : 0.058 , <str> : 0.624e-9 , <str> : 767.58 } _thermal = thermo0 ,  class Test ( TestCase ) :      def test_gedanitz ( self ) :          st = Cyclopentane ( T = 330 , rhom = 0.01 ) self . assertEqual ( round ( st . P . MPa , 8 ) , 0.02720379 ) self . assertEqual ( round ( st . cvM . JmolK , 5 ) , 86.25843 ) self . assertEqual ( round ( st . cpM . JmolK , 5 ) , 94.88857 ) self . assertEqual ( round ( st . w , 4 ) , 205.6768 ) st = Cyclopentane ( T = 330 , rhom = 11 ) self . assertEqual ( round ( st . P . MPa , 5 ) , 75.55974 ) self . assertEqual ( round ( st . cvM . JmolK , 4 ) , 100.6003 ) self . assertEqual ( round ( st . cpM . JmolK , 4 ) , 130.5568 ) self . assertEqual ( round ( st . w , 3 ) , 1471.842 ) st = Cyclopentane ( T = 530 , rhom = 1 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 3.240235 ) self . assertEqual ( round ( st . cvM . JmolK , 4 ) , 156.4924 ) self . assertEqual ( round ( st . cpM . JmolK , 4 ) , 187.7243 ) self . assertEqual ( round ( st . w , 4 ) , 195.4293 ) st = Cyclopentane ( T = 512 , rhom = 4 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 4.601539 ) self . assertEqual ( round ( st . cvM . JmolK , 4 ) , 161.5786 ) self . assertEqual ( round ( st . cpM . JmolK , 2 ) , 22857.91 ) self . assertEqual ( round ( st . w , 4 ) , 113.0171 ) st = Cyclopentane ( T = 520 , rhom = 6 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 6.522373 ) self . assertEqual ( round ( st . cvM . JmolK , 4 ) , 159.2304 ) self . assertEqual ( round ( st . cpM . JmolK , 4 ) , 276.7530 ) self . assertEqual ( round ( st . w , 4 ) , 234.2660 )  def test_Vassiliou ( self ) :          self . assertEqual ( round ( Cyclopentane ( T = 512 , rho = 400 ) . k . mWmK , 3 ) , 68.661 )    