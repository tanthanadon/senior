from unittest import TestCase from lib import unidades from lib . meos import MEoS class nC8 ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 234.9 ) Tc = unidades . Temperature ( 569.32 ) Pc = unidades . Pressure ( 2497.0 , <str> ) M = 114.2285 Tt = unidades . Temperature ( 216.37 ) Tb = unidades . Temperature ( 398.77 ) f_acent = 0.395 momentoDipolar = unidades . DipoleMoment ( 0.07 , <str> ) id = 12 _Tr = unidades . Temperature ( 565.427917 ) _rhor = unidades . Density ( 234.605116 ) _w = 0.402698435 CP1 = { <str> : 4 , <str> : [ ] , <str> : [ ] , <str> : [ ] , <str> : [ ] , <str> : [ 15.6865 , 48.1731 ] , <str> : [ 158.9220 , 1693.07 ] , <str> : [ 33.8029 ] , <str> : [ 815.064 ] } Fi1 = { <str> : [ 1 , 3.0 ] , <str> : [ 15.864687161 , - 97.370667555 ] , <str> : [ 0 , 1 ] , <str> : [ ] , <str> : [ ] , <str> : [ 15.6865 , 48.1731 ] , <str> : [ 158.9220 / Tc , 1693.07 / Tc ] , <str> : [ 33.8029 ] , <str> : [ 815.064 / Tc ] } CP3 = { <str> : 3.018753 , <str> : [ 0.07297005 , - 0.14171168e-4 , - 0.1225317e-7 , 0.12912645e-11 ] , <str> : [ 1 , 2 , 3 , 4 ] , <str> : [ ] , <str> : [ ] } f = 8.3159524 / 4.184 CP4 = { <str> : 34.0847 * f , <str> : [ ] , <str> : [ ] , <str> : [ ] , <str> : [ ] , <str> : [ 2.603664e8 * f ] , <str> : [ 1.6115500e3 ] , <str> : [ 4.1241363e7 * f ] , <str> : [ 7.6884700e2 ] } shortSpan = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.31451 , <str> : CP1 , <str> : <str> , <str> : 114.231 , <str> : 569.32 , <str> : 234.9 / 114.231 , <str> : Tt , <str> : 750.0 , <str> : 100000.0 , <str> : 6.69 , <str> : [ 0.10722545e1 , - 0.24632951e1 , 0.65386674 , - 0.36324974 , 0.1271327 , 0.30713573e-3 ] , <str> : [ 1 , 1 , 1 , 2 , 3 , 7 ] , <str> : [ 0.25 , 1.125 , 1.5 , 1.375 , 0.25 , 0.875 ] , <str> : [ 0.52656857 , 0.19362863e-1 , - 0.58939427 , - 0.14069964 , - 0.78966331e-2 , 0.33036598e-2 ] , <str> : [ 2 , 5 , 1 , 4 , 3 , 4 ] , <str> : [ 0.625 , 1.75 , 3.625 , 3.625 , 14.5 , 12. ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 ] , <str> : [ 1 ] * 6 } GERG = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 600.0 , <str> : 100000.0 , <str> : 6.69 , <str> : [ 0.10722544875633e1 , - 0.24632951172003e1 , 0.65386674054928 , - 0.36324974085628 , 0.12713269626764 , 0.30713572777930e-3 ] , <str> : [ 1 , 1 , 1 , 2 , 3 , 7 ] , <str> : [ 0.25 , 1.125 , 1.5 , 1.375 , 0.25 , 0.875 ] , <str> : [ 0.5265685698754 , 0.19362862857653e-1 , - 0.58939426849155 , - 0.14069963991934 , - 0.78966330500036e-2 , 0.33036597968109e-2 ] , <str> : [ 2 , 5 , 1 , 4 , 3 , 4 ] , <str> : [ 0.625 , 1.75 , 3.625 , 3.625 , 14.5 , 12. ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 ] , <str> : [ 1 ] * 6 } polt = { <str> : <str> , <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.3143 , <str> : 114.233 , <str> : 569.35 , <str> : 2517 , <str> : 2.0571989 , <str> : CP3 , <str> : <str> , <str> : 258.0 , <str> : 600.0 , <str> : 200000.0 , <str> : 6.6355607 , <str> : [ 0.266117347782e1 , - 0.343810366899e1 , 0.700476763325 , 0.573101545749e1 , - 0.411975339382e1 , - 0.771251551395e1 , 0.526137115388e1 , - 0.716144047789 , - 0.584632875151e1 , 0.736422551908e1 , - 0.100540027381e1 , 0.158387242200e1 , - 0.153643650819e1 , - 0.142010818863 , 0.333126039209e-1 , 0.271948869925e-1 ] , <str> : [ 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 4 , 4 , 5 ] , <str> : [ 3 , 4 , 5 , 0 , 1 , 2 , 3 , 4 , 0 , 1 , 2 , 0 , 1 , 0 , 1 , 1 ] , <str> : [ - 0.266117347782e1 , 0.343810366899e1 , - 0.700476763325 , 0.443217980268e1 , - 0.123858312597e2 , 0.803373487925e1 ] , <str> : [ 0 , 0 , 0 , 2 , 2 , 2 ] , <str> : [ 3 , 4 , 5 , 3 , 4 , 5 ] , <str> : [ 2 ] * 6 , <str> : [ 0.9995725 ] * 6 } starling = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.3159524 , <str> : CP4 , <str> : <str> , <str> : 255.372 , <str> : 644.0 , <str> : 55000.0 , <str> : 6.36203 , <str> : [ 0.253526486527e1 , 0.616872653050 , - 0.941731168114 , - 0.109609729872e1 , 0.849362892312e-1 , - 0.363538456997e-3 , 0.849748115039e-1 , - 0.961236603829e-1 , - 0.132591135067 , 0.269748328453e-2 , 0.372085674947e-2 ] , <str> : [ 0 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 5 , 5 ] , <str> : [ 3 , 0 , 1 , 3 , 4 , 5 , 0 , 1 , 2 , 1 , 2 ] , <str> : [ - 0.253526486527e1 , - 0.447291258549 ] , <str> : [ 0 , 2 ] , <str> : [ 3 , 3 ] , <str> : [ 2 ] * 2 , <str> : [ 0.35285564 ] * 2 } sun = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.31451 , <str> : CP1 , <str> : <str> , <str> : Tt , <str> : 620.0 , <str> : 800000.0 , <str> : 40. , <str> : [ 1.57750154 , 1.15745614 , - 3.54867092 , 1.18030671e-1 , 3.02753897e-4 , - 2.63074957e-1 ] , <str> : [ 1 , 1 , 1 , 3 , 7 , 2 ] , <str> : [ 1.5 , 0.25 , 1.25 , 0.25 , 0.875 , 1.375 ] , <str> : [ 2.55299486e-2 , - 1.26632996e-1 , 4.48343319e-1 , - 9.46702997e-3 , - 0.443927529 , - 1.68224827e-2 , - 1.15864640e-1 , - 1.32417591e-2 ] , <str> : [ 1 , 1 , 2 , 5 , 1 , 1 , 4 , 2 ] , <str> : [ 0 , 2.375 , 2. , 2.125 , 3.5 , 6.5 , 4.75 , 12.5 ] , <str> : [ 1 , 1 , 1 , 1 , 2 , 2 , 2 , 3 ] , <str> : [ 1 ] * 8 } eq = shortSpan , GERG , polt , starling , sun _PR = [ 0.0526 , - 21.0808 ] _surface = { <str> : [ 0.34338 , - 0.50634 , 0.2238 ] , <str> : [ 1.6607 , 1.9632 , 2.3547 ] } _dielectric = { <str> : 1 , <str> : [ 39.74 , 0.040 ] , <str> : [ 348.01 , 494.18 ] , <str> : [ - 76838 , - 65772 ] , <str> : 29.84 , <str> : 2 } _vapor_Pressure = { <str> : 3 , <str> : [ - 0.79713e1 , 0.17915e1 , - 0.34540e1 , - 0.82509e1 , 0.53357e1 ] , <str> : [ 1.0 , 1.5 , 2.64 , 5.5 , 6.0 ] } _liquid_Density = { <str> : 1 , <str> : [ 0.56814e1 , 0.38908e2 , - 0.75923e2 , 0.59548e2 , - 0.19651e2 ] , <str> : [ 0.1 , 0.75 , 0.9 , 1.1 , 1.25 ] } _vapor_Density = { <str> : 2 , <str> : [ - 0.16556 , - 5.9337 , - 18.915 , - 0.36484e3 , 0.72686e3 , - 0.50392e3 ] , <str> : [ 0.09 , 0.59 , 2.4 , 7.0 , 8.0 , 9.0 ] } visco0 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 1 , <str> : 452.09 , <str> : 0.63617 , <str> : 0.021357 , <str> : [ 0.335103 , - 0.467898 ] , <str> : 452.09 , <str> : [ - 19.572881 , 219.73999 , - 1015.3226 , 2471.0125 , - 3375.1717 , 2491.6597 , - 787.26086 , 14.085455 , - 0.34664158 ] , <str> : [ 0 , - 0.25 , - 0.5 , - 0.75 , - 1 , - 1.25 , - 1.5 , - 2.5 , - 5.5 ] , <str> : 569.32 , <str> : 234.9 , <str> : 1000 , <str> : [ - 0.103924 , 0.113327e-1 , 0.992302e-1 , - 0.322455e-1 ] , <str> : [ 1 , 1 , 2 , 2 ] , <str> : [ 2 , 3 , 2 , 3 ] , <str> : 606.122 , <str> : 2.0651 , <str> : [ 3.07843 / 2.0651 , - 0.879088 / 2.0651 ] , <str> : [ - 0.5 , - 1 ] } visco1 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 4 , <str> : 0 , <str> : 569.32 , <str> : [ 16.7562 , - 53.1705 , 46.9105 ] , <str> : [ 0 , 0.25 , 0.5 ] , <str> : [ 8.68736e-5 , 0.0 , - 2.69591e-5 ] , <str> : [ 1.46267e-4 , 0.0 , - 5.44584e-5 ] , <str> : [ 1.28673e-4 , - 1.76442e-5 , 0.0 ] , <str> : [ - 2.40884e-9 , 5.20715e-11 , 0.0 ] , <str> : [ 0.0 , 6.62141e-9 , 1.60012e-9 ] , <str> : [ - 9.50545e-7 , 1.03767e-6 , 0.0 ] } _viscosity = visco0 , visco1 thermo0 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 569.32 , <str> : 1 , <str> : [ 0.772930e-2 , - 0.371138e-1 , 0.977580e-1 , - 0.288707e-1 ] , <str> : [ 0 , 1 , 2 , 3 ] , <str> : 569.32 , <str> : 234.9 , <str> : 1 , <str> : [ 0.285553e-1 , - 0.926155e-2 , - 0.171398e-1 , 0.659971e-2 , 0.153496e-2 ] , <str> : [ 0 , - 1 , 0 , 0 , - 1 ] , <str> : [ 1 , 1 , 2 , 3 , 3 ] , <str> : 3 , <str> : 0.63 , <str> : 1.239 , <str> : 1.03 , <str> : 0.194e-9 , <str> : 0.0496 , <str> : 0.68628e-9 , <str> : 853.98 } _thermal = thermo0 ,  class Test ( TestCase ) :      def test_shortSpan ( self ) :          st = nC8 ( T = 700 , rho = 200 , eq = <str> ) self . assertEqual ( round ( st . cp0 . kJkgK , 4 ) , 3.1537 ) self . assertEqual ( round ( st . P . MPa , 3 ) , 6.363 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 3.8007 ) st2 = nC8 ( T = 750 , rho = 100 , eq = <str> ) self . assertEqual ( round ( st2 . h . kJkg - st . h . kJkg , 2 ) , 211.79 ) self . assertEqual ( round ( st2 . s . kJkgK - st . s . kJkgK , 5 ) , 0.31183 )  def test_viscoHuber ( self ) :          self . assertEqual ( round ( nC8 ( T = 300 , P = 1e7 ) . mu . muPas , 2 ) , 553.60 )  def test_thermoHuber ( self ) :          self . assertEqual ( round ( nC8 ( T = 300 , P = 1e7 ) . k . mWmK , 2 ) , 128.36 )    