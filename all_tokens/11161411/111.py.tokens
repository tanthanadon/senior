import os import sqlite3 from PyQt5 . QtWidgets import QApplication path = os . path . join ( os . environ [ <str> ] , <str> , <str> ) databank = sqlite3 . connect ( path ) . cursor ( ) databank . execute ( <str> ) CATALOG = databank . fetchall ( ) CATALOG_TRANSLATE = { <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) } path = os . environ [ <str> ] + <str> databank . execute ( <str> ) FITTING = databank . fetchall ( ) FITTING_DESC = { <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) + <str> , <str> : QApplication . translate ( <str> , <str> ) + <str> , <str> : QApplication . translate ( <str> , <str> ) + <str> , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) , <str> : QApplication . translate ( <str> , <str> ) } thermalConductivity = { <str> : 22.5 , <str> : 401. , <str> : 22.6 , } density = { <str> : 4510. , <str> : 8960. , <str> : 6520. , } finnedTube_database = [ [ <str> , <str> , 15.875 , 1.245 , .711 , .635 , 14.249 , 12.827 , .125 , .040 , 3.114 , 1.292 , .279 , .813 ] , [ <str> , <str> , 15.875 , 1.473 , .889 , .787 , 14.249 , 12.471 , .125 , .039 , 3.186 , 1.222 , .279 , .813 ] , [ <str> , <str> , 15.875 , 1.651 , 1.067 , .940 , 14.249 , 12.116 , .125 , .038 , 3.288 , 1.153 , .279 , .813 ] , [ <str> , <str> , 15.875 , 1.829 , 1.245 , 1.118 , 14.249 , 11.760 , .125 , .037 , 3.397 , 1.086 , .279 , .813 ] , [ <str> , <str> , 15.875 , 2.108 , 1.651 , 1.473 , 14.249 , 10.947 , .125 , .034 , 3.637 , .941 , .279 , .813 ] , [ <str> , <str> , 19.050 , 1.245 , .711 , .635 , 17.424 , 16.002 , .152 , .050 , 3.030 , 2.011 , .279 , .813 ] , [ <str> , <str> , 19.050 , 1.473 , .889 , .787 , 17.424 , 15.646 , .152 , .049 , 3.106 , 1.923 , .279 , .813 ] , [ <str> , <str> , 19.050 , 1.651 , 1.067 , .940 , 17.424 , 15.291 , .152 , .048 , 3.165 , 1.836 , .279 , .813 ] , [ <str> , <str> , 19.050 , 1.829 , 1.245 , 1.118 , 17.424 , 14.935 , .152 , .047 , 3.247 , 1.752 , .279 , .813 ] , [ <str> , <str> , 19.050 , 2.108 , 1.651 , 1.473 , 17.424 , 14.122 , .152 , .045 , 3.425 , 1.566 , .279 , .813 ] , [ <str> , <str> , 19.050 , 2.769 , 2.108 , 1.880 , 17.424 , 13.208 , .152 , .041 , 3.676 , 1.370 , .279 , .813 ] , [ <str> , <str> , 22.225 , 1.245 , .711 , .635 , 20.599 , 19.177 , .179 , .060 , 2.965 , 2.888 , .279 , .813 ] , [ <str> , <str> , 22.225 , 1.473 , .889 , .787 , 20.599 , 18.821 , .179 , .059 , 3.026 , 2.782 , .279 , .813 ] , [ <str> , <str> , 22.225 , 1.651 , 1.067 , .940 , 20.599 , 18.466 , .179 , .058 , 3.089 , 2.678 , .279 , .813 ] , [ <str> , <str> , 22.225 , 1.829 , 1.245 , 1.118 , 20.599 , 18.110 , .179 , .057 , 3.139 , 2.576 , .279 , .813 ] , [ <str> , <str> , 22.225 , 2.108 , 1.651 , 1.473 , 20.599 , 17.297 , .179 , .054 , 3.298 , 2.350 , .279 , .813 ] , [ <str> , <str> , 22.225 , 2.769 , 2.108 , 1.880 , 20.599 , 16.383 , .179 , .052 , 3.473 , 2.108 , .279 , .813 ] , [ <str> , <str> , 25.400 , 1.473 , .889 , .787 , 23.774 , 21.996 , .205 , .069 , 2.956 , 3.800 , .279 , .813 ] , [ <str> , <str> , 25.400 , 1.651 , 1.067 , .940 , 23.774 , 21.641 , .205 , .068 , 3.009 , 3.678 , .279 , .813 ] , [ <str> , <str> , 25.400 , 1.829 , 1.245 , 1.118 , 23.774 , 21.285 , .205 , .067 , 3.064 , 3.558 , .279 , .813 ] , [ <str> , <str> , 25.400 , 2.108 , 1.651 , 1.473 , 23.774 , 20.472 , .205 , .064 , 3.180 , 3.292 , .279 , .813 ] , [ <str> , <str> , 25.400 , 2.769 , 2.108 , 1.880 , 23.774 , 19.558 , .205 , .062 , 3.322 , 3.004 , .279 , .813 ] , [ <str> , <str> , 15.875 , 1.245 , .711 , .635 , 14.097 , 12.675 , .126 , .040 , 3.153 , 1.262 , .305 , .889 ] , [ <str> , <str> , 15.875 , 1.473 , .889 , .787 , 14.097 , 12.319 , .126 , .039 , 3.252 , 1.192 , .305 , .889 ] , [ <str> , <str> , 15.875 , 1.651 , 1.067 , .940 , 14.097 , 11.963 , .126 , .037 , 3.358 , 1.124 , .305 , .889 ] , [ <str> , <str> , 15.875 , 1.829 , 1.245 , 1.118 , 14.097 , 11.608 , .126 , .037 , 3.442 , 1.058 , .305 , .889 ] , [ <str> , <str> , 15.875 , 2.108 , 1.651 , 1.473 , 14.097 , 10.795 , .126 , .034 , 3.721 , .915 , .305 , .889 ] , [ <str> , <str> , 19.050 , 1.245 , .711 , .635 , 17.272 , 15.850 , .153 , .050 , 3.074 , 1.973 , .305 , .889 ] , [ <str> , <str> , 19.050 , 1.473 , .889 , .787 , 17.272 , 15.494 , .153 , .049 , 3.131 , 1.885 , .305 , .889 ] , [ <str> , <str> , 19.050 , 1.651 , 1.067 , .940 , 17.272 , 15.138 , .153 , .048 , 3.212 , 1.800 , .305 , .889 ] , [ <str> , <str> , 19.050 , 1.829 , 1.245 , 1.118 , 17.272 , 14.783 , .153 , .046 , 3.296 , 1.716 , .305 , .889 ] , [ <str> , <str> , 19.050 , 2.108 , 1.651 , 1.473 , 17.272 , 13.970 , .153 , .044 , 3.479 , 1.533 , .305 , .889 ] , [ <str> , <str> , 19.050 , 2.769 , 2.108 , 1.880 , 17.272 , 13.056 , .153 , .041 , 3.711 , 1.339 , .305 , .889 ] , [ <str> , <str> , 22.225 , 1.245 , .711 , .635 , 20.447 , 19.025 , .179 , .060 , 3.000 , 2.843 , .305 , .889 ] , [ <str> , <str> , 22.225 , 1.473 , .889 , .787 , 20.447 , 18.669 , .179 , .059 , 3.063 , 2.737 , .305 , .889 ] , [ <str> , <str> , 22.225 , 1.651 , 1.067 , .940 , 20.447 , 18.313 , .179 , .058 , 3.111 , 2.634 , .305 , .889 ] , [ <str> , <str> , 22.225 , 1.829 , 1.245 , 1.118 , 20.447 , 17.958 , .179 , .056 , 3.178 , 2.533 , .305 , .889 ] , [ <str> , <str> , 22.225 , 2.108 , 1.651 , 1.473 , 20.447 , 17.145 , .179 , .054 , 3.322 , 2.309 , .305 , .889 ] , [ <str> , <str> , 22.225 , 2.769 , 2.108 , 1.880 , 20.447 , 16.231 , .179 , .051 , 3.521 , 2.069 , .305 , .889 ] , [ <str> , <str> , 25.400 , 1.473 , .889 , .787 , 23.622 , 21.844 , .206 , .069 , 3.004 , 3.748 , .305 , .889 ] , [ <str> , <str> , 25.400 , 1.651 , 1.067 , .940 , 23.622 , 21.488 , .206 , .067 , 3.059 , 3.627 , .305 , .889 ] , [ <str> , <str> , 25.400 , 1.829 , 1.245 , 1.118 , 23.622 , 21.133 , .206 , .066 , 3.101 , 3.508 , .305 , .889 ] , [ <str> , <str> , 25.400 , 2.108 , 1.651 , 1.473 , 23.622 , 20.320 , .206 , .064 , 3.234 , 3.243 , .305 , .889 ] , [ <str> , <str> , 25.400 , 2.769 , 2.108 , 1.880 , 23.622 , 19.406 , .206 , .061 , 3.380 , 2.958 , .305 , .889 ] , [ <str> , <str> , 15.875 , 1.245 , .711 , .635 , 13.386 , 11.963 , .150 , .037 , 4.000 , 1.124 , .330 , 1.245 ] , [ <str> , <str> , 15.875 , 1.473 , .889 , .787 , 13.386 , 11.608 , .150 , .037 , 4.100 , 1.058 , .330 , 1.245 ] , [ <str> , <str> , 15.875 , 1.651 , 1.067 , .940 , 13.386 , 11.252 , .150 , .035 , 4.241 , .994 , .330 , 1.245 ] , [ <str> , <str> , 15.875 , 1.829 , 1.245 , 1.118 , 13.386 , 10.897 , .150 , .034 , 4.393 , .933 , .330 , 1.245 ] , [ <str> , <str> , 15.875 , 2.108 , 1.651 , 1.473 , 13.386 , 10.084 , .150 , .032 , 4.731 , .799 , .330 , 1.245 ] , [ <str> , <str> , 19.050 , 1.245 , .711 , .635 , 16.561 , 15.138 , .182 , .048 , 3.821 , 1.800 , .330 , 1.245 ] , [ <str> , <str> , 19.050 , 1.473 , .889 , .787 , 16.561 , 14.783 , .182 , .046 , 3.921 , 1.716 , .330 , 1.245 ] , [ <str> , <str> , 19.050 , 1.651 , 1.067 , .940 , 16.561 , 14.427 , .182 , .045 , 4.000 , 1.635 , .330 , 1.245 ] , [ <str> , <str> , 19.050 , 1.829 , 1.245 , 1.118 , 16.561 , 14.072 , .182 , .044 , 4.110 , 1.555 , .330 , 1.245 ] , [ <str> , <str> , 19.050 , 2.108 , 1.651 , 1.473 , 16.561 , 13.259 , .182 , .042 , 4.350 , 1.381 , .330 , 1.245 ] , [ <str> , <str> , 19.050 , 2.769 , 2.108 , 1.880 , 16.561 , 12.344 , .182 , .039 , 4.693 , 1.197 , .330 , 1.245 ] , [ <str> , <str> , 22.225 , 1.245 , .711 , .635 , 19.736 , 18.313 , .215 , .058 , 3.725 , 2.634 , .330 , 1.245 ] , [ <str> , <str> , 22.225 , 1.473 , .889 , .787 , 19.736 , 17.958 , .215 , .056 , 3.805 , 2.533 , .330 , 1.245 ] , [ <str> , <str> , 22.225 , 1.651 , 1.067 , .940 , 19.736 , 17.602 , .215 , .055 , 3.890 , 2.433 , .330 , 1.245 ] , [ <str> , <str> , 22.225 , 1.829 , 1.245 , 1.118 , 19.736 , 17.247 , .215 , .054 , 3.955 , 2.336 , .330 , 1.245 ] , [ <str> , <str> , 22.225 , 2.108 , 1.651 , 1.473 , 19.736 , 16.434 , .215 , .052 , 4.166 , 2.121 , .330 , 1.245 ] , [ <str> , <str> , 22.225 , 2.769 , 2.108 , 1.880 , 19.736 , 15.519 , .215 , .049 , 4.400 , 1.892 , .330 , 1.245 ] , [ <str> , <str> , 25.400 , 1.473 , .889 , .787 , 22.911 , 21.133 , .247 , .066 , 3.720 , 3.508 , .330 , 1.245 ] , [ <str> , <str> , 25.400 , 1.651 , 1.067 , .940 , 22.911 , 20.777 , .247 , .065 , 3.790 , 3.391 , .330 , 1.245 ] , [ <str> , <str> , 25.400 , 1.829 , 1.245 , 1.118 , 22.911 , 20.422 , .247 , .064 , 3.862 , 3.275 , .330 , 1.245 ] , [ <str> , <str> , 25.400 , 2.108 , 1.651 , 1.473 , 22.911 , 19.609 , .247 , .062 , 4.015 , 3.020 , .330 , 1.245 ] , [ <str> , <str> , 25.400 , 2.769 , 2.108 , 1.880 , 22.911 , 18.694 , .247 , .059 , 4.202 , 2.745 , .330 , 1.245 ] , [ <str> , <str> , 15.875 , 1.245 , .711 , .635 , 14.554 , 13.132 , .125 , .041 , 3.044 , 1.354 , .305 , .660 ] , [ <str> , <str> , 15.875 , 1.473 , .889 , .787 , 14.554 , 12.776 , .125 , .040 , 3.114 , 1.282 , .305 , .660 ] , [ <str> , <str> , 15.875 , 1.651 , 1.067 , .940 , 14.554 , 12.421 , .125 , .039 , 3.211 , 1.212 , .305 , .660 ] , [ <str> , <str> , 15.875 , 1.829 , 1.245 , 1.118 , 14.554 , 12.065 , .125 , .038 , 3.315 , 1.143 , .305 , .660 ] , [ <str> , <str> , 15.875 , 2.108 , 1.651 , 1.473 , 14.554 , 11.252 , .125 , .035 , 3.543 , .994 , .305 , .660 ] , [ <str> , <str> , 19.050 , 1.245 , .711 , .635 , 17.729 , 16.307 , .152 , .051 , 2.976 , 2.088 , .305 , .660 ] , [ <str> , <str> , 19.050 , 1.473 , .889 , .787 , 17.729 , 15.951 , .152 , .050 , 3.049 , 1.998 , .305 , .660 ] , [ <str> , <str> , 19.050 , 1.651 , 1.067 , .940 , 17.729 , 15.596 , .152 , .049 , 3.106 , 1.910 , .305 , .660 ] , [ <str> , <str> , 19.050 , 1.829 , 1.245 , 1.118 , 17.729 , 15.240 , .152 , .048 , 3.185 , 1.824 , .305 , .660 ] , [ <str> , <str> , 19.050 , 2.108 , 1.651 , 1.473 , 17.729 , 14.427 , .152 , .045 , 3.356 , 1.635 , .305 , .660 ] , [ <str> , <str> , 19.050 , 2.769 , 2.108 , 1.880 , 17.729 , 13.513 , .152 , .042 , 3.597 , 1.434 , .305 , .660 ] , [ <str> , <str> , 22.225 , 1.245 , .711 , .635 , 20.904 , 19.482 , .179 , .061 , 2.920 , 2.981 , .305 , .660 ] , [ <str> , <str> , 22.225 , 1.473 , .889 , .787 , 20.904 , 19.126 , .179 , .060 , 2.980 , 2.873 , .305 , .660 ] , [ <str> , <str> , 22.225 , 1.651 , 1.067 , .940 , 20.904 , 18.771 , .179 , .059 , 3.041 , 2.767 , .305 , .660 ] , [ <str> , <str> , 22.225 , 1.829 , 1.245 , 1.118 , 20.904 , 18.415 , .179 , .058 , 3.089 , 2.663 , .305 , .660 ] , [ <str> , <str> , 22.225 , 2.108 , 1.651 , 1.473 , 20.904 , 17.602 , .179 , .055 , 3.243 , 2.433 , .305 , .660 ] , [ <str> , <str> , 22.225 , 2.769 , 2.108 , 1.880 , 20.904 , 16.688 , .179 , .052 , 3.413 , 2.187 , .305 , .660 ] , [ <str> , <str> , 25.400 , 1.473 , .889 , .787 , 24.079 , 22.301 , .205 , .070 , 2.917 , 3.906 , .305 , .660 ] , [ <str> , <str> , 25.400 , 1.651 , 1.067 , .940 , 24.079 , 21.946 , .205 , .069 , 2.969 , 3.783 , .305 , .660 ] , [ <str> , <str> , 25.400 , 1.829 , 1.245 , 1.118 , 24.079 , 21.590 , .205 , .068 , 3.009 , 3.661 , .305 , .660 ] , [ <str> , <str> , 25.400 , 2.108 , 1.651 , 1.473 , 24.079 , 20.777 , .205 , .065 , 3.136 , 3.391 , .305 , .660 ] , [ <str> , <str> , 25.400 , 2.769 , 2.108 , 1.880 , 24.079 , 19.863 , .205 , .062 , 3.273 , 3.099 , .305 , .660 ] , [ <str> , <str> , 19.050 , 0.889 , .584 , .508 , 17.932 , 16.764 , .152 , .053 , 2.890 , 2.207 , .254 , .559 ] , [ <str> , <str> , 19.050 , 1.245 , .635 , .559 , 17.729 , 16.459 , .152 , .062 , 2.463 , 2.116 , .305 , .66 ] , [ <str> , <str> , 19.050 , 1.245 , .711 , .635 , 17.729 , 16.307 , .152 , .061 , 2.488 , 2.077 , .305 , .66 ] , [ <str> , <str> , 19.050 , 1.245 , .711 , .635 , 17.272 , 15.850 , .153 , .059 , 2.569 , 1.961 , .305 , .889 ] , [ <str> , <str> , 19.050 , 1.473 , .889 , .787 , 17.272 , 15.494 , .153 , .058 , 2.623 , 1.871 , .305 , .889 ] , [ <str> , <str> , 19.050 , 1.245 , .711 , .635 , 16.561 , 15.138 , .182 , .057 , 3.187 , 1.787 , .330 , 1.245 ] , [ <str> , <str> , 19.050 , 1.473 , .889 , .787 , 16.561 , 14.783 , .182 , .055 , 3.275 , 1.703 , .330 , 1.245 ] , [ <str> , <str> , <str> , 15.88 , 0.028 , 0.711 , 0.583 , 14.81 , 0.043 , 1.09 , 11 , 0.590 , 14.99 , 0.025 , 0.635 , 0.492 , 12.50 , 0.276 , 0.411 , 0.436 , 11.07 , 0.043 , 1.092 , 0.114 , 0.035 , 0.133 , 0.041 , 0.133 , 0.041 , 0.299 , 0.091 ] , [ <str> , <str> , <str> , 19.05 , 0.030 , 0.762 , 0.743 , 18.87 , 0.043 , 1.09 , 11 , 0.753 , 19.13 , 0.027 , 0.686 , 0.657 , 16.69 , 0.358 , 0.533 , 0.597 , 15.16 , 0.043 , 1.092 , 0.156 , 0.048 , 0.180 , 0.055 , 0.180 , 0.055 , 0.411 , 0.125 ] ] if __name__ == <str> :      import sqlite3 conn = sqlite3 . connect ( <str> ) curs = conn . cursor ( ) curs . execute ( ) for indice , material in enumerate ( Accesorios_Tuberia ) :          query = <str> del material [ 4 ] del material [ 1 ] material . insert ( 0 , indice + 1 ) curs . execute ( query + str ( tuple ( material ) ) )  conn . commit ( ) conn . close ( )   