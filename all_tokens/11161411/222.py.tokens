from math import exp from unittest import TestCase from lib import unidades from lib . meos import MEoS class iC4 ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 225.5 ) Tc = unidades . Temperature ( 407.81 ) Pc = unidades . Pressure ( 3629.0 , <str> ) M = 58.1222 Tt = unidades . Temperature ( 113.73 ) Tb = unidades . Temperature ( 261.401 ) f_acent = 0.184 momentoDipolar = unidades . DipoleMoment ( 0.132 , <str> ) id = 5 _Tr = unidades . Temperature ( 390.355535 ) _rhor = unidades . Density ( 228.302484 ) _w = 0.178714317 Fi1 = { <str> : [ 1 , 3.05956619 ] , <str> : [ 0 , 1 ] , <str> : [ 11.60865546 , - 5.29450411 ] , <str> : [ 4.94641014 , 4.09475197 , 15.6632824 , 9.73918122 ] , <str> : [ 0.9512779015 , 2.3878958853 , 4.3469042691 , 10.3688586351 ] } Fi2 = { <str> : [ 1 , 3.06714 ] , <str> : [ 0 , 1 ] , <str> : [ 20.413726078 , - 94.467620036 ] , <str> : [ ] , <str> : [ ] , <str> : [ 8.97575 , 25.1423 ] , <str> : [ 1.074673199 , 4.671261865 ] , <str> : [ 5.25156 , 16.1388 ] , <str> : [ 0.485556021 , 2.19158348 ] } Fi3 = { <str> : [ 1 , 3.059347 ] , <str> : [ - 6.026745 , - 5.035251 ] , <str> : [ 0 , 1 ] , <str> : [ 4.940314 , 4.090139 , 9.739581 , 15.68832 ] , <str> : [ 0.9508183 , 2.383449 , 10.38655 , 4.347095 ] } CP4 = { <str> : - 1.7231723278e1 , <str> : [ 1.7027919006e7 , - 4.7269724737e5 , 4.7301406581e3 , 5.8491344291e-2 , 8.9440351886e-6 , - 1.8274599197e-8 ] , <str> : [ - 3 , - 2 , - 1 , 1 , 2 , 3 ] , <str> : [ - 1.9283021962e1 ] , <str> : [ 3000 ] } CP5 = { <str> : 4.06714 , <str> : [ ] , <str> : [ ] , <str> : [ ] , <str> : [ ] , <str> : [ 8.97575 , 25.1423 ] , <str> : [ 438.27 , 1905.02 ] , <str> : [ 5.25156 , 16.1388 ] , <str> : [ 198.018 , 893.765 ] } CP6 = { <str> : 0.397893 / 8.3143 * 58.124 , <str> : [ 0.412501e-2 / 8.3143 * 58.124 , - 0.196195e-6 / 8.3143 * 58.124 , 0.380185e-8 / 8.3143 * 58.124 , - 0.523950e-11 / 8.3143 * 58.124 ] , <str> : [ 1 , 2 , 3 , 4 ] , <str> : [ ] , <str> : [ ] } buecker = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 650.0 , <str> : 35000.0 , <str> : 12.9 , <str> : [ 0.20686820727966e1 , - 0.36400098615204e1 , 0.51968754427244 , 0.17745845870123 , - 0.12361807851599 , 0.45145314010528e-1 , 0.30476479965980e-1 ] , <str> : [ 1 , 1 , 1 , 2 , 3 , 4 , 4 ] , <str> : [ 0.50 , 1.00 , 1.50 , 0.00 , 0.50 , 0.50 , 0.75 ] , <str> : [ 0.75508387706302 , - 0.85885381015629 , 0.36324009830684e-1 , - 0.01954879945055 , - 0.44452392904960e-2 , 0.46410763666460e-2 , - 0.71444097992825e-1 , - 0.80765060030713e-1 , 0.15560460945053 , 0.20318752160332e-2 , - 0.10624883571689 , 0.39807690546305e-1 , 0.16371431292386e-1 , 0.53212200682628e-3 , - 0.78681561156387e-2 , - 0.30981191888963e-2 ] , <str> : [ 1 , 1 , 2 , 7 , 8 , 8 , 1 , 2 , 3 , 3 , 4 , 5 , 5 , 10 , 2 , 6 ] , <str> : [ 2.00 , 2.50 , 2.50 , 1.50 , 1.00 , 1.50 , 4.00 , 7.00 , 3.00 , 7.00 , 3.00 , 1.00 , 6.00 , 0.00 , 6.00 , 13.00 ] , <str> : [ 1 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 3 , 3 ] , <str> : [ 1 ] * 16 , <str> : [ - 0.42276036810382e-1 , - 0.53001044558079e-2 ] , <str> : [ 1 , 2 ] , <str> : [ 2. , 0. ] , <str> : [ 10 , 10 ] , <str> : [ 150 , 200 ] , <str> : [ 1.16 , 1.13 ] , <str> : [ 0.85 , 1. ] } younglove = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.31434 , <str> : 58.125 , <str> : 113.55 , <str> : 407.85 , <str> : 3640 , <str> : 3.86 , <str> : CP4 , <str> : { <str> : 300 , <str> : 101.325 , <str> : 17896.45 , <str> : 295.48 } , <str> : 113.55 , <str> : 600.0 , <str> : 35000.0 , <str> : 12.89 , <str> : [ None , 0.1307325972e-1 , 0.3927802742 , - 0.3185427394e2 , 0.7608825192e4 , - 0.1753919859e7 , - 0.2090019755e-2 , 8.959557971 , - 0.6816710130e4 , - 0.1111271045e7 , 0.3248737572e-3 , - 1.046526456 , 0.6536598969e3 , 0.3726503734e-1 , 0.8553649395e1 , 0.2109987236e4 , - 0.1401267363e1 , 0.5213089327e-1 , - 0.1925026382e2 , 0.7640067895 , 0.3425854273e7 , - 0.3373475924e9 , 0.1180683444e6 , 0.1529683738e10 , 0.3323837416e4 , 0.6423169487e5 , 0.3891706042e2 , - 0.1494755736e7 , - 0.1720240173e-1 , 0.2894195375e3 , 0.2005086329e-2 , - 0.4448393005 , 0.8028488415e2 ] } GERG = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi2 , <str> : <str> , <str> : Tt , <str> : 575.0 , <str> : 35000.0 , <str> : 12.9 , <str> : [ 0.10429331589100e1 , - 0.28184272548892e1 , 0.86176232397850 , - 0.10613619452487 , 0.98615749302134e-1 , 0.23948208682322e-3 ] , <str> : [ 1 , 1 , 1 , 2 , 3 , 7 ] , <str> : [ 0.25 , 1.125 , 1.5 , 1.375 , 0.25 , 0.875 ] , <str> : [ 0.30330004856950 , - 0.041598156135099 , - 0.29991937470058 , - 0.080369342764109 , - 0.029761373251151 , 0.013059630303140 ] , <str> : [ 2 , 5 , 1 , 4 , 3 , 4 ] , <str> : [ 0.625 , 1.75 , 3.625 , 3.625 , 14.5 , 12. ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 ] , <str> : [ 1 ] * 6 } miyamoto = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : 58.1222 , <str> : 407.817 , <str> : 224.36 / 58.1222 , <str> : Fi3 , <str> : <str> , <str> : 113.56 , <str> : 573.0 , <str> : 35000.0 , <str> : 12.9 , <str> : [ 2.892737e-1 , - 1.342570 , - 7.976713e-3 , 2.025793e-1 , - 4.241612e-2 , 2.617971e-3 , 5.068955e-5 , - 1.144596e-6 ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 5 , 8 , 8 ] , <str> : [ - 0.25 , 1.5 , - 0.75 , 0 , 1.25 , 1.5 , 0.5 , 2.5 ] , <str> : [ - 1.930153 , 1.982609 , 2.076533e-3 , - 4.958752e-3 , 1.377372e-3 , - 1.582662e-1 , - 4.961892e-2 , 9.451030e-4 , - 3.037276e-2 , - 1.382675e-2 , 8.876254e-5 ] , <str> : [ 3 , 3 , 8 , 5 , 6 , 1 , 5 , 7 , 2 , 3 , 15 ] , <str> : [ 1.5 , 1.75 , - 0.25 , 3 , 3 , 4 , 2 , - 1 , 2 , 19 , 5 ] , <str> : [ 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 3 ] , <str> : [ 1 ] * 11 } shortSpan = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.31451 , <str> : CP5 , <str> : <str> , <str> : 58.123 , <str> : 407.817 , <str> : 224.36 / 58.123 , <str> : 113.55 , <str> : 750.0 , <str> : 100000.0 , <str> : 12.89 , <str> : [ 0.10429332e1 , - 0.28184273e1 , 0.86176232 , - 0.10613619 , 0.986157490e-1 , 0.23948209e-3 ] , <str> : [ 1 , 1 , 1 , 2 , 3 , 7 ] , <str> : [ 0.25 , 1.125 , 1.5 , 1.375 , 0.25 , 0.875 ] , <str> : [ 0.30330005 , - 0.41598156e-1 , - 0.29991937 , - 0.80369343e-1 , - 0.29761373e-1 , 0.1305963e-1 ] , <str> : [ 2 , 5 , 1 , 4 , 3 , 4 ] , <str> : [ 0.625 , 1.75 , 3.625 , 3.625 , 14.5 , 12. ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 ] , <str> : [ 1 ] * 6 } polt = { <str> : <str> , <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.3143 , <str> : CP6 , <str> : <str> , <str> : 120.0 , <str> : 498.0 , <str> : 35000.0 , <str> : 12.89 , <str> : [ - 0.958589873652 , 0.818846326211 , - 0.115814967179 , 0.345513148715 , - 0.168751721524e1 , 0.936693300209 , - 0.106644545724e1 , 0.980958295776e-1 , 0.495941129005 , - 0.261313404262 , 0.485109471188 , - 0.177275820736 , - 0.209415485311e-1 , 0.788178884079e-1 , - 0.102751671767 , 0.178645875838e-1 ] , <str> : [ 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 4 , 4 , 5 ] , <str> : [ 3 , 4 , 5 , 0 , 1 , 2 , 3 , 4 , 0 , 1 , 2 , 0 , 1 , 0 , 1 , 1 ] , <str> : [ 0.958589873652 , - 0.818846326211 , 0.115814967179 , 0.537585249054 , - 0.71942446879 , 0.245830118086 ] , <str> : [ 0 , 0 , 0 , 2 , 2 , 2 ] , <str> : [ 3 , 4 , 5 , 3 , 4 , 5 ] , <str> : [ 2 ] * 6 , <str> : [ 1.0071072 ] * 6 } sun = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 620.0 , <str> : 800000.0 , <str> : 40. , <str> : [ 1.18083775 , 9.46903331e-1 , - 2.90618044 , 8.51346220e-2 , 2.79868503e-4 , - 1.68266335e-1 ] , <str> : [ 1 , 1 , 1 , 3 , 7 , 2 ] , <str> : [ 1.5 , 0.25 , 1.25 , 0.25 , 0.875 , 1.375 ] , <str> : [ - 2.01202825e-1 , - 3.32570120e-2 , 2.42967225e-1 , - 4.20931100e-3 , - 0.224528572 , - 1.41307663e-2 , - 5.93401702e-2 , - 2.27862942e-2 ] , <str> : [ 1 , 1 , 2 , 5 , 1 , 1 , 4 , 2 ] , <str> : [ 0 , 2.375 , 2. , 2.125 , 3.5 , 6.5 , 4.75 , 12.5 ] , <str> : [ 1 , 1 , 1 , 1 , 2 , 2 , 2 , 3 ] , <str> : [ 1 ] * 8 } eq = buecker , younglove , GERG , miyamoto , shortSpan , polt , sun _PR = [ - 0.1838 , - 15.4885 ] _surface = { <str> : [ - 0.01639 , 0.06121 ] , <str> : [ 2.102 , 1.304 ] } _dielectric = { <str> : 1 , <str> : [ 20.534 , 0.020 ] , <str> : [ 126.25 , 52.91 ] , <str> : [ - 7501.4 , - 2672.9 ] , <str> : 106.1 , <str> : 1.9 } _melting = { <str> : 1 , <str> : buecker [ <str> ] , <str> : Tt , <str> : 575.0 , <str> : Tt , <str> : 0.0219 , <str> : 1 , <str> : [ 1.95363716e9 ] , <str> : [ 6.12 ] } _vapor_Pressure = { <str> : 3 , <str> : [ - 6.85093103 , 1.36543198 , - 1.32542691 , - 2.56190994 ] , <str> : [ 1 , 1.5 , 2.5 , 4.5 ] } _liquid_Density = { <str> : 1 , <str> : [ 2.04025104 , 0.850874089 , - 0.479052281 , 0.348201252 ] , <str> : [ 0.355 , 1 , 4 / 3 , 7 / 3 ] } _vapor_Density = { <str> : 3 , <str> : [ - 2.12933323 , - 2.93790085 , - 0.89441086 , - 3.46343707 ] , <str> : [ 0.355 , 5 / 6 , 19 / 6 , 26 / 6 ] } visco0 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 0 , <str> : <str> , <str> : 407.81 , <str> : 2.961503647e-1 / 225.5 * M / 1e3 , <str> : [ - 1.9572881e1 , 2.035770736e2 , - 8.714522319e2 , 1.964871902e3 , - 2.486422559e3 , 1.700542778e3 , - 4.9777979e2 , 6.560977477 , - 6.455286496e-2 ] , <str> : [ 0 , - 0.25 , - 0.5 , - 0.75 , - 1 , - 1.25 , - 1.5 , - 2.5 , - 5.5 ] , <str> : 407.81 , <str> : 225.5 , <str> : [ 2.871640981e1 , - 1.636506531e1 , 7.67015053 , - 5.790243964e1 , 3.891832708e1 , 2.730660102e1 , - 1.658899499e1 , 2.246568982e-1 , - 2.343800854e-1 , 4.328758428e-2 ] , <str> : [ 0 , 3 , 4 , 0 , 1 , 0 , 1 , 4 , 4 , 2 ] , <str> : [ 2 , 2 , 2 , 2.5 , 2.5 , 3 , 3 , 3 , 5 , 8 ] , <str> : [ 2.75e-1 , 5.5e-1 ] , <str> : [ 5 , 50 ] , <str> : [ 30 , 100 ] , <str> : <str> } def _mu0 ( self , T ) :          Tc = 407.81 tau = Tc / T npf = 1.032954077e3 n00 = 1.6520217e3 n10 = 1.95822722e1 n20 = 2.055051549e3 muo = npf / tau ** 0.5 / ( n00 * tau ** 0.5 / Tc ** 0.5 + n10 + n20 * exp ( - ( Tc / tau ) ** ( 1 / 3 ) ) ) return muo  def _mur ( self , rho , T , fase ) :          if rho :              tau = 407.81 / T delta = rho / 225.5 mur = tau ** 0.5 / delta ** ( 2 / 3 ) * 1.693411655e-10 * ( delta ** 5.6 * tau ) ** 4  else :              mur = 0  return mur  visco1 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 1 , <str> : 307.55 , <str> : 0.46445 , <str> : 0.021357 , <str> : [ 0.53583008 , - 0.45629630 , 0.049911282 ] , <str> : 307.55 , <str> : [ - 19.572881 , 219.73999 , - 1015.3226 , 2471.01251 , - 3375.1717 , 2491.6597 , - 787.26086 , 14.085455 , - 0.34664158 ] , <str> : [ 0 , - 0.25 , - 0.5 , - 0.75 , - 1 , - 1.25 , - 1.5 , - 2.5 , - 5.5 ] , <str> : 407.817 , <str> : 3.86 * M , <str> : 1 , <str> : [ 103.511763411 , - 312.670896234 , 145.253750239 , - 210.649894193 , 386.269696509 , - 214.963015527 , 112.58036092 , - 223.242033154 , 119.114788598 , - 18.19097459 , 36.0438957232 , - 21.3960184050 ] , <str> : [ 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 , 0 , 1 , 2 ] , <str> : [ 2 , 2 , 2 , 3 , 3 , 3 , 4 , 4 , 4 , 5 , 5 , 5 ] , <str> : 1940.3760699 , <str> : 2.33859774637 , <str> : [ 1.00596672174 ] , <str> : [ - 0.5 ] } visco2 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 2 , <str> : 2 , <str> : 418.0 , <str> : 0.509217 , <str> : [ 1.687838652 , 0.0 , 1.40 , 407.85 ] , <str> : [ - 0.2055498053e2 , 0.1357076181e4 , 0.1893774336e2 , - 0.1822277344e5 , - 0.4599387773e-2 , 0.6305247065e2 , 0.1282253921e5 ] , <str> : 3.86 } _viscosity = visco0 , visco1 , visco2 thermo0 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 407.82 , <str> : 1 , <str> : [ - 2.37901e-3 , 1.06601e-2 , 2.15811e-2 ] , <str> : [ 0 , 1 , 2 ] , <str> : 407.82 , <str> : 3.86 * M , <str> : 1 , <str> : [ - 4.11789e-2 , 4.76346e-2 , 1.46805e-1 , - 1.28445e-1 , - 1.19190e-1 , 1.07565e-1 , 4.10226e-2 , - 3.85968e-2 , - 4.88704e-3 , 5.20901e-3 ] , <str> : [ 0 , - 1 ] * 5 , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 5 , 5 ] , <str> : 3 , <str> : 0.63 , <str> : 1.239 , <str> : 1.03 , <str> : 0.194e-9 , <str> : 0.0496 , <str> : 0.657661e-9 , <str> : 611.73 } thermo1 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 3 , <str> : 418.0 , <str> : [ 0.1449797353e1 , - 0.1685643887 ] , <str> : [ 0.4307008989e-2 , - 0.1509010974e1 , 0.4693712392e3 , - 0.3554280979e-3 , 0.1841552874 , - 0.3892338766e2 , - 0.9354624917e-1 , 0.7114330590e1 ] , <str> : 2 , <str> : 407.85 , <str> : 3.86 * 58.125 , <str> : [ 0.0034718 , 10.1207 , 0.466392 , 1.00344 ] , <str> : 9.10218e-10 } _thermal = thermo0 , thermo1  class Test ( TestCase ) :      def test_buecker ( self ) :          st = iC4 ( T = 114 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 8 ) , 0.00000002 ) self . assertEqual ( round ( st . Liquido . rho , 5 ) , 740.08373 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 713.59 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 3.195 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.175 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 1.690 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 1997.42 ) self . assertEqual ( round ( st . Gas . rho , 7 ) , 0.0000015 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , - 233.11 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , 1.020 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 0.738 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 0.881 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 139.53 ) st = iC4 ( T = 150 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0.000024 ) self . assertEqual ( round ( st . Liquido . rho , 3 ) , 706.038 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 650.69 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 2.716 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.251 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 1.805 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 1714.39 ) self . assertEqual ( round ( st . Gas . rho , 5 ) , 0.00111 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , - 198.52 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , 0.299 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 0.894 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 1.037 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 157.76 ) st = iC4 ( T = 200 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0.003814 ) self . assertEqual ( round ( st . Liquido . rho , 3 ) , 657.706 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 556.44 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 2.175 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.363 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 1.968 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 1389.12 ) self . assertEqual ( round ( st . Gas . rho , 5 ) , 0.13378 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , - 142.03 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , - 0.103 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 1.095 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 1.241 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 179.38 ) st = iC4 ( T = 300 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 5 ) , 0.37000 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 548.32 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 338.17 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 1.299 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.690 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 2.442 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 810.25 ) self . assertEqual ( round ( st . Gas . rho , 4 ) , 9.6096 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , - 11.29 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , - 0.209 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 1.578 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 1.810 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 197.74 ) st = iC4 ( T = 400 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 3.1856 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 341.03 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , - 36.27 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 0.459 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 2.250 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 6.349 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 184.38 ) self . assertEqual ( round ( st . Gas . rho , 2 ) , 118.39 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , 81.59 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , - 0.164 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 2.354 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 7.555 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 128.90 ) st = iC4 ( T = 407 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 3.5801 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 276.83 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , 7.30 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 3 ) , - 0.354 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 2.465 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 42.319 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 116.97 ) self . assertEqual ( round ( st . Gas . rho , 2 ) , 173.46 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , 59.64 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 3 ) , - 0.225 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 2.575 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 61.185 ) self . assertEqual ( round ( st . Gas . w , 2 ) , 113.83 ) st = iC4 ( T = 115 , P = 1e5 ) self . assertEqual ( round ( st . rho , 2 ) , 739.18 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , - 711.91 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , - 711.78 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , - 3.1801 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 1.1769 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 1.6927 ) self . assertEqual ( round ( st . w , 2 ) , 1988.81 ) st = iC4 ( T = 320 , P = 5e5 ) self . assertEqual ( round ( st . rho , 3 ) , 12.322 ) self . assertEqual ( round ( st . u . kJkg , 3 ) , - 20.015 ) self . assertEqual ( round ( st . h . kJkg , 3 ) , 20.563 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , - 0.14464 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 1.6742 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 1.9171 ) self . assertEqual ( round ( st . w , 2 ) , 201.39 ) st = iC4 ( T = 330 , P = 1e6 ) self . assertEqual ( round ( st . rho , 2 ) , 508.12 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , - 263.45 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , - 261.48 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , - 1.0589 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 1.8167 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 2.6701 ) self . assertEqual ( round ( st . w , 2 ) , 644.33 ) st = iC4 ( T = 575 , P = 2e6 ) self . assertEqual ( round ( st . rho , 3 ) , 25.769 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , 537.11 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 614.72 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 1.0085 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 2.7190 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 2.9159 ) self . assertEqual ( round ( st . w , 2 ) , 280.39 ) st = iC4 ( T = 190 , P = 5e6 ) self . assertEqual ( round ( st . rho , 2 ) , 670.90 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , - 577.98 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , - 570.53 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , - 2.2856 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 1.3443 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 1.9257 ) self . assertEqual ( round ( st . w , 2 ) , 1477.48 ) st = iC4 ( T = 120 , P = 1e7 ) self . assertEqual ( round ( st . rho , 2 ) , 738.15 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , - 705.41 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , - 691.86 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , - 3.1247 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 1.2021 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 1.7037 ) self . assertEqual ( round ( st . w , 2 ) , 1969.38 ) st = iC4 ( T = 230 , P = 3e7 ) self . assertEqual ( round ( st . rho , 2 ) , 652.07 ) self . assertEqual ( round ( st . u . kJkg , 2 ) , - 510.55 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , - 464.54 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , - 1.9602 ) self . assertEqual ( round ( st . cv . kJkgK , 4 ) , 1.4740 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 2.0224 ) self . assertEqual ( round ( st . w , 2 ) , 1398.87 )  def test_younglove ( self ) :          kw = { <str> : <str> , <str> : 2 , <str> : 1 } st = iC4 ( T = 120 , P = 1e4 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 735.1 ) self . assertEqual ( round ( st . rhoM , 2 ) , 12.65 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , - 23160 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , - 23160 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 113.9 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 74.26 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 100.1 ) self . assertEqual ( round ( st . w , 0 ) , 1698 ) self . assertEqual ( round ( st . mu . muPas , - 1 ) , 6160 ) self . assertEqual ( round ( st . k , 3 ) , 0.116 ) st = iC4 ( T = 200 , P = 5e4 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 657.6 ) self . assertEqual ( round ( st . rhoM , 2 ) , 11.31 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , - 14600 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , - 14590 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 168.3 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 82.19 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 114.9 ) self . assertEqual ( round ( st . w , 0 ) , 1319 ) self . assertEqual ( round ( st . mu . muPas , 0 ) , 545 ) self . assertEqual ( round ( st . k , 3 ) , 0.135 ) st = iC4 ( T = 520 , P = 1e5 , ** kw ) self . assertEqual ( round ( st . rho , 3 ) , 1.350 ) self . assertEqual ( round ( st . rhoM , 5 ) , 0.02323 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 41570 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 45880 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 364.1 ) self . assertEqual ( round ( st . cvM . kJkmolK , 1 ) , 145.4 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 153.9 ) self . assertEqual ( round ( st . w , 1 ) , 279.4 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 12.8 ) self . assertEqual ( round ( st . k , 4 ) , 0.0452 ) st = iC4 ( T = 300 , P = 101325 , ** kw ) self . assertEqual ( round ( st . rho , 3 ) , 2.423 ) self . assertEqual ( round ( st . rhoM , 5 ) , 0.04169 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 15470 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 17900 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 295.5 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 89.80 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 99.19 ) self . assertEqual ( round ( st . w , 1 ) , 212.1 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 7.56 ) self . assertEqual ( round ( st . k , 4 ) , 0.0161 ) st = iC4 ( T = 250 , P = 2e5 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 606.4 ) self . assertEqual ( round ( st . rhoM , 2 ) , 10.43 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , - 8563 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , - 8543 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 195.2 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 90.00 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 127.2 ) self . assertEqual ( round ( st . w , 0 ) , 1070 ) self . assertEqual ( round ( st . mu . muPas , 0 ) , 263 ) self . assertEqual ( round ( st . k , 3 ) , 0.117 ) st = iC4 ( T = 600 , P = 3e5 , ** kw ) self . assertEqual ( round ( st . rho , 3 ) , 3.523 ) self . assertEqual ( round ( st . rhoM , 5 ) , 0.06062 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 53820 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 58770 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 378.1 ) self . assertEqual ( round ( st . cvM . kJkmolK , 1 ) , 162.1 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 170.8 ) self . assertEqual ( round ( st . w , 1 ) , 298.3 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 14.6 ) self . assertEqual ( round ( st . k , 4 ) , 0.0578 ) st = iC4 ( T = 330 , P = 5e5 , ** kw ) self . assertEqual ( round ( st . rho , 2 ) , 11.77 ) self . assertEqual ( round ( st . rhoM , 4 ) , 0.2024 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 17780 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 20250 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 290.4 ) self . assertEqual ( round ( st . cvM . kJkmolK , 1 ) , 100.4 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 113.8 ) self . assertEqual ( round ( st . w , 1 ) , 206.9 ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 8.61 ) self . assertEqual ( round ( st . k , 4 ) , 0.0200 ) st = iC4 ( T = 320 , P = 8e5 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 522.3 ) self . assertEqual ( round ( st . rhoM , 3 ) , 8.986 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , 1074 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , 1163 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 229.1 ) self . assertEqual ( round ( st . cvM . kJkmolK , 1 ) , 105.0 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 151.7 ) self . assertEqual ( round ( st . w , 1 ) , 692.0 ) self . assertEqual ( round ( st . mu . muPas , 0 ) , 120 ) self . assertEqual ( round ( st . k , 4 ) , 0.0866 ) st = iC4 ( T = 460 , P = 1e6 , ** kw ) self . assertEqual ( round ( st . rho , 2 ) , 16.26 ) self . assertEqual ( round ( st . rhoM , 4 ) , 0.2798 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 32750 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 36330 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 325.9 ) self . assertEqual ( round ( st . cvM . kJkmolK , 1 ) , 132.6 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 143.7 ) self . assertEqual ( round ( st . w , 1 ) , 249.2 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 11.9 ) self . assertEqual ( round ( st . k , 4 ) , 0.0371 ) st = iC4 ( T = 372 , P = 2e6 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 432.9 ) self . assertEqual ( round ( st . rhoM , 3 ) , 7.448 ) self . assertEqual ( round ( st . uM . kJkmol , 0 ) , 9576 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , 9844 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 253.7 ) self . assertEqual ( round ( st . cvM . kJkmolK , 1 ) , 119.3 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 193.0 ) self . assertEqual ( round ( st . w , 1 ) , 388.4 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 66.1 ) self . assertEqual ( round ( st . k , 4 ) , 0.0674 ) st = iC4 ( T = 400 , P = 3e6 , ** kw ) self . assertEqual ( round ( st . rho , 2 ) , 96.31 ) self . assertEqual ( round ( st . rhoM , 3 ) , 1.657 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 22000 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 23810 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 289.0 ) self . assertEqual ( round ( st . cvM . kJkmolK , 1 ) , 130.2 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 250.2 ) self . assertEqual ( round ( st . w , 1 ) , 145.1 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 13.9 ) st = iC4 ( T = 438 , P = 4e6 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 103.9 ) self . assertEqual ( round ( st . rhoM , 3 ) , 1.788 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 26780 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 29010 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 300.0 ) self . assertEqual ( round ( st . cvM . kJkmolK , 1 ) , 135.9 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 199.2 ) self . assertEqual ( round ( st . w , 1 ) , 173.6 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 15.3 ) self . assertEqual ( round ( st . k , 4 ) , 0.0413 ) st = iC4 ( T = 200 , P = 5e6 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 661.5 ) self . assertEqual ( round ( st . rhoM , 2 ) , 11.38 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , - 14720 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , - 14290 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 167.6 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 82.21 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 114.4 ) self . assertEqual ( round ( st . w , 0 ) , 1352 ) self . assertEqual ( round ( st . mu . muPas , 0 ) , 577 ) self . assertEqual ( round ( st . k , 3 ) , 0.137 ) st = iC4 ( T = 440 , P = 6e6 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 255.1 ) self . assertEqual ( round ( st . rhoM , 3 ) , 4.389 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 22760 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 24130 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 287.2 ) self . assertEqual ( round ( st . cvM . kJkmolK , 1 ) , 139.4 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 298.3 ) self . assertEqual ( round ( st . w , 1 ) , 172.8 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 27.8 ) self . assertEqual ( round ( st . k , 4 ) , 0.0589 ) st = iC4 ( T = 200 , P = 7e6 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 663.0 ) self . assertEqual ( round ( st . rhoM , 2 ) , 11.41 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , - 14770 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , - 14160 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 167.4 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 82.24 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 114.2 ) self . assertEqual ( round ( st . w , 0 ) , 1364 ) self . assertEqual ( round ( st . mu . muPas , 0 ) , 589 ) self . assertEqual ( round ( st . k , 3 ) , 0.137 ) st = iC4 ( T = 530 , P = 8e6 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 148.0 ) self . assertEqual ( round ( st . rhoM , 3 ) , 2.546 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 38730 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 41870 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 322.8 ) self . assertEqual ( round ( st . cvM . kJkmolK , 1 ) , 152.7 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 192.8 ) self . assertEqual ( round ( st . w , 1 ) , 231.4 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 20.2 ) self . assertEqual ( round ( st . k , 4 ) , 0.0594 ) st = iC4 ( T = 420 , P = 1e7 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 405.0 ) self . assertEqual ( round ( st . rhoM , 3 ) , 6.968 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 16310 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 17750 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 270.9 ) self . assertEqual ( round ( st . cvM . kJkmolK , 1 ) , 129.2 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 186.4 ) self . assertEqual ( round ( st . w , 1 ) , 411.3 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 57.5 ) self . assertEqual ( round ( st . k , 4 ) , 0.0667 ) st = iC4 ( T = 560 , P = 2e7 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 303.1 ) self . assertEqual ( round ( st . rhoM , 3 ) , 5.215 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 39260 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 43090 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 319.4 ) self . assertEqual ( round ( st . cvM . kJkmolK , 1 ) , 157.9 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 195.7 ) self . assertEqual ( round ( st . w , 1 ) , 380.8 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 37.4 ) self . assertEqual ( round ( st . k , 4 ) , 0.0772 ) st = iC4 ( T = 600 , P = 3.5e7 , ** kw ) self . assertEqual ( round ( st . rho , 1 ) , 358.6 ) self . assertEqual ( round ( st . rhoM , 3 ) , 6.170 ) self . assertEqual ( round ( st . uM . kJkmol , - 1 ) , 44210 ) self . assertEqual ( round ( st . hM . kJkmol , - 1 ) , 49880 ) self . assertEqual ( round ( st . sM . kJkmolK , 1 ) , 326.6 ) self . assertEqual ( round ( st . cvM . kJkmolK , 1 ) , 165.6 ) self . assertEqual ( round ( st . cpM . kJkmolK , 1 ) , 194.4 ) self . assertEqual ( round ( st . w , 1 ) , 532.1 ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 48.0 ) self . assertEqual ( round ( st . k , 4 ) , 0.0857 )  def test_shortSpan ( self ) :          st = iC4 ( T = 700 , rho = 200 , eq = <str> ) self . assertEqual ( round ( st . cp0 . kJkgK , 4 ) , 3.2393 ) self . assertEqual ( round ( st . P . MPa , 3 ) , 19.108 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 3.5575 ) st2 = iC4 ( T = 750 , rho = 100 , eq = <str> ) self . assertEqual ( round ( st2 . h . kJkg - st . h . kJkg , 2 ) , 210.32 ) self . assertEqual ( round ( st2 . s . kJkgK - st . s . kJkgK , 5 ) , 0.37469 )  def test_herrmann ( self ) :          st = iC4 ( T = 115 , rho = 739 ) mu = st . _Viscosity ( 739 , 115 , None ) self . assertEqual ( round ( mu . muPas , 3 ) , 8255.646 ) self . assertEqual ( round ( iC4 ( T = 300 , rho = 0 ) . mu . muPas , 6 ) , 7.539691 ) self . assertEqual ( round ( iC4 ( T = 300 , rho = 1 ) . mu . muPas , 6 ) , 7.528194 ) self . assertEqual ( round ( iC4 ( T = 300 , rho = 9 ) . mu . muPas , 6 ) , 7.454569 ) self . assertEqual ( round ( iC4 ( T = 300 , rho = 550 ) . mu . muPas , 4 ) , 148.1347 ) self . assertEqual ( round ( iC4 ( T = 300 , rho = 625 ) . mu . muPas , 4 ) , 310.3424 ) self . assertEqual ( round ( iC4 ( T = 400 , rho = 1 ) . mu . muPas , 6 ) , 9.889178 ) self . assertEqual ( round ( iC4 ( T = 400 , rho = 118 ) . mu . muPas , 5 ) , 13.52154 ) self . assertEqual ( round ( iC4 ( T = 400 , rho = 345 ) . mu . muPas , 5 ) , 41.45875 ) self . assertEqual ( round ( iC4 ( T = 400 , rho = 560 ) . mu . muPas , 4 ) , 159.6867 ) self . assertEqual ( round ( iC4 ( T = 407.81 , rho = 225.5 ) . mu . muPas , 5 ) , 23.45602 ) self . assertEqual ( round ( iC4 ( T = 500 , rho = 1 ) . mu . muPas , 5 ) , 12.15232 ) self . assertEqual ( round ( iC4 ( T = 500 , rho = 100 ) . mu . muPas , 5 ) , 15.45786 ) self . assertEqual ( round ( iC4 ( T = 500 , rho = 500 ) . mu . muPas , 4 ) , 102.1956 ) self . assertEqual ( round ( iC4 ( T = 650 , rho = 0 ) . mu . muPas , 5 ) , 15.39019 ) self . assertEqual ( round ( iC4 ( T = 650 , rho = 1 ) . mu . muPas , 5 ) , 15.40515 ) self . assertEqual ( round ( iC4 ( T = 650 , rho = 100 ) . mu . muPas , 5 ) , 19.01606 ) self . assertEqual ( round ( iC4 ( T = 650 , rho = 420 ) . mu . muPas , 5 ) , 63.72888 )    