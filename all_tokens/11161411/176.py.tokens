from unittest import TestCase from lib import unidades from lib . meos import MEoS class Novec649 ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 606.805248 ) Tc = unidades . Temperature ( 441.81 ) Pc = unidades . Pressure ( 1.869 , <str> ) M = 316.0444 Tt = unidades . Temperature ( 165 ) Tb = unidades . Temperature ( 322.202 ) f_acent = 0.471 momentoDipolar = unidades . DipoleMoment ( 0.36 , <str> ) Fi1 = { <str> : [ 1 , 29.8 ] , <str> : [ 0 , 1 ] , <str> : [ - 30.6610503233 , 6.8305296372 ] , <str> : [ 29.8 ] , <str> : [ 1940 / Tc ] } mclinden = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> <str> , <str> : <str> <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.3144621 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 500.0 , <str> : 50000.0 , <str> : 6.24 , <str> : [ 0.05623648 , 2.973616 , - 6.126970 , 3.440240 , 1.451737 , - 2.837857 , 0.2077767 ] , <str> : [ 4 , 1 , 1 , 1 , 2 , 2 , 3 ] , <str> : [ 1 , 0.25 , 0.793 , 1.16 , 0.75 , 1.09 , 0.75 ] , <str> : [ 2.168307 , - 2.124648 , - 1.296704 ] , <str> : [ 2 , 1 , 2 ] , <str> : [ 1.3 , 2.25 , 1.9 ] , <str> : [ 1 , 2 , 2 ] , <str> : [ 1 ] * 3 , <str> : [ - 1.010569 , 2.701505 , 0.8167202 , - 1.814579 , 0.2075389 , - 1.009347 , - 0.04848043 ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 , 1 ] , <str> : [ 0.88 , 1.63 , 1.3 , 2.0 , 1.15 , 1.66 , 1.5 ] , <str> : [ 0.32 , 1.32 , 1.35 , 1.48 , 0.51 , 1.30 , 5.15 ] , <str> : [ 0.12 , 0.83 , 0.19 , 0.95 , 0.1 , 0.11 , 65.0 ] , <str> : [ 1.10 , 1.04 , 1.15 , 0.9 , 0.8 , 1.2 , 1.19 ] , <str> : [ 1.16 , 0.793 , 1.13 , 0.527 , 1.19 , 0.83 , 0.82 ] } eq = mclinden , _vapor_Pressure = { <str> : 3 , <str> : [ - 8.4411 , 2.711 , - 3.6354 , - 5.3872 , - 8.1641 ] , <str> : [ 1.0 , 1.5 , 2.2 , 4.4 , 15 ] } _liquid_Density = { <str> : 1 , <str> : [ 1.5545 , 1.149 , 0.51565 ] , <str> : [ 0.297 , 0.7 , 4.4 ] } _vapor_Density = { <str> : 2 , <str> : [ - 1.6073 , - 5.8095 , - 17.824 , - 61.012 , - 151.3 ] , <str> : [ 0.291 , 0.82 , 2.45 , 5.5 , 12 ] }  class Test ( TestCase ) :      def test_mclinden ( self ) :          st = Novec649 ( T = 250 , rhom = 5.6 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 11.459869 ) self . assertEqual ( round ( st . cvM . JmolK , 3 ) , 277.136 ) self . assertEqual ( round ( st . cpM . JmolK , 3 ) , 341.656 ) self . assertEqual ( round ( st . w , 3 ) , 716.250 ) st = Novec649 ( T = 400 , rhom = 4 ) self . assertEqual ( round ( st . P . MPa , 7 ) , 2.9272365 ) self . assertEqual ( round ( st . cvM . JmolK , 3 ) , 308.183 ) self . assertEqual ( round ( st . cpM . JmolK , 3 ) , 386.271 ) self . assertEqual ( round ( st . w , 3 ) , 245.654 ) st = Novec649 ( T = 442 , rhom = 1.92 ) self . assertEqual ( round ( st . P . MPa , 7 ) , 1.8757729 ) self . assertEqual ( round ( st . cvM . JmolK , 3 ) , 351.688 ) self . assertEqual ( round ( st . cpM . JmolK , 1 ) , 45430.0 ) self . assertEqual ( round ( st . w , 4 ) , 37.0299 ) st = Novec649 ( T = 250 , rhom = 0.001 ) self . assertEqual ( round ( st . P . MPa , 10 ) , 0.0020718017 ) self . assertEqual ( round ( st . cvM . JmolK , 3 ) , 254.272 ) self . assertEqual ( round ( st . cpM . JmolK , 3 ) , 262.742 ) self . assertEqual ( round ( st . w , 4 ) , 82.1676 ) st = Novec649 ( T = 450 , rhom = 4.6 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 42.305705 ) self . assertEqual ( round ( st . cvM . JmolK , 3 ) , 319.294 ) self . assertEqual ( round ( st . cpM . JmolK , 3 ) , 365.304 ) self . assertEqual ( round ( st . w , 3 ) , 512.603 )    