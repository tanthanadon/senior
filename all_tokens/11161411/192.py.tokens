from unittest import TestCase from lib import unidades from lib . meos import MEoS class R1233zd ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 480.219392 ) Tc = unidades . Temperature ( 439.6 ) Pc = unidades . Pressure ( 3623.7 , <str> ) M = 130.4944 Tt = unidades . Temperature ( 195.15 ) Tb = unidades . Temperature ( 291.47 ) f_acent = 0.305 momentoDipolar = unidades . DipoleMoment ( 1.44 , <str> ) CP1 = { <str> : 4.0 , <str> : [ ] , <str> : [ ] , <str> : [ 11.765 , 8.6848 ] , <str> : [ 630 , 2230 ] } mondejar = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.3144621 , <str> : CP1 , <str> : <str> , <str> : Tt , <str> : 550.0 , <str> : 100000.0 , <str> : 11.41 , <str> : [ 0.0478487 , 1.60644 , - 2.27161 , - 0.530687 , 0.169641 ] , <str> : [ 4 , 1 , 1 , 2 , 3 ] , <str> : [ 1. , 0.26 , 1.02 , 0.7 , 0.4 ] , <str> : [ - 1.85458 , - 0.321916 , 0.636411 , - 0.121482 , - 0.0262755 ] , <str> : [ 1 , 3 , 2 , 2 , 7 ] , <str> : [ 1.46 , 2.3 , 0.66 , 2.7 , 1.19 ] , <str> : [ 2 , 2 , 1 , 2 , 1 ] , <str> : [ 1 ] * 5 , <str> : [ 2.37362 , - 0.901771 , - 0.455962 , - 0.602941 , - 0.0594311 ] , <str> : [ 1 , 1 , 3 , 2 , 2 ] , <str> : [ 1.62 , 1.13 , 1.7 , 1.35 , 1.5 ] , <str> : [ 0.748 , 1.473 , 1.39 , 0.86 , 1.8 ] , <str> : [ 1.29 , 1.61 , 0.8 , 1.34 , 0.49 ] , <str> : [ 0.89 , 1.13 , 0.7 , 0.91 , 1.2 ] , <str> : [ 0.508 , 0.366 , 0.38 , 0.773 , 1.17 ] , <str> : [ ] } eq = mondejar , _vapor_Pressure = { <str> : 3 , <str> : [ - 7.6021 , 2.3265 , - 1.9771 , - 4.8451 , - 4.8762 ] , <str> : [ 1.0 , 1.5 , 2.0 , 4.3 , 14.0 ] } _liquid_Density = { <str> : 1 , <str> : [ 2.13083 , 0.583568 , 0.247871 , 0.472173 ] , <str> : [ 0.355 , 0.9 , 3.5 , 8.0 ] } _vapor_Density = { <str> : 2 , <str> : [ - 3.0152 , - 6.5621 , - 19.427 , - 62.650 , - 181.64 ] , <str> : [ 0.397 , 1.2 , 3.1 , 6.6 , 15.0 ] } thermo0 = { <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 439.6 , <str> : 1 , <str> : [ - 0.140033e-1 , 0.378160e-1 , - 0.245832e-2 ] , <str> : [ 0 , 1 , 2 ] , <str> : 439.6 , <str> : 480.219 , <str> : 1 , <str> : [ 0.862816e-2 , 0.914709e-3 , - 0.208988e-1 , - 0.407914e-2 , 0.511968e-1 , 0.845668e-2 , - 0.349076e-1 , - 0.108985e-1 , 0.975727e-2 , 0.538262e-2 , - 0.926484e-3 , - 0.806009e-3 ] , <str> : [ 0 , - 1 , 0 , - 1 , 0 , - 1 , 0 , - 1 , 0 , - 1 , 0 , - 1 ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 5 , 5 , 6 , 6 ] , <str> : 3 , <str> : 0.63 , <str> : 1.239 , <str> : 1.02 , <str> : 0.213e-9 , <str> : 0.059 , <str> : 0.598e-9 , <str> : 1.5 * 439.6 } _thermal = thermo0 ,  class Test ( TestCase ) :      def test_Perkins ( self ) :          st = R1233zd ( T = 300 , rho = 0 ) self . assertEqual ( round ( st . P . MPa , 2 ) , 0 ) self . assertEqual ( round ( st . k . WmK , 6 ) , 0.010659 ) st = R1233zd ( T = 300 , rho = 5.4411 ) self . assertEqual ( round ( st . P . MPa , 2 ) , 0.10 ) self . assertEqual ( round ( st . k . WmK , 6 ) , 0.010766 ) st = R1233zd ( T = 300 , rho = 1308.8 ) self . assertEqual ( round ( st . P . MPa , 2 ) , 20.02 ) self . assertEqual ( round ( st . k . WmK , 6 ) , 0.091409 ) st = R1233zd ( T = 445 , rho = 0 ) self . assertEqual ( round ( st . P . MPa , 2 ) , 0 ) self . assertEqual ( round ( st . k . WmK , 6 ) , 0.021758 ) st = R1233zd ( T = 445 , rho = 168.52 ) self . assertEqual ( round ( st . P . MPa , 2 ) , 3.00 ) self . assertEqual ( round ( st . k . WmK , 6 ) , 0.026044 )    