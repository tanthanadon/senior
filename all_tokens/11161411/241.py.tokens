from unittest import TestCase from lib import unidades from lib . meos import MEoS class Benzene ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 304.7922436 ) Tc = unidades . Temperature ( 562.02 ) Pc = unidades . Pressure ( 4894 , <str> ) M = 78.11184 Tt = unidades . Temperature ( 278.674 ) Tb = unidades . Temperature ( 353.22 ) f_acent = 0.211 momentoDipolar = unidades . DipoleMoment ( 0.0 , <str> ) id = 40 Fi1 = { <str> : [ 1 , 2.94645 ] , <str> : [ 0 , 1 ] , <str> : [ - 0.6740687105 , 2.5560188958 ] , <str> : [ 7.36374 , 18.6490 , 4.01834 ] , <str> : [ 4116 / Tc , 1511 / Tc , 630 / Tc ] } CP2 = { <str> : - 0.478176 / 8.3143 * 78.108 , <str> : [ 0.618649e-2 / 8.3143 * 78.108 , - 0.380363e-5 / 8.3143 * 78.108 , 0.699648e-9 / 8.3143 * 78.108 , 0.42661e-13 / 8.3143 * 78.108 ] , <str> : [ 1 , 2 , 3 , 4 ] , <str> : [ ] , <str> : [ ] } thol = { <str> : <str> , <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 725 , <str> : 500000.0 , <str> : 11.45 , <str> : [ 0.03513062 , 2.229707 , - 3.100459 , - 0.5763224 , 0.2504179 ] , <str> : [ 4 , 1 , 1 , 2 , 3 ] , <str> : [ 1 , 0.3 , 0.744 , 1.174 , 0.68 ] , <str> : [ - 0.7049091 , - 0.1393433 , 0.8319673 , - 0.3310741 , - 0.02793578 ] , <str> : [ 1 , 3 , 2 , 2 , 7 ] , <str> : [ 2.5 , 3.67 , 1.26 , 2.6 , 0.95 ] , <str> : [ 2 , 2 , 1 , 2 , 1 ] , <str> : [ 1. ] * 5 , <str> : [ 0.7087408 , - 0.3723906 , - 0.06267414 , - 0.86295 ] , <str> : [ 1 , 1 , 3 , 3 ] , <str> : [ 1 , 2.47 , 3.35 , 0.75 ] , <str> : [ 1.032 , 1.423 , 1.071 , 14.35 ] , <str> : [ 1.867 , 1.766 , 1.824 , 297.5 ] , <str> : [ 1.1180 , 0.6392 , 0.6536 , 1.1640 ] , <str> : [ 0.7289 , 0.9074 , 0.7655 , 0.8711 ] , <str> : [ ] } polt = { <str> : <str> , <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.3143 , <str> : CP2 , <str> : <str> , <str> : 278.7 , <str> : 635.0 , <str> : 78000.0 , <str> : 11.45 , <str> : [ - 0.918572178424 , 0.155357491575e1 , - 0.356149241161 , 0.817273664265 , - 0.331303917534e1 , 0.335336626528e1 , - 0.256976312022e1 , 0.427304812515 , 0.406483484297 , - 0.329744378187 , 0.208907540720 , 0.777471199254e-1 , - 0.202621443063 , - 0.148580350700e-1 , 0.503167715817e-1 , 0.293012717053e-2 ] , <str> : [ 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 4 , 4 , 5 ] , <str> : [ 3 , 4 , 5 , 0 , 1 , 2 , 3 , 4 , 0 , 1 , 2 , 0 , 1 , 0 , 1 , 1 ] , <str> : [ 0.918572178424 , - 0.155357491575e1 , 0.356149241161 , - 0.447029533153e-1 , 0.957712367542 , - 0.114688433057e1 ] , <str> : [ 0 , 0 , 0 , 2 , 2 , 2 ] , <str> : [ 3 , 4 , 5 , 3 , 4 , 5 ] , <str> : [ 2 ] * 6 , <str> : [ 0.95481 ] * 6 } sun = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 620.0 , <str> : 800000.0 , <str> : 40. , <str> : [ 1.76284970 , 1.02610647 , - 3.74263321 , 9.57682041e-2 , 2.59179321e-4 , - 1.03082188e-1 ] , <str> : [ 1 , 1 , 1 , 3 , 7 , 2 ] , <str> : [ 1.5 , 0.25 , 1.25 , 0.25 , 0.875 , 1.375 ] , <str> : [ 1.07359246e-1 , - 1.12562310e-1 , 3.18737987e-1 , - 3.07549016e-2 , - 3.25082386e-1 , 2.28099159e-2 , - 7.07431076e-2 , - 1.96809158e-2 ] , <str> : [ 1 , 1 , 2 , 5 , 1 , 1 , 4 , 2 ] , <str> : [ 0 , 2.375 , 2. , 2.125 , 3.5 , 6.5 , 4.75 , 12.5 ] , <str> : [ 1 , 1 , 1 , 1 , 2 , 2 , 2 , 3 ] , <str> : [ 1 ] * 8 } eq = thol , polt , sun _surface = { <str> : [ 0.07298 , - 0.0007802 , - 0.0001756 ] , <str> : [ 1.232 , 0.8635 , 0.3065 ] } _vapor_Pressure = { <str> : 3 , <str> : [ - 0.71661e1 , 0.21551e1 , - 0.20297e1 , - 0.40668e1 , 0.38092 ] , <str> : [ 1.0 , 1.5 , 2.2 , 4.8 , 6.2 ] } _liquid_Density = { <str> : 1 , <str> : [ 0.18160e2 , - 0.56879e2 , 0.87478e2 , - 0.64365e2 , 0.18500e2 ] , <str> : [ 0.534 , 0.686 , 0.84 , 1.0 , 1.2 ] } _vapor_Density = { <str> : 2 , <str> : [ - 3.1147 , - 4.6689 , - 16.161 , - 146.5 , 518.87 , - 827.72 ] , <str> : [ 0.419 , 1.12 , 2.8 , 7.3 , 10 , 12 ] } visco0 = { <str> : <str> , <str> : { <str> : <str> <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 1 , <str> : 0.021357 , <str> : 412 , <str> : 0.54 , <str> : [ 0.234018 , - 0.476136 , 0 , - 0.015269 ] , <str> : 412 , <str> : [ - 19.572881 , 219.73999 , - 1015.3226 , 2471.0125 , - 3375.1717 , 2491.6597 , - 787.26086 , 14.085455 , - 0.34664158 ] , <str> : [ 0 , - 0.25 , - 0.5 , - 0.75 , - 1 , - 1.25 , - 1.5 , - 2.5 , - 5.5 ] , <str> : <str> } def _mur ( self , rho , T , fase ) :          Tr = T / self . Tc rhor = rho / self . rhoc c = [ - 9.98945 , 86.0626 , 2.74872 , 1.11130 , - 1 , - 134.133 , - 352.473 , 6.60989 , 88.4174 ] F = c [ 0 ] * rhor ** 2 + c [ 1 ] * rhor / ( c [ 2 ] + c [ 3 ] * Tr + c [ 4 ] * rhor ) + ( c [ 5 ] * rhor + c [ 6 ] * rhor ** 2 ) / ( c [ 7 ] + c [ 8 ] * rhor ** 2 ) mur = rhor ** ( 2 / 3 ) * Tr ** 0.5 * F return mur  _viscosity = visco0 , thermo0 = { <str> : <str> , <str> : { <str> : <str> <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 562.02 , <str> : 1e-3 , <str> : [ 101.404 , - 521.44 , 868.266 ] , <str> : [ 0 , 1 , 2 ] , <str> : [ 1 , 9.714 , 1.467 ] , <str> : [ 0 , 1 , 2 ] , <str> : 562.02 , <str> : 304.792 , <str> : 1 , <str> : [ 2.82489e-2 , - 7.73415e-2 , 7.14001e-2 , - 2.36798e-2 , 3.00875e-3 , - 1.19268e-2 , 8.33389e-2 , - 8.98176e-2 , 3.63025e-2 , - 4.90052e-3 ] , <str> : [ 0 , 0 , 0 , 0 , 0 , - 1 , - 1 , - 1 , - 1 , - 1 ] , <str> : [ 1 , 2 , 3 , 4 , 5 , 1 , 2 , 3 , 4 , 5 ] , <str> : 3 , <str> : 0.63 , <str> : 1.239 , <str> : 1.02 , <str> : 2.16e-10 , <str> : 0.0569 , <str> : 6.2e-10 , <str> : 843 } _thermal = thermo0 ,  class Test ( TestCase ) :      def test_viscoAvgeri ( self ) :          self . assertEqual ( round ( Benzene ( T = 300 , rho = 0 ) . mu . muPas , 3 ) , 7.625 ) self . assertEqual ( round ( Benzene ( T = 400 , rho = 0 ) . mu . muPas , 3 ) , 10.102 ) self . assertEqual ( round ( Benzene ( T = 550 , rho = 0 ) . mu . muPas , 3 ) , 13.790 ) self . assertEqual ( round ( Benzene ( T = 300 , rho = 875 ) . mu . muPas , 2 ) , 608.53 ) self . assertEqual ( round ( Benzene ( T = 400 , rho = 760 ) . mu . muPas , 2 ) , 211.74 ) self . assertEqual ( round ( Benzene ( T = 550 , rho = 500 ) . mu . muPas , 3 ) , 60.511 ) st = Benzene ( T = 280 , x = 0 ) self . assertEqual ( round ( st . Liquido . rho , 3 ) , 892.701 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 1 ) , 795.3 ) st = Benzene ( T = 400 , x = 0 ) self . assertEqual ( round ( st . Liquido . rho , 3 ) , 758.649 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 1 ) , 209.9 ) st = Benzene ( T = 540 , x = 0 ) self . assertEqual ( round ( st . Liquido . rho , 3 ) , 508.838 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 2 ) , 62.26 )  def test_thermoAssael ( self ) :          self . assertEqual ( round ( Benzene ( T = 290 , rho = 890 ) . k . mWmK , 2 ) , 147.65 ) self . assertEqual ( round ( Benzene ( T = 500 , rho = 2 ) . k . mWmK , 3 ) , 30.174 ) self . assertEqual ( round ( Benzene ( T = 500 , rho = 32 ) . k . mWmK , 3 ) , 32.209 ) self . assertEqual ( round ( Benzene ( T = 500 , rho = 800 ) . k . mWmK , 2 ) , 141.22 ) self . assertEqual ( round ( Benzene ( T = 570 , rho = 1.7 ) . k . mWmK , 3 ) , 37.763 )    