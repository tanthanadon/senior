import re from PyQt5 import QtWidgets from lib . crude import Z_list from UI . widgets import LineConfig , Entrada_con_unidades class Widget ( QtWidgets . QWidget ) :      def __init__ ( self , config = None , parent = None ) :          super ( Widget , self ) . __init__ ( parent ) layout = QtWidgets . QGridLayout ( self ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 1 , 1 ) self . method = QtWidgets . QComboBox ( ) for Z in Z_list :              name = Z . __name__ [ 2 : ] . replace ( <str> , <str> ) year = re . search ( <str> , Z . __doc__ ) . group ( 0 ) doc = <str> % ( name , year ) self . method . addItem ( doc )  layout . addWidget ( self . method , 1 , 2 ) layout . addWidget ( QtWidgets . QLabel ( <str> ) , 2 , 1 ) self . Prmin = Entrada_con_unidades ( float , width = 60 , decimales = 1 ) layout . addWidget ( self . Prmin , 2 , 2 ) layout . addWidget ( QtWidgets . QLabel ( <str> ) , 3 , 1 ) self . Prmax = Entrada_con_unidades ( float , width = 60 , decimales = 1 ) layout . addWidget ( self . Prmax , 3 , 2 ) layout . addWidget ( QtWidgets . QLabel ( <str> ) , 4 , 1 ) self . Tr = QtWidgets . QLineEdit ( ) layout . addWidget ( self . Tr , 4 , 2 ) self . lineconfig = LineConfig ( <str> , QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( self . lineconfig , 5 , 1 , 1 , 2 ) self . cruxconfig = LineConfig ( <str> , QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( self . cruxconfig , 6 , 1 , 1 , 2 ) layout . addItem ( QtWidgets . QSpacerItem ( 10 , 0 , QtWidgets . QSizePolicy . Expanding , QtWidgets . QSizePolicy . Expanding ) , 10 , 1 , 1 , 3 ) if config and config . has_section ( <str> ) :              self . method . setCurrentIndex ( config . getint ( <str> , <str> ) ) self . Prmin . setValue ( config . getfloat ( <str> , <str> ) ) self . Prmax . setValue ( config . getfloat ( <str> , <str> ) ) self . Tr . setText ( config . get ( <str> , <str> ) ) self . lineconfig . setConfig ( config , <str> ) self . cruxconfig . setConfig ( config , <str> )   def value ( self , config ) :          if not config . has_section ( <str> ) :              config . add_section ( <str> )  config . set ( <str> , <str> , str ( self . method . currentIndex ( ) ) ) config . set ( <str> , <str> , str ( self . Prmin . value ) ) config . set ( <str> , <str> , str ( self . Prmax . value ) ) config . set ( <str> , <str> , self . Tr . text ( ) ) config = self . lineconfig . value ( config , <str> ) config = self . cruxconfig . value ( config , <str> ) return config   class ConfigDialog ( QtWidgets . QDialog ) :      def __init__ ( self , config = None , parent = None ) :          super ( ConfigDialog , self ) . __init__ ( parent ) self . setWindowTitle ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout = QtWidgets . QVBoxLayout ( self ) self . widget = Widget ( config ) layout . addWidget ( self . widget ) self . buttonBox = QtWidgets . QDialogButtonBox ( QtWidgets . QDialogButtonBox . Cancel | QtWidgets . QDialogButtonBox . Ok ) self . buttonBox . accepted . connect ( self . accept ) self . buttonBox . rejected . connect ( self . reject ) layout . addWidget ( self . buttonBox )  def value ( self , config ) :          config = self . widget . value ( config ) return config    