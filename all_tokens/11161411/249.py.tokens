from unittest import TestCase from lib import unidades from lib . meos import MEoS class R152a ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 368. ) Tc = unidades . Temperature ( 386.411 ) Pc = unidades . Pressure ( 4516.75 , <str> ) M = 66.051 Tt = unidades . Temperature ( 154.56 ) Tb = unidades . Temperature ( 249.127 ) f_acent = 0.27521 momentoDipolar = unidades . DipoleMoment ( 2.262 , <str> ) id = 245 CP1 = { <str> : 3.354951 , <str> : [ 4.245301 / Tc , 3.735248 / Tc ** 2 , - 1.608254 / Tc ** 3 ] , <str> : [ 1 , 2 , 3 ] , <str> : [ ] , <str> : [ ] } Fi1 = { <str> : 8.314471 , <str> : [ 1 , - 1 ] , <str> : [ 0 , 1 , - 0.25 , - 2 , - 4 ] , <str> : [ 10.87227 , 6.839515 , - 20.78887 , - 0.6539092 , 0.03342831 ] , <str> : [ ] , <str> : [ ] } Fi2 = { <str> : [ 1 , - 1 ] , <str> : [ 0 , 1 , - 0.5 , 0.25 ] , <str> : [ - 9.508135074 , 6.812068779 , - 7.285916044 , 6.741130104 ] , <str> : [ 1.978152028 , 5.880826311 ] , <str> : [ 1.753741145 , 4.360150337 ] } Fi3 = { <str> : [ 1 , 0.0434935 ] , <str> : [ 0 , 1 , - 1 , - 2 , - 3 ] , <str> : [ - 5.969835 , 7.421932 , - 5.56713 , 0.436101 , - 0.0196281 ] , <str> : [ ] , <str> : [ ] } MBWR = { <str> : <str> , <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314471 , <str> : 386.411 , <str> : 4516.75 , <str> : 5.57145 , <str> : CP1 , <str> : <str> , <str> : Tt , <str> : 520.0 , <str> : 60000.0 , <str> : 18.07 , <str> : [ None , - 0.101623317192e-1 , 0.215677129618e1 , - 0.648581254334e2 , 0.122535596303e5 , - 0.206805988259e7 , - 0.379836507323e-3 , - 0.441333232984 , 0.158248874708e3 , 0.564062216256e6 , - 0.124115350431e-3 , 0.494972178825 , - 0.208058039834e3 , - 0.131403187106e-1 , 0.212083848812 , - 0.151263785082e3 , 0.311108025395e-1 , - 0.115280979645e-2 , 0.437040025765 , - 0.965596535032e-2 , - 0.242705525346e6 , - 0.518042519989e8 , - 0.119070545681e5 , 0.459333195257e9 , - 0.719317286511e2 , - 0.840102861460e4 , - 0.102910957390e1 , - 0.325913880841e5 , - 0.412362182230e-2 , 0.175102808144e1 , - 0.198636624640e-4 , - 0.421363036104e-2 , - 0.198696760653e1 ] } outcalt = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314471 , <str> : CP1 , <str> : <str> , <str> : Tt , <str> : 500.0 , <str> : 60000.0 , <str> : 18.07 , <str> : [ - 0.354657949982e1 , - 0.364631280620 , 0.333233335558e-1 , - 0.6809684351170 , 0.735212646801e1 , - 0.112473063838e2 , 0.549916715657e1 , - 0.240186327322e1 , - 0.709036447042e-1 , - 0.213200886814 , 0.197839736368 , 0.182494769909e1 , - 0.860546479693e-1 , 0.888137366540 , - 0.966127346370 , - 0.985223479324e-1 , 0.183419368472e-1 , - 0.338550204252e-1 , 0.124921101016e-1 , - 0.221056706423e-2 , 0.216879133161e-2 , - 0.233597690478e-3 ] , <str> : [ 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 3 , 3 , 3 , 4 , 5 , 5 , 6 , 7 , 7 , 8 ] , <str> : [ 3 , 4 , 5 , 0 , 0.5 , 1 , 2 , 3 , 0 , 1 , 2 , 3 , 0 , 1 , 2 , 1 , 2 , 3 , 2 , 2 , 3 , 3 ] , <str> : [ 0.354657949982e1 , 0.364631280620 , - 0.333233335558e-1 , 0.276133830254e1 , - 0.691185711880e-1 , - 0.333233335558e-1 , 0.782761327717 , - 0.345592855940e-1 , 0.137813531906 , 0.186173126153 , - 0.341119393297e-1 , 0.459378439687e-1 , 0.216470012607e-1 , - 0.852798483242e-2 , 0.620394038634e-2 , 0.185210290813e-2 , 0.101674662734e-2 , 0.124078807727e-2 ] , <str> : [ 0 , 0 , 0 , 2 , 2 , 2 , 4 , 4 , 4 , 6 , 6 , 6 , 8 , 8 , 8 , 10 , 10 , 10 ] , <str> : [ 3 , 4 , 5 , 3 , 4 , 5 , 3 , 4 , 5 , 3 , 4 , 5 , 3 , 4 , 5 , 3 , 4 , 5 ] , <str> : [ 2 ] * 18 , <str> : [ 1 ] * 18 } kim = { <str> : <str> , <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> <str> , <str> : <str> <str> } , <str> : 8.314471 , <str> : Fi3 , <str> : <str> , <str> : 386.4 , <str> : 4519. , <str> : 368 / M , <str> : 213 , <str> : 433 , <str> : 20000.0 , <str> : 18.07 , <str> : [ 3.27282477979913 , - 5.25887189160385 , 0.849951067158520 , - 0.326056649432851 , 0.147973856820353 , 0.463200609308586e-2 ] , <str> : [ 1 , 1 , 1 , 1 , 2 , 5 ] , <str> : [ 1 , 1.5 , 3 , 5 , 0.5 , 1 ] , <str> : [ - 0.184693035421790e-1 , - 0.529265795606284 , 1.39788588805247 , - 0.826528289800619 , 0.603238985406408 , 0.184020254678691e-9 , 0.198000633690890e-1 , 0.385227997762326e-1 , - 0.354915684935072e-1 , - 0.146266261800962e-3 , 0.385244461907819e-4 , - 0.930695615881793e-7 , 0.792443305748410e-2 , - 0.117773096693244e-1 , 0.780856661432880e-2 , - 0.335895387327679e-2 , - 0.905744836093298e-4 , 0.348630546773750e-3 , 0.167579895771929e-1 , - 0.159255383659542e-1 ] , <str> : [ 1.9 , 2.2 , 2.2 , 2.5 , 3.0 , 3.3 , 4.4 , 4.9 , 5.3 , 6.6 , 9.7 , 13.1 , 4.6 , 4.0 , 5.2 , 5.3 , 13.3 , 11.9 , 4.1 , 4.1 ] , <str> : [ 8.0 , 1.4 , 3.1 , 5.0 , 5.5 , 25.5 , 5.2 , 3.3 , 3.5 , 6.7 , 5.3 , 5.7 , 6.4 , 30.0 , 28.4 , 8.2 , 5.9 , 20.3 , 27.1 , 29.3 ] , <str> : [ 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 2 , 3 , 3 , 3 , 3 , 5 , 6 , 6 ] , <str> : [ 1 ] * 20 } tillner = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314471 , <str> : 66.051 , <str> : 386.41 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 435.0 , <str> : 30000.0 , <str> : 18.03 , <str> : [ 0.3552260 , - 0.1425660e1 , - 0.4631621e-1 , 0.6903546e-1 , 0.1975710e-1 , 0.7486977e-3 , 0.4642204e-3 ] , <str> : [ 1 , 1 , 1 , 1.5 , 3 , 6 , 6 ] , <str> : [ 0 , 1.5 , 3 , - 0.5 , - 0.5 , - 0.5 , 1.5 ] , <str> : [ - 0.2603396 , - 0.7624212e-1 , 0.2233522 , 0.1992515e-1 , 0.3449040 , - 0.4963849 , 0.1290719 , 0.9760790e-3 , 0.5066545e-2 , - 0.1402020e-1 , 0.5169918e-2 , 0.2679087e-3 ] , <str> : [ 1 , 1 , 3 , 4 , 1 , 1 , 1 , 8 , 2 , 3 , 5 , 6 ] , <str> : [ 3 , 4 , 3 , 2 , 4 , 5 , 6 , 5 , 12.5 , 25 , 20 , 25 ] , <str> : [ 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 3 , 3 , 3 , 3 ] , <str> : [ 1 ] * 12 } shortSpan = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.31451 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 600.0 , <str> : 100000.0 , <str> : 18.1 , <str> : [ 0.95702326 , - 2.3707196 , 0.18748463 , 0.063800843 , 1.6625977e-4 ] , <str> : [ 1 , 1 , 1 , 3 , 7 ] , <str> : [ 0.25 , 1.25 , 1.5 , 0.25 , 0.875 ] , <str> : [ 0.82208165e-1 , 0.57243518 , 0.39476701e-2 , - 0.23848654 , - 0.80711618e-1 , - 0.73103558e-1 , - 0.15538724e-1 ] , <str> : [ 1 , 2 , 5 , 1 , 1 , 4 , 2 ] , <str> : [ 2.375 , 2 , 2.125 , 3.5 , 6.5 , 4.75 , 12.5 ] , <str> : [ 1 , 1 , 1 , 2 , 2 , 2 , 3 ] , <str> : [ 1 ] * 12 } astina = { <str> : <str> , <str> : <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi2 , <str> : <str> , <str> : 66.05 , <str> : 386.41 , <str> : 4516 , <str> : 368 / 66.05 , <str> : Tt , <str> : 450.0 , <str> : 60000.0 , <str> : 18.04 , <str> : [ 1.753847317 , - 4.049760759 , - 2.277389257e-1 , 7.087751950e-1 , - 0.5528619502 , - 3.025046686e-2 , 0.1396289974 , 1.121238954e-4 ] , <str> : [ 1 , 1 , 1 , 2 , 2 , 3 , 3 , 4 ] , <str> : [ 0.5 , 1.125 , 2.875 , 0.875 , 1.875 , 0.5 , 1.875 , 4 ] , <str> : [ 1.181005890 , 1.535785579 , 7.468363045e-1 , - 1.252266405e-1 , - 3.898223986e-2 , - 7.260588801e-2 , - 2.659302250e-3 , 4.210849329e-3 , 2.015953966e-4 ] , <str> : [ 1 , 2 , 3 , 1 , 2 , 3 , 3 , 4 , 5 ] , <str> : [ 1.25 , 2 , 2.75 , 6 , 9 , 6 , 22 , 20 , 32 ] , <str> : [ 1 , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 3 ] , <str> : [ 1 ] * 9 } eq = MBWR , outcalt , kim , tillner , shortSpan , astina _surface = { <str> : [ 0.05808 ] , <str> : [ 1.2115 ] } _vapor_Pressure = { <str> : 3 , <str> : [ - 0.74821e1 , 0.21105e1 , - 0.20761e1 , - 0.35539e1 , 0.58004 ] , <str> : [ 1.0 , 1.5 , 2.2 , 4.8 , 6.2 ] } _liquid_Density = { <str> : 1 , <str> : [ 0.19914e2 , - 0.68624e2 , 0.99821e2 , - 0.77984e2 , 0.29913e2 ] , <str> : [ 0.56 , 0.76 , 0.95 , 1.2 , 1.4 ] } _vapor_Density = { <str> : 2 , <str> : [ - .33621e1 , - .85985e1 , - .2683e1 , - .2414e2 , - .43159e2 , - .28045e2 ] , <str> : [ 0.406 , 1.42 , 3.6 , 3.9 , 8.0 , 9.0 ] } visco0 = { <str> : <str> , <str> : { <str> : <str> <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 1 , <str> : 66.05 , <str> : 354.84 , <str> : 0.46115 , <str> : 0.2169614 / M ** 0.5 , <str> : [ 0.4425728 , - 0.5138403 , 0.1547566 , - 0.02821844 , 0.001578286 ] , <str> : 368 , <str> : 51.12 , <str> : [ - 0.139986563 , - 0.0737927 , 0.517924 , - 0.308875 , 0.108049 ] , <str> : [ 0 , 0 , 0 , 0 , 0 ] , <str> : [ 0 , 1 , 2 , 3 , 4 ] , <str> : [ - 0.408387 ] , <str> : [ 0 ] , <str> : [ 0 ] , <str> : [ 1 , - 2.91733 ] , <str> : [ 0 , 0 ] , <str> : [ 1 , 0 ] } _viscosity = visco0 , thermo0 = { <str> : <str> , <str> : { <str> : <str> <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 1 , <str> : 66.05 , <str> : 386.411 , <str> : 4520 , <str> : 1. , <str> : 1e-3 , <str> : [ - 14.942 , 0.0973283 ] , <str> : [ 0 , 1 ] , <str> : 1. , <str> : 368 , <str> : 1.155e-3 , <str> : [ 9.1809 , 11.8577 , - 5.4473 , 1.71379 ] , <str> : [ 0 , 0 , 0 , 0 ] , <str> : [ 1 , 2 , 3 , 4 ] , <str> : 3 , <str> : 0.63 , <str> : 1.239 , <str> : 1.03 , <str> : 1.894e-10 , <str> : 0.0487 , <str> : 4.37e-10 , <str> : 579.6165 } _thermal = thermo0 ,  class Test ( TestCase ) :      def test_Outcalt ( self ) :          st = R152a ( T = - 118 + 273.15 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0.000069 ) self . assertEqual ( round ( st . Liquido . rho , 1 ) , 1191.8 ) self . assertEqual ( round ( st . Gas . rho , 4 ) , 0.0036 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , 14.67 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , 419.73 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 4 ) , 0.1176 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 4 ) , 2.7284 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 0.998 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 0.574 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 1.480 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 0.700 ) self . assertEqual ( round ( st . Liquido . w , 1 ) , 1396.1 ) self . assertEqual ( round ( st . Gas . w , 1 ) , 154.3 ) st = R152a ( T = - 100 + 273.15 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0.000579 ) self . assertEqual ( round ( st . Liquido . rho , 1 ) , 1158.7 ) self . assertEqual ( round ( st . Gas . rho , 4 ) , 0.0266 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , 41.75 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , 432.59 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 4 ) , 0.2827 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 4 ) , 2.5399 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.030 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 0.613 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 1.518 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 0.740 ) self . assertEqual ( round ( st . Liquido . w , 1 ) , 1274.9 ) self . assertEqual ( round ( st . Gas . w , 1 ) , 162.0 ) st = R152a ( T = - 50 + 273.15 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0.027425 ) self . assertEqual ( round ( st . Liquido . rho , 1 ) , 1063.7 ) self . assertEqual ( round ( st . Gas . rho , 4 ) , 0.9936 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , 118.62 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , 470.40 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 4 ) , 0.6723 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 4 ) , 2.2487 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.042 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 0.738 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 1.567 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 0.877 ) self . assertEqual ( round ( st . Liquido . w , 1 ) , 1016.4 ) self . assertEqual ( round ( st . Gas . w , 1 ) , 179.5 ) st = R152a ( T = 273.15 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 0.263992 ) self . assertEqual ( round ( st . Liquido . rho , 1 ) , 959.1 ) self . assertEqual ( round ( st . Gas . rho , 4 ) , 8.3589 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , 200.00 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , 507.11 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 4 ) , 1.0000 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 4 ) , 2.1243 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.100 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 0.898 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 1.697 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 1.094 ) self . assertEqual ( round ( st . Liquido . w , 1 ) , 772.0 ) self . assertEqual ( round ( st . Gas . w , 1 ) , 187.4 ) st = R152a ( T = 50 + 273.15 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 1.177382 ) self . assertEqual ( round ( st . Liquido . rho , 1 ) , 830.8 ) self . assertEqual ( round ( st . Gas . rho , 4 ) , 37.0576 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , 290.50 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , 535.93 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 4 ) , 1.3003 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 4 ) , 2.0598 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.182 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 1.092 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 1.957 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 1.489 ) self . assertEqual ( round ( st . Liquido . w , 1 ) , 519.9 ) self . assertEqual ( round ( st . Gas . w , 1 ) , 178.9 ) st = R152a ( T = 100 + 273.15 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 3.505025 ) self . assertEqual ( round ( st . Liquido . rho , 1 ) , 618.5 ) self . assertEqual ( round ( st . Gas . rho , 4 ) , 145.7543 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , 403.59 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , 536.28 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 4 ) , 1.6151 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 4 ) , 1.9707 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.322 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 1.346 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 3.495 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 3.776 ) self . assertEqual ( round ( st . Liquido . w , 1 ) , 233.5 ) self . assertEqual ( round ( st . Gas . w , 1 ) , 143.1 ) st = R152a ( T = 112 + 273.15 , x = 0.5 ) self . assertEqual ( round ( st . P . MPa , 6 ) , 4.408087 ) self . assertEqual ( round ( st . Liquido . rho , 1 ) , 473.0 ) self . assertEqual ( round ( st . Gas . rho , 4 ) , 263.7988 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 2 ) , 451.59 ) self . assertEqual ( round ( st . Gas . h . kJkg , 2 ) , 506.12 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 4 ) , 1.7371 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 4 ) , 1.8787 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 3 ) , 1.422 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 3 ) , 1.458 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 3 ) , 22.908 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 3 ) , 31.032 ) self . assertEqual ( round ( st . Liquido . w , 1 ) , 139.1 ) self . assertEqual ( round ( st . Gas . w , 1 ) , 125.5 ) st = R152a ( T = - 100 + 273.15 , P = 1e4 ) self . assertEqual ( round ( st . rho , 1 ) , 1158.7 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 41.76 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 0.2827 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 1.030 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 1.518 ) self . assertEqual ( round ( st . w , 1 ) , 1274.9 ) st = R152a ( T = - 50 + 273.15 , P = 2e4 ) self . assertEqual ( round ( st . rho , 3 ) , 0.721 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 470.93 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 2.2903 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 0.734 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 0.869 ) self . assertEqual ( round ( st . w , 1 ) , 180.1 ) st = R152a ( T = 240 + 273.15 , P = 4e4 ) self . assertEqual ( round ( st . rho , 3 ) , 0.620 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 813.67 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 3.1512 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 1.362 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 1.488 ) self . assertEqual ( round ( st . w , 1 ) , 265.4 ) st = R152a ( T = - 35 + 273.15 , P = 6e4 ) self . assertEqual ( round ( st . rho , 3 ) , 2.063 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 481.84 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 2.2021 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 0.782 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 0.931 ) self . assertEqual ( round ( st . w , 1 ) , 183.2 ) st = R152a ( T = - 25 + 273.15 , P = 1e5 ) self . assertEqual ( round ( st . rho , 1 ) , 1013.2 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 158.48 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 0.8413 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 1.067 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 1.622 ) self . assertEqual ( round ( st . w , 1 ) , 894.3 ) st = R152a ( T = 50 + 273.15 , P = 101325 ) self . assertEqual ( round ( st . rho , 3 ) , 2.531 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 566.38 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 2.4397 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 0.963 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 1.100 ) self . assertEqual ( round ( st . w , 1 ) , 212.1 ) st = R152a ( T = - 10 + 273.15 , P = 2e5 ) self . assertEqual ( round ( st . rho , 1 ) , 981.3 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 183.17 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 0.9375 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 1.086 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 1.664 ) self . assertEqual ( round ( st . w , 1 ) , 821.2 ) st = R152a ( T = - 100 + 273.15 , P = 4e5 ) self . assertEqual ( round ( st . rho , 1 ) , 1159.0 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 42.00 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 0.2821 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 1.030 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 1.517 ) self . assertEqual ( round ( st . w , 1 ) , 1276.1 ) st = R152a ( T = 25 + 273.15 , P = 6e5 ) self . assertEqual ( round ( st . rho , 1 ) , 899.5 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 243.73 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 1.1519 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 1.138 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 1.800 ) self . assertEqual ( round ( st . w , 1 ) , 648.0 ) st = R152a ( T = 240 + 273.15 , P = 1e6 ) self . assertEqual ( round ( st . rho , 3 ) , 15.938 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 806.30 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 2.7350 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 1.369 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 1.519 ) self . assertEqual ( round ( st . w , 1 ) , 260.0 ) st = R152a ( T = 70 + 273.15 , P = 2e6 ) self . assertEqual ( round ( st . rho , 1 ) , 765.8 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 331.04 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 1.4188 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 1.225 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 2.171 ) self . assertEqual ( round ( st . w , 1 ) , 415.3 ) st = R152a ( T = 100 + 273.15 , P = 4e6 ) self . assertEqual ( round ( st . rho , 1 ) , 638.3 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 400.18 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 1.6038 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 1.309 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 3.008 ) self . assertEqual ( round ( st . w , 1 ) , 261.3 ) st = R152a ( T = 273.15 , P = 6e6 ) self . assertEqual ( round ( st . rho , 1 ) , 973.0 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 202.26 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 0.9865 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 1.102 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 1.667 ) self . assertEqual ( round ( st . w , 1 ) , 816.8 ) st = R152a ( T = - 100 + 273.15 , P = 1e7 ) self . assertEqual ( round ( st . rho , 1 ) , 1167.5 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 48.03 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 0.2693 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 1.040 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 1.509 ) self . assertEqual ( round ( st . w , 1 ) , 1306.2 ) st = R152a ( T = 200 + 273.15 , P = 2e7 ) self . assertEqual ( round ( st . rho , 1 ) , 541.5 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 586.81 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 1.9821 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 1.396 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 2.167 ) self . assertEqual ( round ( st . w , 1 ) , 327.7 ) st = R152a ( T = - 50 + 273.15 , P = 4e7 ) self . assertEqual ( round ( st . rho , 1 ) , 1111.4 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 142.13 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 0.6132 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 1.058 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 1.514 ) self . assertEqual ( round ( st . w , 1 ) , 1200.6 ) st = R152a ( T = 240 + 273.15 , P = 6e7 ) self . assertEqual ( round ( st . rho , 1 ) , 730.8 ) self . assertEqual ( round ( st . h . kJkg , 2 ) , 645.96 ) self . assertEqual ( round ( st . s . kJkgK , 4 ) , 1.9773 ) self . assertEqual ( round ( st . cv . kJkgK , 3 ) , 1.470 ) self . assertEqual ( round ( st . cp . kJkgK , 3 ) , 1.879 ) self . assertEqual ( round ( st . w , 1 ) , 599.3 )  def test_shortSpan ( self ) :          st = R152a ( T = 500 , rho = 500 , eq = <str> ) self . assertEqual ( round ( st . cp0 . kJkgK , 4 ) , 1.4632 ) self . assertEqual ( round ( st . P . MPa , 3 ) , 21.594 ) self . assertEqual ( round ( st . cp . kJkgK , 4 ) , 2.1580 ) st2 = R152a ( T = 600 , rho = 100 , eq = <str> ) self . assertEqual ( round ( st2 . h . kJkg - st . h . kJkg , 2 ) , 270.60 ) self . assertEqual ( round ( st2 . s . kJkgK - st . s . kJkgK , 5 ) , 0.60934 )  def test_astina ( self ) :          st = R152a ( T = 200 , P = 1e4 , eq = <str> ) self . assertEqual ( round ( st . rho , 2 ) , 1108.30 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 1.02563 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 1.53226 ) self . assertEqual ( round ( st . w , 2 ) , 1144.46 ) self . assertEqual ( round ( st . h . kJkg , 4 ) , 83.0731 ) self . assertEqual ( round ( st . s . kJkgK , 6 ) , 0.504046 ) st = R152a ( T = 250 , P = 1e5 , eq = <str> ) self . assertEqual ( round ( st . rho , 5 ) , 3.32533 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 0.85146 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 1.02093 ) self . assertEqual ( round ( st . w , 3 ) , 185.395 ) self . assertEqual ( round ( st . h . kJkg , 3 ) , 490.101 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , 2.17402 ) st = R152a ( T = 300 , P = 5e5 , eq = <str> ) self . assertEqual ( round ( st . rho , 4 ) , 14.9178 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 1.01270 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 1.25049 ) self . assertEqual ( round ( st . w , 3 ) , 190.307 ) self . assertEqual ( round ( st . h . kJkg , 3 ) , 528.281 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , 2.12554 ) st = R152a ( T = 250 , P = 1e6 , eq = <str> ) self . assertEqual ( round ( st . rho , 2 ) , 1011.40 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 1.06828 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 1.61778 ) self . assertEqual ( round ( st . w , 3 ) , 887.901 ) self . assertEqual ( round ( st . h . kJkg , 3 ) , 162.066 ) self . assertEqual ( round ( st . s . kJkgK , 6 ) , 0.852079 ) st = R152a ( T = 450 , P = 2e6 , eq = <str> ) self . assertEqual ( round ( st . rho , 4 ) , 39.2134 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 1.27176 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 1.47906 ) self . assertEqual ( round ( st . w , 3 ) , 230.750 ) self . assertEqual ( round ( st . h . kJkg , 3 ) , 703.818 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , 2.44002 ) st = R152a ( T = 450 , P = 3e6 , eq = <str> ) self . assertEqual ( round ( st . rho , 4 ) , 62.4333 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 1.29309 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 1.56254 ) self . assertEqual ( round ( st . w , 3 ) , 221.167 ) self . assertEqual ( round ( st . h . kJkg , 3 ) , 692.526 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , 2.37021 ) st = R152a ( T = 300 , P = 5e6 , eq = <str> ) self . assertEqual ( round ( st . rho , 3 ) , 910.768 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 1.14104 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 1.75988 ) self . assertEqual ( round ( st . w , 3 ) , 681.439 ) self . assertEqual ( round ( st . h . kJkg , 3 ) , 247.753 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , 1.14904 ) st = R152a ( T = 350 , P = 1.5e7 , eq = <str> ) self . assertEqual ( round ( st . rho , 3 ) , 829.854 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 1.22465 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 1.86556 ) self . assertEqual ( round ( st . w , 3 ) , 577.309 ) self . assertEqual ( round ( st . h . kJkg , 3 ) , 339.639 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , 1.39677 ) st = R152a ( T = 400 , P = 2.5e7 , eq = <str> ) self . assertEqual ( round ( st . rho , 3 ) , 764.468 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 1.30865 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 1.92116 ) self . assertEqual ( round ( st . w , 3 ) , 526.848 ) self . assertEqual ( round ( st . h . kJkg , 3 ) , 433.427 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , 1.61365 ) st = R152a ( T = 250 , P = 4e7 , eq = <str> ) self . assertEqual ( round ( st . rho , 2 ) , 1069.55 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 1.10283 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 1.54070 ) self . assertEqual ( round ( st . w , 2 ) , 1076.73 ) self . assertEqual ( round ( st . h . kJkg , 3 ) , 183.511 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , 0.78821 ) st = R152a ( T = 300 , P = 4.5e7 , eq = <str> ) self . assertEqual ( round ( st . rho , 3 ) , 999.404 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 1.17500 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 1.61174 ) self . assertEqual ( round ( st . w , 3 ) , 920.812 ) self . assertEqual ( round ( st . h . kJkg , 3 ) , 265.090 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , 1.06788 ) st = R152a ( T = 450 , P = 5e7 , eq = <str> ) self . assertEqual ( round ( st . rho , 3 ) , 782.051 ) self . assertEqual ( round ( st . cv . kJkgK , 5 ) , 1.40653 ) self . assertEqual ( round ( st . cp . kJkgK , 5 ) , 1.86403 ) self . assertEqual ( round ( st . w , 3 ) , 612.067 ) self . assertEqual ( round ( st . h . kJkg , 3 ) , 528.381 ) self . assertEqual ( round ( st . s . kJkgK , 5 ) , 1.76108 ) st = R152a ( T = 200 , x = 0.5 , eq = <str> ) self . assertEqual ( round ( st . P . MPa , 5 ) , 0.00608 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 1108.30 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 5 ) , 1.02563 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 5 ) , 1.53227 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 1144.44 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 4 ) , 83.0708 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 6 ) , 0.504052 ) self . assertEqual ( round ( st . Gas . rho , 6 ) , 0.243503 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 6 ) , 0.688696 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 6 ) , 0.822899 ) self . assertEqual ( round ( st . Gas . w , 3 ) , 172.126 ) self . assertEqual ( round ( st . Gas . h . kJkg , 3 ) , 452.530 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 5 ) , 2.35135 ) st = R152a ( T = 300 , x = 0.5 , eq = <str> ) self . assertEqual ( round ( st . P . MPa , 5 ) , 0.62958 ) self . assertEqual ( round ( st . Liquido . rho , 3 ) , 895.050 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 5 ) , 1.14163 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 5 ) , 1.80605 ) self . assertEqual ( round ( st . Liquido . w , 3 ) , 635.932 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 3 ) , 246.936 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 5 ) , 1.16245 ) self . assertEqual ( round ( st . Gas . rho , 4 ) , 19.5363 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 5 ) , 1.05165 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 5 ) , 1.34292 ) self . assertEqual ( round ( st . Gas . w , 3 ) , 184.955 ) self . assertEqual ( round ( st . Gas . h . kJkg , 3 ) , 523.189 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 5 ) , 2.08329 ) st = R152a ( P = 1e4 , x = 0.5 , eq = <str> ) self . assertEqual ( round ( st . T , 3 ) , 206.996 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 1095.05 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 5 ) , 1.02888 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 5 ) , 1.54024 ) self . assertEqual ( round ( st . Liquido . w , 2 ) , 1106.00 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 4 ) , 93.8198 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 6 ) , 0.556861 ) self . assertEqual ( round ( st . Gas . rho , 6 ) , 0.387819 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 6 ) , 0.709506 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 6 ) , 0.846608 ) self . assertEqual ( round ( st . Gas . w , 3 ) , 174.478 ) self . assertEqual ( round ( st . Gas . h . kJkg , 3 ) , 457.773 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 5 ) , 2.31513 ) st = R152a ( P = 2e6 , x = 0.5 , eq = <str> ) self . assertEqual ( round ( st . T , 3 ) , 345.817 ) self . assertEqual ( round ( st . Liquido . rho , 3 ) , 755.354 ) self . assertEqual ( round ( st . Liquido . cv . kJkgK , 5 ) , 1.23824 ) self . assertEqual ( round ( st . Liquido . cp . kJkgK , 5 ) , 2.22690 ) self . assertEqual ( round ( st . Liquido . w , 3 ) , 400.169 ) self . assertEqual ( round ( st . Liquido . h . kJkg , 3 ) , 336.806 ) self . assertEqual ( round ( st . Liquido . s . kJkgK , 5 ) , 1.43550 ) self . assertEqual ( round ( st . Gas . rho , 4 ) , 67.2945 ) self . assertEqual ( round ( st . Gas . cv . kJkgK , 5 ) , 1.25774 ) self . assertEqual ( round ( st . Gas . cp . kJkgK , 5 ) , 1.99694 ) self . assertEqual ( round ( st . Gas . w , 3 ) , 166.520 ) self . assertEqual ( round ( st . Gas . h . kJkg , 3 ) , 542.188 ) self . assertEqual ( round ( st . Gas . s . kJkgK , 5 ) , 2.02940 )  def test_kim ( self ) :          pass  def test_Krauss ( self ) :          st = R152a ( T = 240 , x = 0.5 , eq = <str> ) self . assertEqual ( round ( st . P . MPa , 5 ) , 0.06642 ) self . assertEqual ( round ( st . Liquido . rho , 1 ) , 1029.6 ) self . assertEqual ( round ( st . Gas . rho , 4 ) , 2.2736 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 1 ) , 364.8 ) self . assertEqual ( round ( st . Gas . mu . muPas , 2 ) , 8.09 ) self . assertEqual ( round ( st . Liquido . k . mWmK , 1 ) , 128.8 ) self . assertEqual ( round ( st . Gas . k . mWmK , 3 ) , 8.483 ) st = R152a ( T = 280 , x = 0.5 , eq = <str> ) self . assertEqual ( round ( st . P . MPa , 5 ) , 0.33558 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 943.16 ) self . assertEqual ( round ( st . Gas . rho , 3 ) , 10.550 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 1 ) , 198.1 ) self . assertEqual ( round ( st . Gas . mu . muPas , 3 ) , 9.606 ) self . assertEqual ( round ( st . Liquido . k . mWmK , 1 ) , 109.0 ) self . assertEqual ( round ( st . Gas . k . mWmK , 2 ) , 12.63 ) st = R152a ( T = 320 , x = 0.5 , eq = <str> ) self . assertEqual ( round ( st . P . MPa , 4 ) , 1.0883 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 839.97 ) self . assertEqual ( round ( st . Gas . rho , 3 ) , 34.202 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 1 ) , 128.3 ) self . assertEqual ( round ( st . Gas . mu . muPas , 2 ) , 11.20 ) self . assertEqual ( round ( st . Liquido . k . mWmK , 2 ) , 90.71 ) self . assertEqual ( round ( st . Gas . k . mWmK , 2 ) , 17.31 ) st = R152a ( T = 360 , x = 0.5 , eq = <str> ) self . assertEqual ( round ( st . P . MPa , 4 ) , 2.7024 ) self . assertEqual ( round ( st . Liquido . rho , 2 ) , 694.46 ) self . assertEqual ( round ( st . Gas . rho , 3 ) , 98.845 ) self . assertEqual ( round ( st . Liquido . mu . muPas , 2 ) , 76.74 ) self . assertEqual ( round ( st . Gas . mu . muPas , 2 ) , 13.87 ) self . assertEqual ( round ( st . Liquido . k . mWmK , 2 ) , 71.86 ) self . assertEqual ( round ( st . Gas . k . mWmK , 2 ) , 23.91 ) st = R152a ( T = 240 , P = 1e5 , eq = <str> ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 365.1 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 128.8 ) st = R152a ( T = 360 , P = 1e5 , eq = <str> ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 12.52 ) self . assertEqual ( round ( st . k . mWmK , 2 ) , 20.16 ) st = R152a ( T = 430 , P = 1e5 , eq = <str> ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 14.91 ) self . assertEqual ( round ( st . k . mWmK , 2 ) , 26.96 ) st = R152a ( T = 240 , P = 5e6 , eq = <str> ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 411.3 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 131.4 ) st = R152a ( T = 360 , P = 5e6 , eq = <str> ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 86.54 ) self . assertEqual ( round ( st . k . mWmK , 2 ) , 76.58 ) st = R152a ( T = 430 , P = 5e6 , eq = <str> ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 17.53 ) self . assertEqual ( round ( st . k . mWmK , 2 ) , 32.54 ) st = R152a ( T = 250 , P = 2e7 , eq = <str> ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 445.9 ) self . assertEqual ( round ( st . k . mWmK , 1 ) , 133.7 ) st = R152a ( T = 360 , P = 2e7 , eq = <str> ) self . assertEqual ( round ( st . mu . muPas , 1 ) , 123.9 ) self . assertEqual ( round ( st . k . mWmK , 2 ) , 92.37 ) st = R152a ( T = 430 , P = 2e7 , eq = <str> ) self . assertEqual ( round ( st . mu . muPas , 2 ) , 70.29 ) self . assertEqual ( round ( st . k . mWmK , 2 ) , 73.98 )    