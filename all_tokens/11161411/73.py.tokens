from functools import partial from PyQt5 import QtWidgets from lib . unidades import Pressure , Length , Power , VolFlow , Currency from tools . costIndex import CostData from equipment . parents import UI_equip from equipment . pump import Pump from UI import bombaCurva from UI . widgets import Entrada_con_unidades class UI_equipment ( UI_equip ) :      Equipment = Pump ( ) def __init__ ( self , equipment = None , parent = None ) :          super ( ) . __init__ ( Pump , entrada = False , salida = False , parent = parent ) self . curva = [ 0 , 0 , [ ] ] lyt = QtWidgets . QGridLayout ( self . tabCalculo ) lyt . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 1 , 1 ) self . Pout = Entrada_con_unidades ( Pressure ) self . Pout . valueChanged . connect ( partial ( self . cambiar_data , <str> ) ) lyt . addWidget ( self . Pout , 1 , 2 ) lyt . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 2 , 1 ) self . deltaP = Entrada_con_unidades ( Pressure ) self . deltaP . valueChanged . connect ( partial ( self . cambiar_data , <str> ) ) lyt . addWidget ( self . deltaP , 2 , 2 ) lyt . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 3 , 1 ) self . Carga = Entrada_con_unidades ( Length , <str> ) self . Carga . valueChanged . connect ( partial ( self . cambiar_data , <str> ) ) lyt . addWidget ( self . Carga , 3 , 2 ) lyt . addItem ( QtWidgets . QSpacerItem ( 10 , 10 , QtWidgets . QSizePolicy . Fixed , QtWidgets . QSizePolicy . Fixed ) , 4 , 1 , 1 , 2 ) self . usarCurva = QtWidgets . QCheckBox ( QtWidgets . QApplication . translate ( <str> , <str> ) ) self . usarCurva . toggled . connect ( self . usarCurvaToggled ) lyt . addWidget ( self . usarCurva , 5 , 1 , 2 , 2 ) lyt . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 7 , 1 ) self . rendimiento = Entrada_con_unidades ( float , min = 0 , max = 1 , spinbox = True , step = 0.01 ) self . rendimiento . valueChanged . connect ( partial ( self . cambiar_data , <str> ) ) lyt . addWidget ( self . rendimiento , 7 , 2 ) lyt . addItem ( QtWidgets . QSpacerItem ( 20 , 20 , QtWidgets . QSizePolicy . Expanding , QtWidgets . QSizePolicy . Expanding ) , 8 , 1 , 1 , 6 ) self . groupBox_Curva = QtWidgets . QGroupBox ( QtWidgets . QApplication . translate ( <str> , <str> ) ) self . groupBox_Curva . setEnabled ( False ) lyt . addWidget ( self . groupBox_Curva , 5 , 4 , 3 , 1 ) layout = QtWidgets . QGridLayout ( self . groupBox_Curva ) self . bottonCurva = QtWidgets . QPushButton ( QtWidgets . QApplication . translate ( <str> , <str> ) ) self . bottonCurva . clicked . connect ( self . bottonCurva_clicked ) layout . addWidget ( self . bottonCurva , 1 , 1 , 1 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 2 , 1 ) self . incognita = QtWidgets . QComboBox ( self . tabCalculo ) self . incognita . setToolTip ( QtWidgets . QApplication . translate ( <str> , <str> ) ) self . incognita . addItem ( QtWidgets . QApplication . translate ( <str> , <str> ) ) self . incognita . addItem ( QtWidgets . QApplication . translate ( <str> , <str> ) ) self . incognita . currentIndexChanged . connect ( partial ( self . cambiar_data , <str> ) ) layout . addWidget ( self . incognita , 2 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 3 , 1 ) self . diametro = Entrada_con_unidades ( float , spinbox = True , step = 0.1 , suffix = <str> ) self . diametro . valueChanged . connect ( partial ( self . cambiar_data , <str> ) ) layout . addWidget ( self . diametro , 3 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 4 , 1 ) self . velocidad = Entrada_con_unidades ( int , spinbox = True , step = 1 ) self . velocidad . valueChanged . connect ( partial ( self . cambiar_data , <str> ) ) layout . addWidget ( self . velocidad , 4 , 2 ) group = QtWidgets . QGroupBox ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout = QtWidgets . QGridLayout ( group ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 0 , 0 ) self . power = Entrada_con_unidades ( Power , retornar = False , readOnly = True ) layout . addWidget ( self . power , 0 , 1 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 0 , 4 ) self . PoutCalculada = Entrada_con_unidades ( Pressure , retornar = False ) self . PoutCalculada . setReadOnly ( True ) layout . addWidget ( self . PoutCalculada , 0 , 5 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 1 , 0 ) self . volflow = Entrada_con_unidades ( VolFlow , <str> , retornar = False ) self . volflow . setReadOnly ( True ) layout . addWidget ( self . volflow , 1 , 1 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 1 , 4 ) self . headCalculada = Entrada_con_unidades ( Length , retornar = False ) self . headCalculada . setReadOnly ( True ) layout . addWidget ( self . headCalculada , 1 , 5 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 2 , 0 ) self . rendimientoCalculado = Entrada_con_unidades ( float , width = 60 ) self . rendimientoCalculado . setReadOnly ( True ) layout . addWidget ( self . rendimientoCalculado , 2 , 1 ) layout . addItem ( QtWidgets . QSpacerItem ( 40 , 20 , QtWidgets . QSizePolicy . Expanding , QtWidgets . QSizePolicy . Minimum ) , 0 , 3 ) lyt . addWidget ( group , 9 , 1 , 1 , 6 ) lyt . addItem ( QtWidgets . QSpacerItem ( 20 , 20 , QtWidgets . QSizePolicy . Expanding , QtWidgets . QSizePolicy . Expanding ) , 10 , 1 , 1 , 6 ) lyt = QtWidgets . QGridLayout ( self . tabCostos ) lyt . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 1 , 1 ) self . tipo_bomba = QtWidgets . QComboBox ( ) for txt in self . Equipment . TEXT_BOMBA :              self . tipo_bomba . addItem ( txt )  self . tipo_bomba . currentIndexChanged . connect ( self . bomba_currentIndexChanged ) lyt . addWidget ( self . tipo_bomba , 1 , 2 ) lyt . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 2 , 1 ) self . tipo_centrifuga = QtWidgets . QComboBox ( ) for txt in self . Equipment . TEXT_CENTRIFUGA :              self . tipo_centrifuga . addItem ( txt )  self . tipo_centrifuga . currentIndexChanged . connect ( partial ( self . changeParamsCoste , <str> ) ) lyt . addWidget ( self . tipo_centrifuga , 2 , 2 ) lyt . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 3 , 1 ) self . material = QtWidgets . QComboBox ( ) for txt in self . Equipment . TEXT_MATERIAL :              self . material . addItem ( txt )  self . material . currentIndexChanged . connect ( partial ( self . changeParamsCoste , <str> ) ) lyt . addWidget ( self . material , 3 , 2 ) lyt . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 4 , 1 ) self . motor = QtWidgets . QComboBox ( ) for txt in self . Equipment . TEXT_MOTOR :              self . motor . addItem ( txt )  self . motor . currentIndexChanged . connect ( partial ( self . changeParamsCoste , <str> ) ) lyt . addWidget ( self . motor , 4 , 2 ) lyt . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 5 , 1 ) self . rpm = QtWidgets . QComboBox ( self . tabCostos ) for txt in self . Equipment . TEXT_RPM :              self . rpm . addItem ( txt )  self . rpm . currentIndexChanged . connect ( partial ( self . changeParamsCoste , <str> ) ) lyt . addWidget ( self . rpm , 5 , 2 ) self . Costos = CostData ( self . Equipment ) self . Costos . valueChanged . connect ( self . changeParamsCoste ) lyt . addWidget ( self . Costos , 6 , 1 , 2 , 4 ) lyt . addItem ( QtWidgets . QSpacerItem ( 20 , 20 , QtWidgets . QSizePolicy . Expanding , QtWidgets . QSizePolicy . Expanding ) , 7 , 1 , 1 , 4 ) group = QtWidgets . QGroupBox ( QtWidgets . QApplication . translate ( <str> , <str> ) ) lyt . addWidget ( group , 8 , 1 , 1 , 4 ) layout = QtWidgets . QGridLayout ( group ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 0 , 0 ) self . C_bomba = Entrada_con_unidades ( Currency , retornar = False ) self . C_bomba . setReadOnly ( True ) layout . addWidget ( self . C_bomba , 0 , 1 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 1 , 0 ) self . C_motor = Entrada_con_unidades ( Currency , retornar = False ) self . C_bomba . setReadOnly ( True ) layout . addWidget ( self . C_motor , 1 , 1 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 0 , 4 ) self . C_adq = Entrada_con_unidades ( Currency , retornar = False ) self . C_adq . setReadOnly ( True ) layout . addWidget ( self . C_adq , 0 , 5 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 1 , 4 ) self . C_inst = Entrada_con_unidades ( Currency , retornar = False ) self . C_inst . setReadOnly ( True ) layout . addWidget ( self . C_inst , 1 , 5 ) lyt . addItem ( QtWidgets . QSpacerItem ( 20 , 20 , QtWidgets . QSizePolicy . Fixed , QtWidgets . QSizePolicy . Fixed ) , 9 , 1 , 1 , 4 ) if equipment :              self . setEquipment ( equipment )   def cambiar_data ( self , parametro , valor ) :          if parametro == <str> :              self . Carga . clear ( ) self . deltaP . clear ( )  elif parametro == <str> :              self . Pout . clear ( ) self . Carga . clear ( )  else :              self . Pout . clear ( ) self . deltaP . clear ( )  self . changeParams ( parametro , valor )  def bomba_currentIndexChanged ( self , int ) :          self . tipo_centrifuga . setDisabled ( int ) self . changeParamsCoste ( <str> , int )  def usarCurvaToggled ( self , int ) :          self . groupBox_Curva . setEnabled ( int ) self . rendimiento . setReadOnly ( int ) self . changeParams ( <str> , int )  def bottonCurva_clicked ( self ) :          dialog = bombaCurva . Ui_bombaCurva ( self . Equipment . kwargs [ <str> ] , self ) if dialog . exec_ ( ) :              self . curva = dialog . curva self . diametro . setValue ( dialog . curva [ 0 ] ) self . velocidad . setValue ( dialog . curva [ 1 ] ) self . changeParams ( <str> , dialog . curva )    if __name__ == <str> :      import sys from lib . corriente import Corriente app = QtWidgets . QApplication ( sys . argv ) agua = Corriente ( T = 300 , P = 101325 , caudalMasico = 1 , fraccionMolar = [ 1. ] ) bomba = Pump ( entrada = agua , rendimiento = 0.75 , deltaP = 2001325 , tipo_bomba = 1 ) dialogBomba = UI_equipment ( equipment = bomba ) dialogBomba . show ( ) sys . exit ( app . exec_ ( ) )   