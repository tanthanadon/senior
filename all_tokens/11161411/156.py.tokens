from scipy . constants import R from lib . EoS . Cubic . PT import PT class PTV ( PT ) :      <str> __title__ = <str> __status__ = <str> __doi__ = { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , def _lib ( self , cmp , T ) :          if cmp . Tc != 0 and cmp . Pc != 0 and cmp . Vc != 0 :              Zc = cmp . Pc . kPa * cmp . Vc * cmp . M / R / cmp . Tc  else :              Zc = 0.329032 - 0.076799 * cmp . f_acent + 0.0211947 * cmp . f_acent ** 2  F = 0.46283 + 3.5823 * cmp . f_acent * Zc + 8.19417 * cmp . f_acent ** 2 * Zc ** 2 Omegaa = 0.66121 - 0.76105 * Zc Omegab = 0.02207 + 0.20868 * Zc Omegac = 0.57765 - 1.8708 * Zc alfa = ( 1 + F * ( 1 - ( T / cmp . Tc ) ** 0.5 ) ) ** 2 a = Omegaa * R ** 2 * cmp . Tc ** 2 / cmp . Pc b = Omegab * R * cmp . Tc / cmp . Pc c = Omegac * R * cmp . Tc / cmp . Pc return a * alfa , b , c    