from PyQt5 import QtWidgets class Widget ( QtWidgets . QWidget ) :      def __init__ ( self , config = None , parent = None ) :          super ( Widget , self ) . __init__ ( parent ) layout = QtWidgets . QGridLayout ( self ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 1 , 1 ) colorby = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] self . ElementalColorby = QtWidgets . QComboBox ( ) for c in colorby :              self . ElementalColorby . addItem ( c )  layout . addWidget ( self . ElementalColorby , 1 , 2 ) layout . addWidget ( QtWidgets . QLabel ( QtWidgets . QApplication . translate ( <str> , <str> ) ) , 2 , 1 ) self . ElementalDefinition = QtWidgets . QSpinBox ( ) self . ElementalDefinition . setMaximumWidth ( 50 ) self . ElementalDefinition . setMinimum ( 5 ) layout . addWidget ( self . ElementalDefinition , 2 , 2 ) self . ElementalLog = QtWidgets . QCheckBox ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout . addWidget ( self . ElementalLog , 3 , 1 , 1 , 2 ) layout . addItem ( QtWidgets . QSpacerItem ( 0 , 0 , QtWidgets . QSizePolicy . Expanding , QtWidgets . QSizePolicy . Expanding ) , 4 , 3 ) if config . has_section ( <str> ) :              self . ElementalColorby . setCurrentText ( config . get ( <str> , <str> ) ) self . ElementalDefinition . setValue ( config . getint ( <str> , <str> ) ) self . ElementalLog . setChecked ( config . getboolean ( <str> , <str> ) )   def value ( self , config ) :          if not config . has_section ( <str> ) :              config . add_section ( <str> )  config . set ( <str> , <str> , self . ElementalColorby . currentText ( ) ) config . set ( <str> , <str> , str ( self . ElementalDefinition . value ( ) ) ) config . set ( <str> , <str> , str ( self . ElementalLog . isChecked ( ) ) ) return config   class Dialog ( QtWidgets . QDialog ) :      def __init__ ( self , config = None , parent = None ) :          super ( Dialog , self ) . __init__ ( parent ) self . setWindowTitle ( QtWidgets . QApplication . translate ( <str> , <str> ) ) layout = QtWidgets . QVBoxLayout ( self ) self . widget = Widget ( config ) layout . addWidget ( self . widget ) self . buttonBox = QtWidgets . QDialogButtonBox ( QtWidgets . QDialogButtonBox . Cancel | QtWidgets . QDialogButtonBox . Ok ) self . buttonBox . accepted . connect ( self . accept ) self . buttonBox . rejected . connect ( self . reject ) layout . addWidget ( self . buttonBox )  def value ( self , config ) :          config = self . widget . value ( config ) return config    