from unittest import TestCase from lib import unidades from lib . meos import MEoS class Trans_2_butene ( MEoS ) :      name = <str> CASNumber = <str> formula = <str> synonym = <str> _refPropName = <str> _coolPropName = <str> rhoc = unidades . Density ( 236.37592616 ) Tc = unidades . Temperature ( 428.61 ) Pc = unidades . Pressure ( 4027.3 , <str> ) M = 56.10632 Tt = unidades . Temperature ( 167.6 ) Tb = unidades . Temperature ( 274.03 ) f_acent = 0.21 momentoDipolar = unidades . DipoleMoment ( 0.0 , <str> ) id = 26 Fi1 = { <str> : [ 1 , 2.9988 ] , <str> : [ 0 , 1 ] , <str> : [ 0.5917816 , 2.1427758 ] , <str> : [ 5.3276 , 13.29 , 9.6745 , 0.40087 ] , <str> : [ 362 / Tc , 1603 / Tc , 3729 / Tc , 4527 / Tc ] } lemmon = { <str> : <str> , <str> : <str> <str> , <str> : { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , <str> : 8.314472 , <str> : Fi1 , <str> : <str> , <str> : Tt , <str> : 525.0 , <str> : 50000.0 , <str> : 13.141 , <str> : [ 0.81107 , - 2.8846 , 1.0265 , 0.016591 , 0.086511 , 0.00023256 ] , <str> : [ 1 , 1 , 1 , 2 , 3 , 7 ] , <str> : [ 0.12 , 1.3 , 1.74 , 2.1 , 0.28 , 0.69 ] , <str> : [ 0.22654 , - 0.072182 , - 0.24849 , - 0.071374 , - 0.024737 , 0.011843 ] , <str> : [ 2 , 5 , 1 , 4 , 3 , 4 ] , <str> : [ 0.75 , 2. , 4.4 , 4.7 , 15. , 14. ] , <str> : [ 1 , 1 , 2 , 2 , 3 , 3 ] , <str> : [ 1 ] * 6 } eq = lemmon , _vapor_Pressure = { <str> : 3 , <str> : [ - 7.6226 , 7.9421 , - 6.9631 , - 6.5517 , 3.9584 ] , <str> : [ 1.0 , 1.5 , 1.65 , 4.8 , 5.3 ] } _liquid_Density = { <str> : 1 , <str> : [ 12.452 , - 34.419 , 52.257 , - 42.889 , 15.463 ] , <str> : [ 0.52 , 0.73 , 0.97 , 1.24 , 1.5 ] } _vapor_Density = { <str> : 2 , <str> : [ - 3.1276 , - 6.0548 , - 18.243 , - 60.842 , 135.95 , - 182.70 ] , <str> : [ 0.412 , 1.24 , 3.2 , 7.0 , 10.0 , 11.0 ] }  class Test ( TestCase ) :      def test_shortLemmon ( self ) :          st = Trans_2_butene ( T = 350 , rho = 0 ) self . assertEqual ( round ( st . P . MPa , 4 ) , 0 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , 29959 ) self . assertEqual ( round ( st . cvM . kJkmolK , 3 ) , 89.965 ) self . assertEqual ( round ( st . cpM . kJkmolK , 3 ) , 98.279 ) self . assertEqual ( round ( st . w , 2 ) , 238.03 ) st = Trans_2_butene ( T = 350 , rho = 0.3 * Trans_2_butene . M ) self . assertEqual ( round ( st . P . MPa , 5 ) , 0.74692 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , 28521 ) self . assertEqual ( round ( st . sM . kJkmolK , 3 ) , 86.364 ) self . assertEqual ( round ( st . cvM . kJkmolK , 3 ) , 95.429 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 112.42 ) self . assertEqual ( round ( st . w , 2 ) , 208.86 ) st = Trans_2_butene ( T = 350 , rho = 10 * Trans_2_butene . M ) self . assertEqual ( round ( st . P . MPa , 3 ) , 12.844 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , 10494 ) self . assertEqual ( round ( st . sM . kJkmolK , 3 ) , 29.866 ) self . assertEqual ( round ( st . cvM . kJkmolK , 3 ) , 99.512 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 139.07 ) self . assertEqual ( round ( st . w , 2 ) , 821.74 ) st = Trans_2_butene ( T = 440 , rho = 4 * Trans_2_butene . M ) self . assertEqual ( round ( st . P . MPa , 4 ) , 4.7490 ) self . assertEqual ( round ( st . hM . kJkmol , 0 ) , 29180 ) self . assertEqual ( round ( st . sM . kJkmolK , 3 ) , 78.589 ) self . assertEqual ( round ( st . cvM . kJkmolK , 2 ) , 128.04 ) self . assertEqual ( round ( st . cpM . kJkmolK , 2 ) , 692.14 ) self . assertEqual ( round ( st . w , 2 ) , 139.25 )    