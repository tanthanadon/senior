from scipy . constants import R from lib . EoS . Cubic . PT import PT class PTVC ( PT ) :      <str> __title__ = <str> __status__ = <str> __doi__ = { <str> : <str> , <str> : <str> <str> , <str> : <str> , <str> : <str> } , def _lib ( self , cmp , T ) :          if cmp . Tc != 0 and cmp . Pc != 0 and cmp . Vc != 0 :              Zc = cmp . Pc . kPa * cmp . Vc * cmp . M / R / cmp . Tc  else :              Zc = 0.329032 - 0.076799 * cmp . f_acent + 0.0211947 * cmp . f_acent ** 2  F = - 6.608 + 70.43 * Zc - 159.0 * Zc ** 2 alfa = ( 1 + F * ( 1 - ( T / cmp . Tc ) ** 0.5 ) ) ** 2 Omegaa = 0.69368018 - 1.0634424 * Zc + 0.68289995 * Zc ** 2 - 0.21044403 * Zc ** 3 + 0.003752658 * Zc ** 4 Omegab = 0.025987178 + 0.180754784 * Zc + 0.061258949 * Zc ** 2 Omegac = 0.577500514 - 1.898414283 * Zc a = Omegaa * R ** 2 * cmp . Tc ** 2 / cmp . Pc b = Omegab * R * cmp . Tc / cmp . Pc c = Omegac * R * cmp . Tc / cmp . Pc return a * alfa , b , c    